1655828967
AwuilbDvXz%3Aa998f2580ca9f07129205dba80f88079-d8e8d0389d8053d2d8184481f09dc7d2
s:282028:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImQ4ZThkMDM4OWQ4MDUzZDJkODE4NDQ4MWYwOWRjN2QyIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MzY6ImNsYXNzLWRvLWZyYW1ld29yay1kZWZhdWx0LXBhZ2VzLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjQ1OiJpbmNsdWRlcy9jbGFzcy1kby1mcmFtZXdvcmstZGVmYXVsdC1wYWdlcy5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjExODkyMToiPD9waHAKCnVzZSBET0ZXXFRyYWl0c1xTaW5nbGV0b247CgovKioKICogRGVmYXVsdCBQbHVnaW4gUmVnaXN0ZXJlZCBQYWdlcyBDb250cm9sbGVyLgogKgogKiBAbGluayAgICAgICBodHRwOi8vZGVkdWxhYi5jb20vCiAqIEBzaW5jZSAgICAgIDEuMC4wCiAqCiAqIEBwYWNrYWdlICAgIERvX0ZyYW1ld29yawogKiBAc3VicGFja2FnZSBEb19GcmFtZXdvcmsvaW5jbHVkZXMKICovCgovKioKICogRGVmYXVsdCBQbHVnaW4gUmVnaXN0ZXJlZCBQYWdlcyBDb250cm9sbGVyLgogKgogKiBUaGlzIGNsYXNzIGRlZmluZXMgYWxsIGNvZGUgbmVjZXNzYXJ5IHRvIGhhbmRsZSBkZWZhdWx0IHBsdWdpbiBwYWdlcywgd2hpY2ggYXJlIHJlZ2lzdGVyZWQgaW4KICogbm9ybWFsIG9wZXJhdGlvbiBtb2RlIHdoaWNoIGlzIHByaW1hcmlseSB1c2VkIGZvciBzaG93Y2FzaW5nIHRoZSBwbHVnaW4gY2FwYWJpbGl0aWVzLgogKgogKiBAc2luY2UgICAgICAxLjAuMAogKiBAcGFja2FnZSAgICBEb19GcmFtZXdvcmsKICogQHN1YnBhY2thZ2UgRG9fRnJhbWV3b3JrL2luY2x1ZGVzCiAqIEBhdXRob3IgICAgIERlZHVsYWIgVGVhbSA8aW5mb0BkZWR1bGFiLmNvbT4KICovCmNsYXNzIERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzCnsKICAgIHVzZSBTaW5nbGV0b247CgogICAgLyoqCiAgICAgKiBFbmFibGUgQWRkaW5nIFBhZ2VzLgogICAgICovCiAgICBjb25zdCBFTkFCTEVfUEFHRVMgPSB0cnVlOwoKICAgIC8qKgogICAgICogRW5hYmxlIEFkZGluZyBEZW1vcy4KICAgICAqLwogICAgY29uc3QgRU5BQkxFX0RFTU9TID0gZmFsc2U7CgogICAgLyoqCiAgICAgKiBFbmFibGUgQWRkaW5nIFBsdWdpbnMuCiAgICAgKi8KICAgIGNvbnN0IEVOQUJMRV9QTFVHSU5TID0gZmFsc2U7CgogICAgLyoqCiAgICAgKiBEZWZhdWx0IFBhZ2VzIENvbmZpZ3VyYXRpb24gU3RydWN0dXJlLgogICAgICovCiAgICBjb25zdCBDT05GSUcgPSBbCiAgICAgICAgJ2dlbmVyYWwnID0+IFsKICAgICAgICAgICAgJ2VuYWJsZWQnID0+IHRydWUsCiAgICAgICAgICAgICdpZCcgPT4gJ2RvZnctZ2VuZXJhbCcsCiAgICAgICAgICAgICdwYXJlbnQnID0+IG51bGwsCiAgICAgICAgICAgICdtZW51X3RpdGxlJyA9PiAnRGVkdWxhYicsCiAgICAgICAgICAgICdtZW51X3NpZGVfdGl0bGUnID0+ICdHZW5lcmFsJywKICAgICAgICAgICAgJ3RpdGxlJyA9PiAnR2VuZXJhbCcsCiAgICAgICAgICAgICd0eXBlJyA9PiAnZm9ybScsCiAgICAgICAgICAgICdwb3NpdGlvbicgPT4gMiwKICAgICAgICAgICAgJ2ljb24nID0+IERPRldfSU1BR0VTX1VSTCAuICdkZWR1bGFiLnN2ZycsCiAgICAgICAgICAgICd0YWJfbGluaycgPT4gWwogICAgICAgICAgICAgICAgJ2ljb24nID0+ICdjb2cnLAogICAgICAgICAgICBdLAogICAgICAgIF0sCiAgICAgICAgJ2RlbW9zJyA9PiBbCiAgICAgICAgICAgICdlbmFibGVkJyA9PiBmYWxzZSwKICAgICAgICAgICAgJ2lkJyA9PiAnZG9mdy1kZW1vcycsCiAgICAgICAgICAgICdwYXJlbnQnID0+ICdkb2Z3LWdlbmVyYWwnLAogICAgICAgICAgICAnbWVudV90aXRsZScgPT4gJ0RlbW9zJywKICAgICAgICAgICAgJ3RpdGxlJyA9PiAnRGVtb3MnLAogICAgICAgICAgICAndHlwZScgPT4gJ2RlbW9zJywKICAgICAgICAgICAgJ3Bvc2l0aW9uJyA9PiAwLAogICAgICAgICAgICAndGFiX2xpbmsnID0+IFsKICAgICAgICAgICAgICAgICdpY29uJyA9PiAnc3dhdGNoYm9vaycsCiAgICAgICAgICAgIF0sCiAgICAgICAgXSwKICAgICAgICAncGx1Z2lucycgPT4gWwogICAgICAgICAgICAnZW5hYmxlZCcgPT4gZmFsc2UsCiAgICAgICAgICAgICdpZCcgPT4gJ2RvZnctcGx1Z2lucycsCiAgICAgICAgICAgICdwYXJlbnQnID0+ICdkb2Z3LWdlbmVyYWwnLAogICAgICAgICAgICAnbWVudV90aXRsZScgPT4gJ1BsdWdpbnMnLAogICAgICAgICAgICAndGl0bGUnID0+ICdQbHVnaW5zJywKICAgICAgICAgICAgJ3R5cGUnID0+ICdwbHVnaW5zJywKICAgICAgICAgICAgJ3Bvc2l0aW9uJyA9PiAwLAogICAgICAgICAgICAndGFiX2xpbmsnID0+IFsKICAgICAgICAgICAgICAgICdpY29uJyA9PiAncGx1ZycsCiAgICAgICAgICAgIF0sCiAgICAgICAgXSwKICAgICAgICAndGhlbWUnID0+IFsKICAgICAgICAgICAgJ2VuYWJsZWQnID0+IGZhbHNlLAogICAgICAgICAgICAnaWQnID0+ICdkb2Z3LXRoZW1lJywKICAgICAgICAgICAgJ3BhcmVudCcgPT4gJ2RvZnctZ2VuZXJhbCcsCiAgICAgICAgICAgICdtZW51X3RpdGxlJyA9PiAnVGhlbWUgU3R5bGVzJywKICAgICAgICAgICAgJ3RpdGxlJyA9PiAnVGhlbWUgU3R5bGVzJywKICAgICAgICAgICAgJ3R5cGUnID0+ICdmb3JtJywKICAgICAgICAgICAgJ3Bvc2l0aW9uJyA9PiAwLAogICAgICAgICAgICAndGFiX2xpbmsnID0+IFsKICAgICAgICAgICAgICAgICdpY29uJyA9PiAncGFpbnQgYnJ1c2gnLAogICAgICAgICAgICBdLAogICAgICAgIF0sCiAgICAgICAgJ2FkdmFuY2VkJyA9PiBbCiAgICAgICAgICAgICdlbmFibGVkJyA9PiB0cnVlLAogICAgICAgICAgICAnaWQnID0+ICdkb2Z3LWFkdmFuY2VkJywKICAgICAgICAgICAgJ3BhcmVudCcgPT4gJ2RvZnctZ2VuZXJhbCcsCiAgICAgICAgICAgICdtZW51X3RpdGxlJyA9PiAnQWR2YW5jZWQnLAogICAgICAgICAgICAndGl0bGUnID0+ICdBZHZhbmNlZCcsCiAgICAgICAgICAgICd0eXBlJyA9PiAnZm9ybScsCiAgICAgICAgICAgICdwb3NpdGlvbicgPT4gMCwKICAgICAgICAgICAgJ3RhYl9saW5rJyA9PiBbCiAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2NvZ3MnLAogICAgICAgICAgICBdLAogICAgICAgIF0sCiAgICAgICAgJ2JhY2t1cCcgPT4gWwogICAgICAgICAgICAnZW5hYmxlZCcgPT4gdHJ1ZSwKICAgICAgICAgICAgJ2lkJyA9PiAnZG9mdy1iYWNrdXAnLAogICAgICAgICAgICAncGFyZW50JyA9PiAnZG9mdy1nZW5lcmFsJywKICAgICAgICAgICAgJ21lbnVfdGl0bGUnID0+ICdCYWNrdXAnLAogICAgICAgICAgICAndGl0bGUnID0+ICdCYWNrdXAnLAogICAgICAgICAgICAndHlwZScgPT4gJ2JhY2t1cCcsCiAgICAgICAgICAgICdwb3NpdGlvbicgPT4gMCwKICAgICAgICAgICAgJ3RhYl9saW5rJyA9PiBbCiAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2hpc3RvcnknLAogICAgICAgICAgICBdLAogICAgICAgIF0sCiAgICAgICAgJ2Rhc2hib2FyZCcgPT4gWwogICAgICAgICAgICAnZW5hYmxlZCcgPT4gdHJ1ZSwKICAgICAgICAgICAgJ2lkJyA9PiAnZG9mdy1kYXNoYm9hcmQnLAogICAgICAgICAgICAncGFyZW50JyA9PiAnZG9mdy1nZW5lcmFsJywKICAgICAgICAgICAgJ21lbnVfdGl0bGUnID0+ICdTdXBwb3J0JywKICAgICAgICAgICAgJ3RpdGxlJyA9PiAnU3VwcG9ydCcsCiAgICAgICAgICAgICd0eXBlJyA9PiAnZGFzaGJvYXJkJywKICAgICAgICAgICAgJ3Bvc2l0aW9uJyA9PiAwLAogICAgICAgICAgICAndGFiX2xpbmsnID0+IFsKICAgICAgICAgICAgICAgICdpY29uJyA9PiAncXVlc3Rpb24gY2lyY2xlJywKICAgICAgICAgICAgXSwKICAgICAgICBdLAogICAgXTsKCiAgICAvKioKICAgICAqIERlZmF1bHQgRGVtb3MgTGlzdC4KICAgICAqLwogICAgY29uc3QgREVNT1MgPSBbCiAgICAgICAgJ21haW4nID0+IFsKICAgICAgICAgICAgJ2VuYWJsZWQnID0+IHRydWUsCiAgICAgICAgICAgICdpc19wcm8nID0+IGZhbHNlLAogICAgICAgICAgICAndGl0bGUnID0+ICdNYWluJywKICAgICAgICAgICAgJ2Rlc2MnID0+ICdNYWluIERlbW8nLAogICAgICAgICAgICAnZGVtb191cmwnID0+ICdodHRwOi8vZGVkdWxhYi5jb20nLAogICAgICAgICAgICAnc2NyZWVuc2hvdF91cmwnID0+ICdodHRwczovL3BpY3N1bS5waG90b3MvMzg1LzMyMD8xJywKICAgICAgICAgICAgJ3BsdWdpbnMnID0+IFsKICAgICAgICAgICAgICAgIFsgJ25hbWUnID0+ICdFbGVtZW50b3InLCAnc2x1ZycgPT4gJ2VsZW1lbnRvcicgXSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgJ3RlbXBsYXRlX3VybCcgPT4gWwogICAgICAgICAgICAgICAgJ2NvbnRlbnQnID0+ICcnLAogICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+ICcnLAogICAgICAgICAgICAgICAgJ3dpZGdldHMnID0+ICcnLAogICAgICAgICAgICBdLAogICAgICAgIF0sCiAgICAgICAgJ3ByZXNjaG9vbCcgPT4gWwogICAgICAgICAgICAnZW5hYmxlZCcgPT4gdHJ1ZSwKICAgICAgICAgICAgJ2lzX3BybycgPT4gZmFsc2UsCiAgICAgICAgICAgICd0aXRsZScgPT4gJ1ByZXNjaG9vbCcsCiAgICAgICAgICAgICdkZXNjJyA9PiAnUHJlc2Nob29sIERlbW8nLAogICAgICAgICAgICAnZGVtb191cmwnID0+ICdodHRwOi8vZGVkdWxhYi5jb20nLAogICAgICAgICAgICAnc2NyZWVuc2hvdF91cmwnID0+ICdodHRwczovL3BpY3N1bS5waG90b3MvMzg1LzMyMD8yJywKICAgICAgICAgICAgJ3BsdWdpbnMnID0+IFsKICAgICAgICAgICAgICAgIFsgJ25hbWUnID0+ICdFbGVtZW50b3InLCAnc2x1ZycgPT4gJ2VsZW1lbnRvcicgXSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgJ3RlbXBsYXRlX3VybCcgPT4gWwogICAgICAgICAgICAgICAgJ2NvbnRlbnQnID0+ICcnLAogICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+ICcnLAogICAgICAgICAgICAgICAgJ3dpZGdldHMnID0+ICcnLAogICAgICAgICAgICBdLAogICAgICAgIF0sCiAgICAgICAgJ3J0bCcgPT4gWwogICAgICAgICAgICAnZW5hYmxlZCcgPT4gdHJ1ZSwKICAgICAgICAgICAgJ2lzX3BybycgPT4gZmFsc2UsCiAgICAgICAgICAgICd0aXRsZScgPT4gJ0FyYWJpYyBSVEwnLAogICAgICAgICAgICAnZGVzYycgPT4gJ0FyYWJpYyBEZW1vIFJUTCcsCiAgICAgICAgICAgICdkZW1vX3VybCcgPT4gJ2h0dHA6Ly9kZWR1bGFiLmNvbScsCiAgICAgICAgICAgICdzY3JlZW5zaG90X3VybCcgPT4gJ2h0dHBzOi8vcGljc3VtLnBob3Rvcy8zODUvMzIwPzMnLAogICAgICAgICAgICAncGx1Z2lucycgPT4gWwogICAgICAgICAgICAgICAgWyAnbmFtZScgPT4gJ0VsZW1lbnRvcicsICdzbHVnJyA9PiAnZWxlbWVudG9yJyBdLAogICAgICAgICAgICBdLAogICAgICAgICAgICAndGVtcGxhdGVfdXJsJyA9PiBbCiAgICAgICAgICAgICAgICAnY29udGVudCcgPT4gJycsCiAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gJycsCiAgICAgICAgICAgICAgICAnd2lkZ2V0cycgPT4gJycsCiAgICAgICAgICAgIF0sCiAgICAgICAgXSwKICAgIF07CgogICAgLyoqCiAgICAgKiBEZWZhdWx0IFJlcXVpcmVkIFBsdWdpbnMgTGlzdC4KICAgICAqLwogICAgY29uc3QgUkVRVUlSRURfUExVR0lOUyA9IFsKICAgICAgICAnZWxlbWVudG9yJyA9PiBbCiAgICAgICAgICAgICdlbmFibGVkJyA9PiB0cnVlLAogICAgICAgICAgICAnaWNvbicgPT4gJ2h0dHBzOi8vcHMudy5vcmcvZWxlbWVudG9yL2Fzc2V0cy9pY29uLTI1NngyNTYucG5nJywKICAgICAgICAgICAgJ3NvdXJjZScgPT4gJ2h0dHBzOi8vZG93bmxvYWRzLndvcmRwcmVzcy5vcmcvcGx1Z2luL2VsZW1lbnRvci4zLjIuNC56aXAnLAogICAgICAgICAgICAnbmFtZScgPT4gJ0VsZW1lbnRvcicsCiAgICAgICAgICAgICdkZXNjJyA9PiAnVGhlIEVsZW1lbnRvciBXZWJzaXRlIEJ1aWxkZXIgaGFzIGl0IGFsbDogZHJhZyBhbmQgZHJvcCBwYWdlIGJ1aWxkZXIsIHBpeGVsIHBlcmZlY3QgZGVzaWduLCBtb2JpbGUgcmVzcG9uc2l2ZSBlZGl0aW5nLCBhbmQgbW9yZS4gR2V0IHN0YXJ0ZWQgbm93IScsCiAgICAgICAgXSwKICAgICAgICAnYWNmLWV4dGVuZGVkJyA9PiBbCiAgICAgICAgICAgICdlbmFibGVkJyA9PiB0cnVlLAogICAgICAgICAgICAnaWNvbicgPT4gJ2h0dHBzOi8vcHMudy5vcmcvYWNmLWV4dGVuZGVkL2Fzc2V0cy9pY29uLTEyOHgxMjgucG5nJywKICAgICAgICAgICAgJ3NvdXJjZScgPT4gJ2h0dHBzOi8vZG93bmxvYWRzLndvcmRwcmVzcy5vcmcvcGx1Z2luL2FjZi1leHRlbmRlZC4wLjguOC4zLnppcCcsCiAgICAgICAgICAgICduYW1lJyA9PiAnQWR2YW5jZWQgQ3VzdG9tIEZpZWxkcycsCiAgICAgICAgICAgICdkZXNjJyA9PiAnQ3VzdG9taXplIFdvcmRQcmVzcyB3aXRoIHBvd2VyZnVsLCBwcm9mZXNzaW9uYWwgYW5kIGludHVpdGl2ZSBmaWVsZHMuJywKICAgICAgICBdLAogICAgICAgIC8vICd0YycgPT4gWwogICAgICAgIC8vICAgICAnZW5hYmxlZCcgPT4gdHJ1ZSwKICAgICAgICAvLyAgICAgJ2ljb24nID0+ICdodHRwczovL3RhZHJlZXNqby5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDcvVGFkcmVlcy1FbWJsZW0tMDMtMzAweDMwMC5wbmcnLAogICAgICAgIC8vICAgICAnc291cmNlJyA9PiAnIycsCiAgICAgICAgLy8gICAgICduYW1lJyA9PiAnVGFkcmVlcyBDb3JlJywKICAgICAgICAvLyAgICAgJ2Rlc2MnID0+ICdUaGUgRWxlbWVudG9yIFdlYnNpdGUgQnVpbGRlciBoYXMgaXQgYWxsOiBkcmFnIGFuZCBkcm9wIHBhZ2UgYnVpbGRlciwgcGl4ZWwgcGVyZmVjdCBkZXNpZ24sIG1vYmlsZSByZXNwb25zaXZlIGVkaXRpbmcsIGFuZCBtb3JlLiBHZXQgc3RhcnRlZCBub3chJywKICAgICAgICAvLyBdLAogICAgXTsKCiAgICAvKioKICAgICAqIERlZmF1bHQgUmVjb21tZW5kZWQgUGx1Z2lucyBMaXN0LgogICAgICovCiAgICBjb25zdCBSRUNPTU1FTkRFRF9QTFVHSU5TID0gWwogICAgICAgICdyZWdlbmVyYXRlLXRodW1ibmFpbHMnID0+IFsKICAgICAgICAgICAgJ2VuYWJsZWQnID0+IHRydWUsCiAgICAgICAgICAgICdpY29uJyA9PiAnaHR0cHM6Ly9wcy53Lm9yZy9yZWdlbmVyYXRlLXRodW1ibmFpbHMvYXNzZXRzL2ljb24tMTI4eDEyOC5wbmcnLAogICAgICAgICAgICAnc291cmNlJyA9PiAnaHR0cHM6Ly9kb3dubG9hZHMud29yZHByZXNzLm9yZy9wbHVnaW4vcmVnZW5lcmF0ZS10aHVtYm5haWxzLjMuMS41LnppcCcsCiAgICAgICAgICAgICduYW1lJyA9PiAnUmVnZW5lcmF0ZSBUaHVtYm5haWxzJywKICAgICAgICAgICAgJ2Rlc2MnID0+ICdSZWdlbmVyYXRlIFRodW1ibmFpbHMgYWxsb3dzIHlvdSB0byByZWdlbmVyYXRlIGFsbCB0aHVtYm5haWwgc2l6ZXMgZm9yIG9uZSBvciBtb3JlIGltYWdlcyB0aGF0IGhhdmUgYmVlbiB1cGxvYWRlZCB0byB5b3VyIE1lZGlhIExpYnJhcnkuJywKICAgICAgICBdLAogICAgICAgICdjb250YWN0LWZvcm0tNycgPT4gWwogICAgICAgICAgICAnZW5hYmxlZCcgPT4gdHJ1ZSwKICAgICAgICAgICAgJ2ljb24nID0+ICdodHRwczovL3BzLncub3JnL2NvbnRhY3QtZm9ybS03L2Fzc2V0cy9pY29uLnN2ZycsCiAgICAgICAgICAgICdzb3VyY2UnID0+ICdodHRwczovL2Rvd25sb2Fkcy53b3JkcHJlc3Mub3JnL3BsdWdpbi9jb250YWN0LWZvcm0tNy41LjQuMS56aXAnLAogICAgICAgICAgICAnbmFtZScgPT4gJ0NvbnRhY3QgRm9ybSA3JywKICAgICAgICAgICAgJ2Rlc2MnID0+ICdDb250YWN0IEZvcm0gNyBjYW4gbWFuYWdlIG11bHRpcGxlIGNvbnRhY3QgZm9ybXMsIHBsdXMgeW91IGNhbiBjdXN0b21pemUgdGhlIGZvcm0gYW5kIHRoZSBtYWlsIGNvbnRlbnRzIGZsZXhpYmx5IHdpdGggc2ltcGxlIG1hcmt1cC4gJywKICAgICAgICBdLAogICAgICAgICdtZW51LWljb25zJyA9PiBbCiAgICAgICAgICAgICdlbmFibGVkJyA9PiB0cnVlLAogICAgICAgICAgICAnaWNvbicgPT4gJ2h0dHBzOi8vcHMudy5vcmcvbWVudS1pY29ucy9hc3NldHMvaWNvbi0xMjh4MTI4LnBuZycsCiAgICAgICAgICAgICdzb3VyY2UnID0+ICdodHRwczovL2Rvd25sb2Fkcy53b3JkcHJlc3Mub3JnL3BsdWdpbi9tZW51LWljb25zLnppcCcsCiAgICAgICAgICAgICduYW1lJyA9PiAnTWVudSBJY29ucyBieSBUaGVtZUlzbGUnLAogICAgICAgICAgICAnZGVzYycgPT4gJ1RoaXMgcGx1Z2luIGdpdmVzIHlvdSB0aGUgYWJpbGl0eSB0byBhZGQgaWNvbnMgdG8geW91ciBtZW51IGl0ZW1zLCBzaW1pbGFyIHRvIHRoZSBsb29rIG9mIHRoZSBsYXRlc3QgZGFzaGJvYXJkIG1lbnUuJywKICAgICAgICBdLAogICAgXTsKCiAgICAvKioKICAgICAqIERlZmF1bHQgUHJpbWFyeSBQYW5lbCBUaXRsZS4KICAgICAqCiAgICAgKiBAdmFyIHN0cmluZwogICAgICovCiAgICBwdWJsaWMgc3RhdGljICRwcmltYXJ5X3RpdGxlID0gJ0RlZHVsYWInOwoKICAgIC8qKgogICAgICogRGVmYXVsdCBQcmltYXJ5IFBhbmVsIFRpdGxlLgogICAgICoKICAgICAqIEB2YXIgc3RyaW5nCiAgICAgKi8KICAgIHB1YmxpYyBzdGF0aWMgJGRlZmF1bHRfbG9nbyA9ICdkZWR1bGFiLnN2Zyc7CgogICAgLyoqCiAgICAgKiBJdGVtIFN0b3JlIElELgogICAgICoKICAgICAqIEB2YXIgYXJyYXkKICAgICAqLwogICAgcHVibGljIHN0YXRpYyAkaXRlbV9zdG9yZV9pZCA9ICctMSc7CgogICAgLyoqCiAgICAgKiBJdGVtIFN0b3JlIExpbmsuCiAgICAgKgogICAgICogQHZhciBhcnJheQogICAgICovCiAgICBwdWJsaWMgc3RhdGljICRpdGVtX3N0b3JlX2xpbmsgPSAnaHR0cHM6Ly9lbnZhdG8uY29tJzsKCiAgICAvKioKICAgICAqIE1haW4gU3VwcG9ydCBMaW5rLgogICAgICoKICAgICAqIEB2YXIgYXJyYXkKICAgICAqLwogICAgcHVibGljIHN0YXRpYyAkbWFpbl9zdXBwb3J0X2xpbmsgPSAnIyc7CgogICAgLyoqCiAgICAgKiBEaXJlY3QgU3VwcG9ydCBMaW5rIChDb250YWN0KS4KICAgICAqCiAgICAgKiBAdmFyIGFycmF5CiAgICAgKi8KICAgIHB1YmxpYyBzdGF0aWMgJGNvbnRhY3Rfc3VwcG9ydF9saW5rID0gJyMnOwoKICAgIC8qKgogICAgICogS25vd2xlZGdlIEJhc2UgTGlua3MuCiAgICAgKgogICAgICogQHZhciBhcnJheQogICAgICovCiAgICBwdWJsaWMgc3RhdGljICRrYl9saW5rcyA9IFsKICAgICAgICAnI2dldHRpbmctc3RhcnRlZCcgPT4gJ0dldHRpbmcgU3RhcnRlZCcsCiAgICAgICAgJyNnZXR0aW5nLWhlbHAnID0+ICdHZXR0aW5nIEhlbHAnLAogICAgICAgICcjbWFpbnRlbmFuY2UnID0+ICdNYWludGVuYW5jZScsCiAgICAgICAgJyNwbHVnaW5zLWFuZC1hZGQtb25zJyA9PiAnUGx1Z2lucyBhbmQgQWRkLW9ucycsCiAgICAgICAgJyNjdXN0b21pemVyJyA9PiAnQ3VzdG9taXplcicsCiAgICAgICAgJyN0cm91Ymxlc2hvb3RpbmcnID0+ICdUcm91Ymxlc2hvb3RpbmcnLAogICAgICAgICcjaGVhZGVyJyA9PiAnSGVhZGVyJywKICAgICAgICAnI2Zvb3RlcicgPT4gJ0Zvb3RlcicsCiAgICAgICAgJyNsb2dvJyA9PiAnTG9nbycsCiAgICAgICAgJyNzaWRlYmFyJyA9PiAnU2lkZWJhcicsCiAgICAgICAgJyNibG9nJyA9PiAnQmxvZycsCiAgICAgICAgJyNwYWdlLW9wdGlvbnMnID0+ICdQYWdlIE9wdGlvbnMnLAogICAgICAgICcjdHJhbnNsYXRpb24nID0+ICdUcmFuc2xhdGlvbicsCiAgICAgICAgJyN2aWRlby10dXRvcmlhbHMnID0+ICdWaWRlbyBUdXRvcmlhbHMnLAogICAgICAgICcjZGV2ZWxvcG1lbnQnID0+ICdEZXZlbG9wbWVudCcsCiAgICBdOwoKICAgIC8qKgogICAgICogU3RvcmVkIHBhZ2VzIGNvbmZpZ3VyYXRpb24uCiAgICAgKgogICAgICogQHZhciBhcnJheQogICAgICovCiAgICBwcm90ZWN0ZWQgJF9jb25maWcgPSBbXTsKCiAgICAvKioKICAgICAqIFJ1biBoYW5kbGVycy4KICAgICAqCiAgICAgKiBAc2luY2UgICAgMS4wLjAKICAgICAqIEBwYXJhbSBhcnJheSAkY29uZmlnIERlZmF1bHQgUGFnZXMgQ29uZmlndXJhdGlvbgogICAgICogQHJldHVybiBEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlcwogICAgICoKICAgICAqIEBleGFtcGxlICRjb25maWcgSGVyZSBpcyBhbiBleGFtcGxlIG9mIGNvbmZpZ3VyYXRpb25zIGFycmF5OgogICAgICoKICAgICAqIGBgYHBocAogICAgICogJGNvbmZpZyA9IFsKICAgICAqICAgICAgLy8gT3ZlcnJpZGUgZGFzaGJvYXJkIHBhZ2Ugb3B0aW9ucwogICAgICogICAgICAnZGFzaGJvYXJkJyA9PiBbICdlbmFibGVkJyA9PiB0cnVlIF0sCiAgICAgKgogICAgICogICAgICAvLyBPdmVycmlkZSBkZW1vcyBwYWdlIG9wdGlvbnMKICAgICAqICAgICAgJ2RlbW9zJyA9PiBbICdlbmFibGVkJyA9PiB0cnVlIF0sCiAgICAgKgogICAgICogICAgICAvLyBPdmVycmlkZSBwbHVnaW5zIHBhZ2Ugb3B0aW9ucwogICAgICogICAgICAncGx1Z2lucycgPT4gWyAnZW5hYmxlZCcgPT4gdHJ1ZSBdLAogICAgICoKICAgICAqICAgICAgLy8gT3ZlcnJpZGUgZ2VuZXJhbCBwYWdlIG9wdGlvbnMKICAgICAqICAgICAgJ2dlbmVyYWwnID0+IFsgJ2VuYWJsZWQnID0+IGZhbHNlIF0sCiAgICAgKgogICAgICogICAgICAvLyBPdmVycmlkZSBhZHZhbmNlZCBwYWdlIG9wdGlvbnMKICAgICAqICAgICAgJ2FkdmFuY2VkJyA9PiBbICdlbmFibGVkJyA9PiBmYWxzZSBdLAogICAgICoKICAgICAqICAgICAgLy8gT3ZlcnJpZGUgYmFja3VwIHBhZ2Ugb3B0aW9ucwogICAgICogICAgICAnYmFja3VwJyA9PiBbICdlbmFibGVkJyA9PiBmYWxzZSBdLAogICAgICogXTsKICAgICAqIGBgYAogICAgICovCiAgICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHJ1bihhcnJheSAkY29uZmlnID0gW10pCiAgICB7CiAgICAgICAgaWYgKGlzX2FkbWluKCkgPT09IGZhbHNlKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgICRpbnN0YW5jZSA9IHN0YXRpYzo6Z2V0X2luc3RhbmNlKCk7CgogICAgICAgICRpbnN0YW5jZQogICAgICAgICAgICAtPnNldHVwX2l0ZW0oKQogICAgICAgICAgICAtPnJlZ2lzdGVyX3BhZ2VzKCRjb25maWcpOwoKICAgICAgICByZXR1cm4gJGluc3RhbmNlOwogICAgfQoKICAgIC8qKgogICAgICogU2V0dXAgaXRlbSBpbmZvcm1hdGlvbi4KICAgICAqCiAgICAgKiBAcmV0dXJuIHNlbGYKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHNldHVwX2l0ZW0oKQogICAgewogICAgICAgICRsb2dvID0gc3RhdGljOjokZGVmYXVsdF9sb2dvOwogICAgICAgICRsb2dvID0gc3Ryc3RyKCRsb2dvLCAnOi8vJykgIT09IGZhbHNlID8gJGxvZ28gOiBkb2Z3X2Fzc2V0KCRsb2dvLCAnaW1nJyk7CiAgICAgICAgJHRpdGxlID0gX18oc3RhdGljOjokcHJpbWFyeV90aXRsZSwgJ2RvLWZyYW1ld29yaycpOwoKICAgICAgICAvLyBTZXQgZGVmYXVsdCBwYW5lbCBsb2dvLgogICAgICAgIGRvZndfbG9nbygkbG9nbyk7CgogICAgICAgIC8vIFNldCBkZWZhdWx0IHBhbmVsIHRpdGxlLgogICAgICAgIGRvZndfcHJpbWFyeV90aXRsZSgkdGl0bGUpOwoKICAgICAgICAvLyBBZGQgSXRlbSBTdG9yZSBJbmZvCiAgICAgICAgZG9mdygpLT5zZXRfc3RvcmVfaWQoc3RhdGljOjokaXRlbV9zdG9yZV9pZCk7CiAgICAgICAgZG9mdygpLT5zZXRfc3RvcmVfbGluayhzdGF0aWM6OiRpdGVtX3N0b3JlX2xpbmspOwoKICAgICAgICAvLyBBZGQgU3VwcG9ydCBMaW5rcwogICAgICAgIGRvZncoKS0+c2V0X3N1cHBvcnRfbGluaygnbWFpbicsIHN0YXRpYzo6JG1haW5fc3VwcG9ydF9saW5rKTsKICAgICAgICBkb2Z3KCktPnNldF9zdXBwb3J0X2xpbmsoJ2NvbnRhY3QnLCBzdGF0aWM6OiRjb250YWN0X3N1cHBvcnRfbGluayk7CgogICAgICAgIC8vIEFkZCBLQiBMaW5rcwogICAgICAgIGRvZncoKS0+YWRkX2tiX2xpbmtzKHN0YXRpYzo6JGtiX2xpbmtzKTsKCiAgICAgICAgcmV0dXJuICR0aGlzOwogICAgfQoKICAgIC8qKgogICAgICogUmVnaXN0ZXIgdGhlIGRlZmF1bHQgcGx1Z2luIHBhZ2VzLgogICAgICoKICAgICAqIEBwYXJhbSBhcnJheSAkY29uZmlnIERlZmF1bHQgUGFnZXMgQ29uZmlndXJhdGlvbgogICAgICogQHJldHVybiBzZWxmCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiByZWdpc3Rlcl9wYWdlcyhhcnJheSAkY29uZmlnID0gW10pCiAgICB7CiAgICAgICAgLy8gQWRkIGFkbWluIHBhZ2VzLCBhbmQgaXRzIHJlbGV2YW50IGNvbnRlbnQuCiAgICAgICAgJHRoaXMtPl9zZXRfY29uZmlnKCRjb25maWcpCiAgICAgICAgICAgICAgICAtPl9hZGRfcGFnZXMoKQogICAgICAgICAgICAgICAgLT5fYWRkX2RlbW9zKCkKICAgICAgICAgICAgICAgIC0+X2FkZF9wbHVnaW5zKCk7CgogICAgICAgIHJldHVybiAkdGhpczsKICAgIH0KCiAgICAvKioKICAgICAqIEluaXRpYWxpemUgJiBhZGQgcGx1Z2lucy4KICAgICAqCiAgICAgKiBAcmV0dXJuIHNlbGYKICAgICAqLwogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIF9hZGRfcGx1Z2lucygpCiAgICB7CiAgICAgICAgaWYgKHN0YXRpYzo6RU5BQkxFX1BMVUdJTlMgPT09IGZhbHNlKSB7CiAgICAgICAgICAgIHJldHVybiAkdGhpczsKICAgICAgICB9CgogICAgICAgIGZvcmVhY2ggKHN0YXRpYzo6UkVRVUlSRURfUExVR0lOUyBhcyAkaWQgPT4gJG9wdGlvbnMpIHsKICAgICAgICAgICAgRG9fRnJhbWV3b3JrX1JlZ2lzdHJ5OjphZGRfcmVxdWlyZWRfcGx1Z2luKCRpZCwgJG9wdGlvbnMpOwogICAgICAgIH0KCiAgICAgICAgZm9yZWFjaCAoc3RhdGljOjpSRUNPTU1FTkRFRF9QTFVHSU5TIGFzICRpZCA9PiAkb3B0aW9ucykgewogICAgICAgICAgICBEb19GcmFtZXdvcmtfUmVnaXN0cnk6OmFkZF9yZWNvbW1lbmRlZF9wbHVnaW4oJGlkLCAkb3B0aW9ucyk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJHRoaXM7CiAgICB9CgogICAgLyoqCiAgICAgKiBJbml0aWFsaXplICYgYWRkIGRlbW9zLgogICAgICoKICAgICAqIEByZXR1cm4gc2VsZgogICAgICovCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gX2FkZF9kZW1vcygpCiAgICB7CiAgICAgICAgaWYgKHN0YXRpYzo6RU5BQkxFX0RFTU9TID09PSBmYWxzZSkgewogICAgICAgICAgICByZXR1cm4gJHRoaXM7CiAgICAgICAgfQoKICAgICAgICBmb3JlYWNoIChzdGF0aWM6OkRFTU9TIGFzICRpZCA9PiAkb3B0aW9ucykgewogICAgICAgICAgICBEb19GcmFtZXdvcmtfUmVnaXN0cnk6OmFkZF9kZW1vKCRpZCwgJG9wdGlvbnMpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICR0aGlzOwogICAgfQoKICAgIC8qKgogICAgICogSW5pdGlhbGl6ZSAmIGFkZCBwYWdlcy4KICAgICAqCiAgICAgKiBAcmV0dXJuIHNlbGYKICAgICAqLwogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIF9hZGRfcGFnZXMoKQogICAgewogICAgICAgIGlmIChzdGF0aWM6OkVOQUJMRV9QQUdFUyA9PT0gZmFsc2UpIHsKICAgICAgICAgICAgcmV0dXJuICR0aGlzOwogICAgICAgIH0KCiAgICAgICAgZm9yZWFjaCAoJHRoaXMtPl9jb25maWcgYXMgJG9wdGlvbnMpIHsKICAgICAgICAgICAgaWYgKCRvcHRpb25zWydlbmFibGVkJ10gPT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdW5zZXQoJG9wdGlvbnNbJ2VuYWJsZWQnXSk7CgogICAgICAgICAgICBmb3JlYWNoIChbJ3RpdGxlJywgJ21lbnVfdGl0bGUnLCAnbWVudV9zaWRlX3RpdGxlJ10gYXMgJHZhcikgewogICAgICAgICAgICAgICAgaWYgKGlzc2V0KCRvcHRpb25zWyR2YXJdKSkgewogICAgICAgICAgICAgICAgICAgICRvcHRpb25zWyR2YXJdID0gX18oJG9wdGlvbnNbJHZhcl0sICdkby1mcmFtZXdvcmsnKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgZG9md19hZG1pbl9wYWdlKCRvcHRpb25zKTsKICAgICAgICB9CgogICAgICAgICR0aGlzLT5fYWRkX3BhZ2VzX3NlY3Rpb25zKCk7CiAgICAgICAgJHRoaXMtPl9hZGRfcGFnZXNfZmllbGRzKCk7CgogICAgICAgIHJldHVybiAkdGhpczsKICAgIH0KCiAgICAvKioKICAgICAqIEFkZCBwYWdlcycgc2VjdGlvbnMuCiAgICAgKgogICAgICogQHJldHVybiBzZWxmCiAgICAgKi8KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBfYWRkX3BhZ2VzX3NlY3Rpb25zKCkKICAgIHsKICAgICAgICByZXR1cm4gJHRoaXMKICAgICAgICAgICAgLT5fYWRkX2dlbmVyYWxfc2VjdGlvbnMoKQogICAgICAgICAgICAtPl9hZGRfdGhlbWVfc2VjdGlvbnMoKQogICAgICAgICAgICAtPl9hZGRfYWR2YW5jZWRfc2VjdGlvbnMoKTsKICAgIH0KCiAgICAvKioKICAgICAqIEFkZCBwYWdlcycgZmllbGRzLgogICAgICoKICAgICAqIEByZXR1cm4gc2VsZgogICAgICovCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gX2FkZF9wYWdlc19maWVsZHMoKQogICAgewogICAgICAgIHJldHVybiAkdGhpcwogICAgICAgICAgICAtPl9hZGRfZ2VuZXJhbF9maWVsZHMoKQogICAgICAgICAgICAtPl9hZGRfdGhlbWVfZmllbGRzKCkKICAgICAgICAgICAgLT5fYWRkX2FkdmFuY2VkX2ZpZWxkcygpOwogICAgfQoKICAgIC8qKgogICAgICogQWRkIEdlbmVyYWwgUGFnZSBTZWN0aW9ucy4KICAgICAqCiAgICAgKiBAcmV0dXJuIHNlbGYKICAgICAqLwogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIF9hZGRfZ2VuZXJhbF9zZWN0aW9ucygpCiAgICB7CiAgICAgICAgaWYgKCR0aGlzLT5fcGFnZV9lbmFibGVkKCdkb2Z3LWdlbmVyYWwnKSkgewogICAgICAgICAgICBkb2Z3X2dldF9wYWdlKCdkb2Z3LWdlbmVyYWwnKS0+YWRkX3NlY3Rpb25zKFsKICAgICAgICAgICAgICAgICdsb2dvJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiAnTG9nbycsCiAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdjYW1lcmEgcmV0cm8nLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdoZWFkZXInID0+IFsKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+ICdIZWFkZXInLAogICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAnaGVhZGluZycsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2Zvb3RlcicgPT4gWwogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gJ0Zvb3RlcicsCiAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdzaG9lIHByaW50cycsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgLy8gJ2J1aWxkZXInID0+IFsKICAgICAgICAgICAgICAgIC8vICAgICAnbGFiZWwnID0+ICdCdWlsZGVyJywKICAgICAgICAgICAgICAgIC8vICAgICAnaWNvbicgPT4gJ2luZHVzdHJ5JywKICAgICAgICAgICAgICAgIC8vIF0sCiAgICAgICAgICAgICAgICAnbnVtYmVycycgPT4gWwogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gJ051bWJlcnMnLAogICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAnY29tbWVudCBkb2xsYXInLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICd0ZXh0YXJlYXMnID0+IFsKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+ICdUZXh0YXJlYScsCiAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdmb250JywKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZWRpdG9ycycgPT4gWwogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gJ0VkaXRvcnMnLAogICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAncGVuIHNxdWFyZScsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3N3aXRjaGVzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiAnU3dpdGNoJywKICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ3RvZ2dsZSBvbicsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2NoZWNrYm94ZXMnID0+IFsKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+ICdDaGVja2JveCAmIFJhZGlvJywKICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2NoZWNrIHNxdWFyZScsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2RhdGV0aW1lcycgPT4gWwogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gJ0RhdGUgLyBUaW1lJywKICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2NhbGVuZGFyIGRheScsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2ltYWdlX3NlbGVjdHMnID0+IFsKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+ICdJbWFnZSBTZWxlY3QnLAogICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAnaW1hZ2UnLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdkcm9wZG93bnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+ICdTZWxlY3QgRHJvcGRvd24nLAogICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAnY2FyZXQgc3F1YXJlIGRvd24nLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdwaWNrZXJzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiAnQ29sb3IgJiBJY29uIFBpY2tlcnMnLAogICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAnZXllIGRyb3BwZXInLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdmaWxlcycgPT4gWwogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gJ0ZpbGUgVXBsb2FkJywKICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2ZpbGUgdXBsb2FkJywKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAvLyAnb2VtYmVkJyA9PiBbCiAgICAgICAgICAgICAgICAvLyAgICAgJ2xhYmVsJyA9PiAnb0VtYmVkJywKICAgICAgICAgICAgICAgIC8vICAgICAnaWNvbicgPT4gJ2NhbWVyYScsCiAgICAgICAgICAgICAgICAvLyBdLAogICAgICAgICAgICBdKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiAkdGhpczsKICAgIH0KCiAgICAvKioKICAgICAqIEFkZCBHZW5lcmFsIFBhZ2UgRmllbGRzCiAgICAgKgogICAgICogQHJldHVybiBzZWxmCiAgICAgKi8KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBfYWRkX2dlbmVyYWxfZmllbGRzKCkKICAgIHsKICAgICAgICBpZiAoJHRoaXMtPl9wYWdlX2VuYWJsZWQoJ2RvZnctZ2VuZXJhbCcpKSB7CiAgICAgICAgICAgICRnZW5lcmFsID0gZG9md19nZXRfcGFnZSgnZG9mdy1nZW5lcmFsJyk7CgogICAgICAgICAgICAvLyBHZW5lcmFsIFBhZ2UgR3JvdXBzCiAgICAgICAgICAgICRnZW5lcmFsLT5hZGRfZ3JvdXBzKFsKICAgICAgICAgICAgICAgIC8vIExvZ28gU2VjdGlvbgogICAgICAgICAgICAgICAgJ2xvZ29faW1hZ2UnID0+IFsKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2xvZ28nLAogICAgICAgICAgICAgICAgICAgICd0aXRsZScgPT4gX18oJ0xvZ28gSW1hZ2UgU2V0dGluZ3MnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2xvZ29fdGV4dCcgPT4gWwogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnbG9nbycsCiAgICAgICAgICAgICAgICAgICAgJ3RpdGxlJyA9PiBfXygnTG9nbyBUZXh0IFNldHRpbmdzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICAvLyBIZWFkZXIgU2VjdGlvbgogICAgICAgICAgICAgICAgJ2hlYWRlcl9nZW5lcmFsJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdoZWFkZXInLAogICAgICAgICAgICAgICAgICAgICd0aXRsZScgPT4gX18oJ0dlbmVyYWwgSGVhZGVyIFNldHRpbmdzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdoZWFkZXJfYWR2YW5jZWQnID0+IFsKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2hlYWRlcicsCiAgICAgICAgICAgICAgICAgICAgJ3RpdGxlJyA9PiBfXygnQWR2YW5jZWQgSGVhZGVyIFNldHRpbmdzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgXSk7CgogICAgICAgICAgICAvLyBHZW5lcmFsIEZpZWxkcwogICAgICAgICAgICAkZ2VuZXJhbC0+YWRkX2ZpZWxkcyhbCiAgICAgICAgICAgICAgICAvLyBMb2dvIChJbWFnZSkKICAgICAgICAgICAgICAgICdsb2dvX2ltYWdlJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdmaWxlJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2xvZ28nLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2xvZ29faW1hZ2UnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0RlZmF1bHQgTG9nbycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnbG9nb19tYXJnaW4nID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3NwYWNlJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2xvZ28nLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2xvZ29faW1hZ2UnLAogICAgICAgICAgICAgICAgICAgICdkZWZhdWx0JyA9PiAnMCAwIDAgMCcsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnTG9nbyBNYXJnaW4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ21heF93aWR0aCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnbnVtYmVyJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2xvZ28nLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2xvZ29faW1hZ2UnLAogICAgICAgICAgICAgICAgICAgICdkZWZhdWx0JyA9PiAxNDAsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnTWF4IFdpZHRoJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICd1bml0JyA9PiAncHgnLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ21heF9oZWlnaHQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ251bWJlcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdsb2dvJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdsb2dvX2ltYWdlJywKICAgICAgICAgICAgICAgICAgICAnZGVmYXVsdCcgPT4gNzAsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnTWF4IEhlaWdodCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAndW5pdCcgPT4gJ3B4JywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdsb2dvX3Bvc2l0aW9uJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdpbWFnZV9zZWxlY3QnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnbG9nbycsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnbG9nb19pbWFnZScsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnTG9nbyBQb3NpdGlvbicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVmYXVsdCcgPT4gJ2xlZnQnLAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnbGVmdCcgPT4gZG9md19hc3NldCgnc2FtcGxlL3Bvc2l0aW9ucy9sZWZ0LnN2ZycpLAogICAgICAgICAgICAgICAgICAgICAgICAnY2VudGVyJyA9PiBkb2Z3X2Fzc2V0KCdzYW1wbGUvcG9zaXRpb25zL2NlbnRlci5zdmcnKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ3JpZ2h0JyA9PiBkb2Z3X2Fzc2V0KCdzYW1wbGUvcG9zaXRpb25zL3JpZ2h0LnN2ZycpLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAoKICAgICAgICAgICAgICAgIC8vIExvZ28gKFRleHQpCiAgICAgICAgICAgICAgICAndGV4dF9sb2dvX2VuYWJsZWQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3N3aXRjaCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdsb2dvJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdsb2dvX3RleHQnLAogICAgICAgICAgICAgICAgICAgICdkZWZhdWx0JyA9PiAndHJ1ZScsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnVXNlIFRleHQgTG9nbycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ0VuYWJsZSB0byB1c2UgdGV4dCBsb2dvLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnbG9nb190ZXh0JyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICd0ZXh0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2xvZ28nLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2xvZ29fdGV4dCcsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnVGV4dCBMb2dvJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiAxMiwKICAgICAgICAgICAgICAgICAgICAnc2hvd19pZicgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAndGV4dF9sb2dvX2VuYWJsZWQnID0+ICd0cnVlJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdsb2dvX2FsaWduJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdhbGlnbicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdsb2dvJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdsb2dvX3RleHQnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1RleHQgTG9nbyBBbGlnbm1lbnQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ2RlZmF1bHQnID0+ICdsZWZ0JywKICAgICAgICAgICAgICAgICAgICAnc2hvd19pZicgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAndGV4dF9sb2dvX2VuYWJsZWQnID0+ICd0cnVlJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdsb2dvX2ZvbnQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3NlbGVjdCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdsb2dvJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdsb2dvX3RleHQnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1RleHQgTG9nbyBGb250JywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gZG9md19kYXRhKCktPmdvb2dsZV9mb250cygpLAogICAgICAgICAgICAgICAgICAgICdkZWZhdWx0JyA9PiAnUG9wcGlucycsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3BsYWNlaG9sZGVyJyA9PiBfXygnUGljayBhIEdvb2dsZSBmb250Li4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAnc2hvd19pZicgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAndGV4dF9sb2dvX2VuYWJsZWQnID0+ICd0cnVlJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdsb2dvX2ZvbnRfc2l6ZScgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnbnVtYmVyJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2xvZ28nLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2xvZ29fdGV4dCcsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnVGV4dCBMb2dvIEZvbnQgU2l6ZScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnZGVmYXVsdCcgPT4gMTgsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3VuaXQnID0+ICdweCcsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAnc2hvd19pZicgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAndGV4dF9sb2dvX2VuYWJsZWQnID0+ICd0cnVlJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdsb2dvX2NvbG9yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdjb2xvcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdsb2dvJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdsb2dvX3RleHQnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1RleHQgTG9nbyBDb2xvcicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnZGVmYXVsdCcgPT4gJyMwMDAnLAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdtb2RlJyA9PiAnYWR2YW5jZWQnLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgJ3Nob3dfaWYnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHRfbG9nb19lbmFibGVkJyA9PiAndHJ1ZScsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCgogICAgICAgICAgICAgICAgLy8gSGVhZGVyIEdlbmVyYWwKICAgICAgICAgICAgICAgICdoZWFkZXJfc3R5bGUnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2ltYWdlX3NlbGVjdCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdoZWFkZXInLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2hlYWRlcl9nZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdIZWFkZXIgU3R5bGUnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdTZWxlY3QgaGVhZGVyIHN0eWxlLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVmYXVsdCcgPT4gMSwKICAgICAgICAgICAgICAgICAgICAnaXRlbXMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgMSA9PiBkb2Z3X2Fzc2V0KCdzYW1wbGUvaGVhZGVycy8wMS5wbmcnKSwKICAgICAgICAgICAgICAgICAgICAgICAgMiA9PiBkb2Z3X2Fzc2V0KCdzYW1wbGUvaGVhZGVycy8wMi5wbmcnKSwKICAgICAgICAgICAgICAgICAgICAgICAgMyA9PiBkb2Z3X2Fzc2V0KCdzYW1wbGUvaGVhZGVycy8wMy5wbmcnKSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdoZWFkZXJfaW5mbycgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnY2hlY2tib3gnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnaGVhZGVyJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdoZWFkZXJfZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnSGVhZGVyIEluZm8nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdWaXNpYmxlIGhlYWRlciBpbmZvcm1hdGlvbi4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2RlZmF1bHQnID0+IFsgJ3Nsb2dhbicsICdwaG9uZScsICdhZGRyZXNzJywgJ2VtYWlsJyBdLAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnc2xvZ2FuJyA9PiBfXygnU2xvZ2FuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAncGhvbmUnID0+IF9fKCdQaG9uZSBudW1iZXInLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgICdhZGRyZXNzJyA9PiBfXygnQWRkcmVzcycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2VtYWlsJyA9PiBfXygnRW1haWwnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnaW5saW5lJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2hlYWRlcl9zbG9nYW4nID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3RleHQnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnaGVhZGVyJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdoZWFkZXJfZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnSGVhZGVyIFNsb2dhbicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnaGVhZGVyX3Bob25lJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICd0ZXh0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2hlYWRlcicsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnaGVhZGVyX2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1Bob25lIE51bWJlcicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnbWFzaycgPT4gJ3Bob25lJywKICAgICAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdwaG9uZScsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnaGVhZGVyX2FkZHJlc3MnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3RleHQnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnaGVhZGVyJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdoZWFkZXJfZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnQWRkcmVzcycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ21hcCBwaW4nLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2hlYWRlcl9lbWFpbCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnZW1haWwnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnaGVhZGVyJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdoZWFkZXJfZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnRW1haWwnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdhdCcsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCgogICAgICAgICAgICAgICAgLy8gSGVhZGVyIEFkdmFuY2VkCiAgICAgICAgICAgICAgICAndG9wX2Jhcl9lbmFibGVkJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdzd2l0Y2gnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnaGVhZGVyJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdoZWFkZXJfYWR2YW5jZWQnLAogICAgICAgICAgICAgICAgICAgICdkZWZhdWx0JyA9PiAndHJ1ZScsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnSGVhZGVyIFRvcC1CYXInLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdFbmFibGUgaGVhZGVyIHRvcCBiYXIuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdoZWFkZXJfc3RpY2t5X2VuYWJsZWQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3N3aXRjaCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdoZWFkZXInLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2hlYWRlcl9hZHZhbmNlZCcsCiAgICAgICAgICAgICAgICAgICAgJ2RlZmF1bHQnID0+ICd0cnVlJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdTdGlja3kgSGVhZGVyJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnRW5hYmxlIHN0aWNreSBoZWFkZXIuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdoZWFkZXJfbW9kZScgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc2VsZWN0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2hlYWRlcicsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnaGVhZGVyX2FkdmFuY2VkJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdTdGlja3kgSGVhZGVyIEJlaGF2aW9yJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdkZWZhdWx0JyA9PiAnZml4ZWQnLAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnZml4ZWQnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0ZpeGVkIGhlYWRlcicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAnY2lyY2xlJywKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2xhenknID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0xhenkgaGVhZGVyJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdjaXJjbGUgb3V0bGluZScsCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgICdzbGlkZScgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnU2xpZGUgZG93bicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAncnVsZXIgaG9yaXpvbnRhbCcsCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnaGVhZGVyX2hlaWdodCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnbnVtYmVyJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2hlYWRlcicsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnaGVhZGVyX2FkdmFuY2VkJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdIZWFkZXIgSGVpZ2h0JywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdkZWZhdWx0JyA9PiA3MCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAndW5pdCcgPT4gJ3B4JywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICAvLyBGb290ZXIKICAgICAgICAgICAgICAgICdmb290ZXJfYmcnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2ZpbGUnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZm9vdGVyJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdGb290ZXIgQmFja2dyb3VuZCBJbWFnZScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZm9vdGVyX3BhZGRpbmcnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3NwYWNlJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2Zvb3RlcicsCiAgICAgICAgICAgICAgICAgICAgJ2RlZmF1bHQnID0+ICcwIDAgMCAwJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdGb290ZXIgUGFkZGluZycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZm9vdGVyX3dpZGdldHNfZW5hYmxlZCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc3dpdGNoJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2Zvb3RlcicsCiAgICAgICAgICAgICAgICAgICAgJ2RlZmF1bHQnID0+ICd0cnVlJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdGb290ZXIgV2lkZ2V0cycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ0VuYWJsZSBmb290ZXIgd2lkZ2V0cy4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2Zvb3Rlcl9uYXZfZW5hYmxlZCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc3dpdGNoJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2Zvb3RlcicsCiAgICAgICAgICAgICAgICAgICAgJ2RlZmF1bHQnID0+ICdmYWxzZScsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnRm9vdGVyIE5hdmlnYXRpb24nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdFbmFibGUgZm9vdGVyIG5hdmlnYXRpb24uJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdmb290ZXJfY29weXJpZ2h0X2VuYWJsZWQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3N3aXRjaCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdmb290ZXInLAogICAgICAgICAgICAgICAgICAgICdkZWZhdWx0JyA9PiAndHJ1ZScsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnRm9vdGVyIENvcHlyaWdodCBUZXh0JywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnRW5hYmxlIGZvb3RlciBjb3B5cmlnaHQgdGV4dC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2Zvb3Rlcl9jb3B5cmlnaHQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3RleHQnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZm9vdGVyJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdDb3B5cmlnaHQgVGV4dCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNiwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZm9vdGVyX2NvbHVtbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ251bWJlcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdmb290ZXInLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0Zvb3RlciBDb2x1bW5zJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA2LAogICAgICAgICAgICAgICAgICAgICdkZWZhdWx0JyA9PiA0LAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICAvLyBOdW1iZXJzCiAgICAgICAgICAgICAgICAnbWFza18xJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICd0ZXh0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ251bWJlcnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ01hc2tlZCBOdW1iZXIgRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3VuaXQnID0+ICdLTcKyJywKICAgICAgICAgICAgICAgICAgICAgICAgJ21heCcgPT4gMTAwMDAwMDAsCiAgICAgICAgICAgICAgICAgICAgICAgICdtaW4nID0+IC0xMDAwMDAwMCwKICAgICAgICAgICAgICAgICAgICAgICAgJ21hc2snID0+ICdudW1iZXInLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ21hc2tfMicgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAndGV4dCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdudW1iZXJzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdNYXNrZWQgQ3VycmVuY3kgRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3VuaXQnID0+ICdVU0QnLAogICAgICAgICAgICAgICAgICAgICAgICAnbWluJyA9PiAwLAogICAgICAgICAgICAgICAgICAgICAgICAnbWFzaycgPT4gJ251bWJlcicsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnbWFza18zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICd0ZXh0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ251bWJlcnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ01hc2tlZCBQZXJjZW50YWdlIEZpZWxkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICd1bml0JyA9PiAnJScsCiAgICAgICAgICAgICAgICAgICAgICAgICdtYXgnID0+IDEwMCwKICAgICAgICAgICAgICAgICAgICAgICAgJ21pbicgPT4gMCwKICAgICAgICAgICAgICAgICAgICAgICAgJ21hc2snID0+ICdwZXJjZW50YWdlJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdtYXNrXzQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3RleHQnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnbnVtYmVycycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnTWFza2VkIFBob25lIEZpZWxkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdtYXNrJyA9PiAncGhvbmUnLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ251bWJlcl8xJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdudW1iZXInLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnbnVtYmVycycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnTnVtYmVyIEZpZWxkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnRGVmYXVsdCBkaXN0YW5jZSBpbiBLTSBiZXR3ZWVuIG9yaWdpbiBhbmQgZGVzdGluYXRpb24uJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICd1bml0JyA9PiAnS00nLAogICAgICAgICAgICAgICAgICAgICAgICAnc3RlcCcgPT4gJzEwJywKICAgICAgICAgICAgICAgICAgICAgICAgJ21heCcgPT4gJzUwMCcsCiAgICAgICAgICAgICAgICAgICAgICAgICdtaW4nID0+ICcwJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdudW1iZXJfMicgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnbnVtYmVyJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ251bWJlcnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ051bWJlciBGaWVsZCB3aXRoIEljb24nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdOdW1iZXIgZmllbGQgd2hpY2ggaGFzIGEgdmVydGljYWwgYXJyb3cgaWNvbi4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdhcnJvd3MgYWx0ZXJuYXRlIHZlcnRpY2FsJywKICAgICAgICAgICAgICAgICAgICAgICAgJ3VuaXQnID0+ICdweCcsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnbnVtYmVyXzMnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ251bWJlcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdudW1iZXJzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdOdW1iZXIgRmllbGQgd2l0aCBJY29uICgyKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ051bWJlciBmaWVsZCB3aGljaCBoYXMgYSBob3Jpem9udGFsIGFycm93IGljb24uJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAnYXJyb3dzIGFsdGVybmF0ZSBob3Jpem9udGFsJywKICAgICAgICAgICAgICAgICAgICAgICAgJ3N0ZXAnID0+IDUsCiAgICAgICAgICAgICAgICAgICAgICAgICdtaW4nID0+IDAsCiAgICAgICAgICAgICAgICAgICAgICAgICd1bml0JyA9PiAnJScsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnbnVtYmVyXzQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ251bWJlcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdudW1iZXJzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdOdW1iZXIgRmllbGQgKGRpc2FibGVkKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ0EgZGlzYWJsZWQgbnVtYmVyIGZpZWxkLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2Fycm93cyBhbHRlcm5hdGUgdmVydGljYWwnLAogICAgICAgICAgICAgICAgICAgICAgICAndW5pdCcgPT4gJ0NNJywKICAgICAgICAgICAgICAgICAgICAgICAgJ2Rpc2FibGVkJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAoKICAgICAgICAgICAgICAgIC8vIFRleHQgQXJlYQogICAgICAgICAgICAgICAgJ3RleHRhcmVhXzEnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3RleHRhcmVhJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3RleHRhcmVhcycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnVGV4dCBBcmVhIEZpZWxkIHdpdGggPGNvZGU+Jmx0Oy9oZWFkJmd0OzwvY29kZT4gQ29kZSBMYWJlbC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3RleHRhcmVhXzInID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3RleHRhcmVhJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3RleHRhcmVhcycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnVGV4dCBBcmVhIEZpZWxkIHdpdGggUGxhY2Vob2xkZXInLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3BsYWNlaG9sZGVyJyA9PiBfXygnVHlwZSBoZXJlIHNvbWUgbG9uZyB0ZXh0Li4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAndGV4dGFyZWFfMycgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAndGV4dGFyZWEnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAndGV4dGFyZWFzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdSZWFkLW9ubHkgVGV4dCBBcmVhIEZpZWxkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICd2YWx1ZScgPT4gX18oJ1JlYWQtb25seSB0ZXh0IGFyZWEgdmFsdWUuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdyZWFkb25seScgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICd0ZXh0YXJlYV80JyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICd0ZXh0YXJlYScsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICd0ZXh0YXJlYXMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0Rpc2FibGVkIFRleHQgQXJlYSBGaWVsZCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAndmFsdWUnID0+IF9fKCdEaXNhYmxlZCB0ZXh0IGFyZWEgdmFsdWUuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdkaXNhYmxlZCcgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICAvLyBFZGl0b3JzCiAgICAgICAgICAgICAgICAnY29kZV9qcycgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnY29kZScsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdlZGl0b3JzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdDb2RlIEVkaXRvciAoSmF2YXNjcmlwdCknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIGlzIHRoZSBkZWZhdWx0IGNvZGUgZWRpdG9yIGNvbmZpZ3VyYXRpb24uJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdjb2RlX2NzcycgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnY29kZScsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdlZGl0b3JzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdDb2RlIEVkaXRvciAoQ1NTKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaXMgYSBjdXN0b20gY29kZSBlZGl0b3IgY29uZmlndXJhdGlvbiB1c2luZyA8Y29kZT5jc3M8L2NvZGU+IHN5bnRheCBhbmQgPGNvZGU+ZHJlYW13ZWF2ZXI8L2NvZGU+IHRoZW1lLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gOCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnbGFuZ3VhZ2UnID0+ICdjc3MnLAogICAgICAgICAgICAgICAgICAgICAgICAndGhlbWUnID0+ICdkcmVhbXdlYXZlcicsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnY29kZV9tYXJrZG93bicgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnY29kZScsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdlZGl0b3JzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdDb2RlIEVkaXRvciAoTWFya2Rvd24pJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyBhIGN1c3RvbSBjb2RlIGVkaXRvciBjb25maWd1cmF0aW9uIHVzaW5nIDxjb2RlPm1hcmtkb3duPC9jb2RlPiBzeW50YXggYW5kIDxjb2RlPmFtYmlhbmNlPC9jb2RlPiB0aGVtZS4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2xhbmd1YWdlJyA9PiAnbWFya2Rvd24nLAogICAgICAgICAgICAgICAgICAgICAgICAndGhlbWUnID0+ICdhbWJpYW5jZScsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnY29kZV9waHAnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2NvZGUnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZWRpdG9ycycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnQ29kZSBFZGl0b3IgKFBIUCknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIGlzIGEgY3VzdG9tIGNvZGUgZWRpdG9yIGNvbmZpZ3VyYXRpb24gdXNpbmcgPGNvZGU+cGhwPC9jb2RlPiBzeW50YXggYW5kIDxjb2RlPmdpdGh1YjwvY29kZT4gdGhlbWUuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdsYW5ndWFnZScgPT4gJ3BocCcsCiAgICAgICAgICAgICAgICAgICAgICAgICd0aGVtZScgPT4gJ2dpdGh1YicsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnd3BfZWRpdG9yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdlZGl0b3InLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZWRpdG9ycycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnV29yZFByZXNzIEVkaXRvcicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaXMgdGhlIFdvcmRQcmVzcyBlZGl0b3IgZmllbGQuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICd3cF9lZGl0b3JfZGlzYWJsZWQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2VkaXRvcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdlZGl0b3JzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdXb3JkUHJlc3MgRWRpdG9yIChEaXNhYmxlZCknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIGlzIHRoZSBXb3JkUHJlc3MgZWRpdG9yIGZpZWxkLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gOCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnZGlzYWJsZWQnID0+IHRydWUsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCgogICAgICAgICAgICAgICAgLy8gU3dpdGNoCiAgICAgICAgICAgICAgICAnc3dpdGNoXzEnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3N3aXRjaCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdzd2l0Y2hlcycsCiAgICAgICAgICAgICAgICAgICAgJ25hbWUnID0+ICdlbmFibGVkJywKICAgICAgICAgICAgICAgICAgICAnZGVmYXVsdCcgPT4gJ2ZhbHNlJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdTd2l0Y2ggRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUb2dnbGUgdGhpcyBzd2l0Y2ggb24vb2ZmLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gOCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnc3dpdGNoXzInID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3N3aXRjaCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdzd2l0Y2hlcycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnU3dpdGNoIEZpZWxkIChEaXNhYmxlZCknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdZb3UgY2Fubm90IHRvZ2dsZSBhIGRpc2FibGVkIHN3aXRjaC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2RlZmF1bHQnID0+ICd0cnVlJywKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gOCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnanVzdGlmeScgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2Rpc2FibGVkJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAoKICAgICAgICAgICAgICAgIC8vIENoZWNrYm94ICYgUmFkaW8KICAgICAgICAgICAgICAgICdjaGVja2JveF8xJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdjaGVja2JveCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdjaGVja2JveGVzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdDaGVja2JveCBGaWVsZCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnaXRlbXMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgMSA9PiBfXygnQ2hlY2tib3ggT3B0aW9uIExhYmVsICMxJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAyID0+IF9fKCdDaGVja2JveCBPcHRpb24gTGFiZWwgIzInLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgIDMgPT4gX18oJ0NoZWNrYm94IE9wdGlvbiBMYWJlbCAjMycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdjaGVja2JveF8yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdjaGVja2JveCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdjaGVja2JveGVzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdDaGVja2JveCBGaWVsZCAoRGlzYWJsZWQpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAxID0+IF9fKCdDaGVja2JveCBPcHRpb24gTGFiZWwgIzEnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgIDIgPT4gX18oJ0NoZWNrYm94IE9wdGlvbiBMYWJlbCAjMicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAgICAgMyA9PiBfXygnQ2hlY2tib3ggT3B0aW9uIExhYmVsICMzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2Rpc2FibGVkJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2NoZWNrYm94XzMnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2NoZWNrYm94JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2NoZWNrYm94ZXMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0NoZWNrYm94IEZpZWxkIChJbmxpbmUpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAxID0+IF9fKCdDaGVja2JveCBPcHRpb24gTGFiZWwgIzEnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgIDIgPT4gX18oJ0NoZWNrYm94IE9wdGlvbiBMYWJlbCAjMicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAgICAgMyA9PiBfXygnQ2hlY2tib3ggT3B0aW9uIExhYmVsICMzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2lubGluZScgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdyYWRpb18xJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdyYWRpbycsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdjaGVja2JveGVzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdSYWRpbyBGaWVsZCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnaXRlbXMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgMSA9PiBfXygnQ2F0ZWdvcnkgTGFiZWwgIzEnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgIDIgPT4gX18oJ0NhdGVnb3J5IExhYmVsICMyJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAzID0+IF9fKCdDYXRlZ29yeSBMYWJlbCAjMycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdyYWRpb18yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdyYWRpbycsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdjaGVja2JveGVzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdSYWRpbyBGaWVsZCAoRGlzYWJsZWQpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAxID0+IF9fKCdDYXRlZ29yeSBMYWJlbCAjMScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAgICAgMiA9PiBfXygnQ2F0ZWdvcnkgTGFiZWwgIzInLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgIDMgPT4gX18oJ0NhdGVnb3J5IExhYmVsICMzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2Rpc2FibGVkJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3JhZGlvXzMnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3JhZGlvJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2NoZWNrYm94ZXMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1JhZGlvIEZpZWxkIChJbmxpbmUpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAxID0+IF9fKCdDYXRlZ29yeSBMYWJlbCAjMScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAgICAgMiA9PiBfXygnQ2F0ZWdvcnkgTGFiZWwgIzInLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgIDMgPT4gX18oJ0NhdGVnb3J5IExhYmVsICMzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2lubGluZScgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICAvLyBEYXRlICYgRGF0ZS10aW1lCiAgICAgICAgICAgICAgICAnZGF0ZV8xJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdkYXRlJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2RhdGV0aW1lcycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnRGF0ZSBGaWVsZCAoRGF0ZS1UaW1lKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaXMgYSBkYXRlLXRpbWUgaW5wdXQuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdkYXRlXzInID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2RhdGUnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZGF0ZXRpbWVzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdEYXRlIEZpZWxkIChEYXRlIE9ubHkpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyBhIGRhdGUgb25seSBpbnB1dC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ21vZGUnID0+ICdkYXRlJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdkYXRlXzMnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2RhdGUnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZGF0ZXRpbWVzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdEYXRlIEZpZWxkIChUaW1lIE9ubHkpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyBhIHRpbWUgb25seSBpbnB1dC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ21vZGUnID0+ICd0aW1lJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdkYXRlXzQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2RhdGUnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZGF0ZXRpbWVzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdEYXRlIEZpZWxkIChEaXNhYmxlZCknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIGlzIGEgZGlzYWJsZWQgZGF0ZSBpbnB1dC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2Rpc2FibGVkJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAoKICAgICAgICAgICAgICAgIC8vIEltYWdlIFNlbGVjdAogICAgICAgICAgICAgICAgJ2ltYWdlX3NlbGVjdF8xJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdpbWFnZV9zZWxlY3QnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnaW1hZ2Vfc2VsZWN0cycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnSW1hZ2UtU2VsZWN0IEZpZWxkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnSW1hZ2Ugc2VsZWN0IGlucHV0cyBhcmUgdmlzdWFsIGNob2ljZSBpbnB1dHMgdXNpbmcgcGljdHVyZXMuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdkZWZhdWx0JyA9PiAxLAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAxID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9jaG9pY2VfMS5wbmcnKSwKICAgICAgICAgICAgICAgICAgICAgICAgMiA9PiBkb2Z3X2Fzc2V0KCdzYW1wbGUvY2hvaWNlXzIucG5nJyksCiAgICAgICAgICAgICAgICAgICAgICAgIDMgPT4gZG9md19hc3NldCgnc2FtcGxlL2Nob2ljZV8zLnBuZycpLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2ltYWdlX3NlbGVjdF8yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdpbWdfc2VsZWN0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2ltYWdlX3NlbGVjdHMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0ltYWdlLVNlbGVjdCBGaWVsZCAoMiknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdJbWFnZSBzZWxlY3Qgd2l0aCBhIG1pc3NpbmcgcGljdHVyZS4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICAgICAgJ2RlZmF1bHQnID0+IDIsCiAgICAgICAgICAgICAgICAgICAgJ2l0ZW1zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgIDEgPT4gZG9md19hc3NldCgnc2FtcGxlL2Nob2ljZV8xLnBuZycpLAogICAgICAgICAgICAgICAgICAgICAgICAyID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9OT19TVUNIX0lNQUdFX0FUX1RISVNfUEFUSC5wbmcnKSwKICAgICAgICAgICAgICAgICAgICAgICAgMyA9PiBkb2Z3X2Fzc2V0KCdzYW1wbGUvY2hvaWNlXzMucG5nJyksCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnaW1hZ2Vfc2VsZWN0XzMnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2ltZ19zZWxlY3QnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnaW1hZ2Vfc2VsZWN0cycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnSW1hZ2UtU2VsZWN0IEZpZWxkICgzKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ0ltYWdlIHNlbGVjdCB3aXRoIG9wdGlvbnMgb24gYSBsaW5lIGVhY2guJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZWZhdWx0JyA9PiAxLAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAxID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9jYXRlZ29yaWVzL2NhdF8xLnBuZycpLAogICAgICAgICAgICAgICAgICAgICAgICAyID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9jYXRlZ29yaWVzL2NhdF8yLnBuZycpLAogICAgICAgICAgICAgICAgICAgICAgICAzID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9jYXRlZ29yaWVzL2NhdF8zLnBuZycpLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2lubGluZScgPT4gZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCgogICAgICAgICAgICAgICAgLy8gU2VsZWN0IChEcm9wZG93bikKICAgICAgICAgICAgICAgICdkcm9wZG93bl8xJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdzZWxlY3QnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZHJvcGRvd25zJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdTZWxlY3QgRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIHNlbGVjdCBmaWVsZCB2YWx1ZSBjYW5ub3QgYmUgY2xlYXJlZC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ2l0ZW1zJyA9PiBkb2Z3X2RhdGEoKS0+dGVybXMoKSwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnY2xlYXJhYmxlJyA9PiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdkcm9wZG93bl8yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdzZWxlY3QnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZHJvcGRvd25zJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdTZWxlY3QgRmllbGQgKEdvb2dsZSBGb250cyAmIFBsYWNlaG9sZGVyKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1NlYXJjaGFibGUgc2VsZWN0IGZpZWxkIHdpdGggYSBwbGFjZWhvbGRlci4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ2l0ZW1zJyA9PiBkb2Z3X2RhdGEoKS0+Z29vZ2xlX2ZvbnRzKCksCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3BsYWNlaG9sZGVyJyA9PiBfXygnUGljayBhIEdvb2dsZSBmb250Li4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZHJvcGRvd25fMycgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc2VsZWN0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2Ryb3Bkb3ducycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnU2VsZWN0IEZpZWxkIChObyBTZWFyY2gpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBzZWxlY3QgZmllbGQgY2Fubm90IGJlIHNlYXJjaGVkLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnaXRlbXMnID0+IGRvZndfZGF0YSgpLT50ZXJtcygpLAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdzZWFyY2gnID0+IGZhbHNlLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2Ryb3Bkb3duXzQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2NvdW50cnknLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZHJvcGRvd25zJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdDb3VudHJ5IEZpZWxkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBzZWxlY3QgY2FuIGJlIHVzZWQgdG8gc2VsZWN0IGEgY291bnRyeS4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2Ryb3Bkb3duXzUnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3NlbGVjdCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdkcm9wZG93bnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1NlbGVjdCBGaWVsZCAoTXVsdGlwbGUgJiBGbGFncyknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIHNlbGVjdCBmaWVsZCBoYXMgbGFiZWxzIHBsdXMgZmxhZ3MuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAxID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0VneXB0JywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ZsYWcnID0+ICdlZycsCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDIgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnU2F1ZGkgQXJhYmlhJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ZsYWcnID0+ICdzYScsCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDMgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnVW5pdGVkIEFyYWIgRW1pcmF0ZXMnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZmxhZycgPT4gJ2FlJywKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgNCA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdQYWxlc3RpbmUg4p2k77iPJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ZsYWcnID0+ICdwcycsCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnbXVsdGlwbGUnID0+IHRydWUsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZHJvcGRvd25fNicgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc2VsZWN0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2Ryb3Bkb3ducycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnU2VsZWN0IEZpZWxkIChJY29ucyknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIHNlbGVjdCBmaWVsZCBoYXMgbGFiZWxzIHBsdXMgaWNvbnMuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAxID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0ZlbGluZXMnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2NhdCcsCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDIgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnU2VhIEFuaW1hbHMnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2Zpc2gnLAogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAzID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0JpcmRzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdjcm93JywKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdkcm9wZG93bl83JyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdzZWxlY3QnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZHJvcGRvd25zJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdTZWxlY3QgRmllbGQgKEltYWdlcyknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIHNlbGVjdCBmaWVsZCBoYXMgbGFiZWxzIHBsdXMgaW1hZ2VzLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnaXRlbXMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgMSA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdGb28nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaW1nJyA9PiAnaHR0cHM6Ly9waWNzdW0ucGhvdG9zLzUwLzUwPzEnLAogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAyID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0JhcicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpbWcnID0+ICdodHRwczovL3BpY3N1bS5waG90b3MvNTAvNTA/MicsCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDMgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnQmF6JywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ltZycgPT4gJ2h0dHBzOi8vcGljc3VtLnBob3Rvcy81MC81MD8zJywKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdkcm9wZG93bl84JyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdzZWxlY3QnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZHJvcGRvd25zJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdNdWx0aXBsZS1TZWxlY3QgRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIHNlbGVjdCBmaWVsZCBjYW4gaGF2ZSBtdWx0aXBsZSBjaG9pY2VzLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnaXRlbXMnID0+IGRvZndfZGF0YSgpLT50ZXJtcygpLAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdtdWx0aXBsZScgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICAvLyBQaWNrZXJzIChDb2xvcnMgJiBJY29ucykKICAgICAgICAgICAgICAgICdjb2xvcl8xJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdjb2xvcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdwaWNrZXJzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdDb2xvciBQaWNrZXIgRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIGlzIGEgY29sb3IgcGlja2VyIHVzaW5nIHRoZSBkZWZhdWx0IDxjb2RlPnNpbXBsZTwvY29kZT4gbW9kZS4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2NvbG9yXzInID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2NvbG9yJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3BpY2tlcnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0NvbG9yIFBpY2tlciBGaWVsZCAoQWR2YW5jZWQpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyBhIGNvbG9yIHBpY2tlciB1c2luZyB0aGUgPGNvZGU+YWR2YW5jZWQ8L2NvZGU+IG1vZGUuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdtb2RlJyA9PiAnYWR2YW5jZWQnLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2NvbG9yXzMnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2NvbG9yJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3BpY2tlcnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0NvbG9yIFBpY2tlciBGaWVsZCAoQ29tcGxleCknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIGlzIGEgY29sb3IgcGlja2VyIHVzaW5nIHRoZSA8Y29kZT5jb21wbGV4PC9jb2RlPiBtb2RlLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnbW9kZScgPT4gJ2NvbXBsZXgnLAogICAgICAgICAgICAgICAgICAgICAgICAnY29sb3JfaWNvbicgPT4gJ3BhaW50IGJydXNoJywKICAgICAgICAgICAgICAgICAgICAgICAgJ3BpY2tlcl9pY29uJyA9PiAncGFpbnQgcm9sbGVyJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdjb2xvcl80JyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdjb2xvcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdwaWNrZXJzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdDb2xvciBQaWNrZXIgRmllbGQgKFBhbGV0dGUpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyBhIGNvbG9yIHBpY2tlciB1c2luZyB0aGUgPGNvZGU+cGFsZXR0ZTwvY29kZT4gbW9kZS4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ21vZGUnID0+ICdwYWxldHRlJywKICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbG9yX2ljb24nID0+ICdoaWdobGlnaHRlcicsCiAgICAgICAgICAgICAgICAgICAgICAgICdwaWNrZXJfaWNvbicgPT4gJ3BhbGV0dGUnLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2ljb25fMScgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnaWNvbicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdwaWNrZXJzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdJY29uIFBpY2tlciBGaWVsZCAoQWxsIEljb25zKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaXMgYW4gaWNvbiBwaWNrZXIgd2l0aCBhbGwgaWNvbnMgbGlzdGVkLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnaWNvbl8yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdpY29uJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3BpY2tlcnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0ljb24gUGlja2VyIEZpZWxkIChDdXN0b20gSWNvbnMgTGlzdCknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIGlzIGFuIGljb24gcGlja2VyIHdpdGggY3VzdG9tIHNwZWNpZmljIGljb25zIGxpc3QuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnZmFzIGZhLWF1ZGlvLWRlc2NyaXB0aW9uJywKICAgICAgICAgICAgICAgICAgICAgICAgJ2ZhcyBmYS1hZGRyZXNzLWJvb2snLAogICAgICAgICAgICAgICAgICAgICAgICAnZmFzIGZhLWFkZHJlc3MtY2FyZCcsCiAgICAgICAgICAgICAgICAgICAgICAgICdmYXMgZmEtYWRqdXN0JywKICAgICAgICAgICAgICAgICAgICAgICAgJ2ZhcyBmYS1hbGlnbi1jZW50ZXInLAogICAgICAgICAgICAgICAgICAgICAgICAnZmFzIGZhLWFsaWduLWp1c3RpZnknLAogICAgICAgICAgICAgICAgICAgICAgICAnZmFzIGZhLWFsaWduLWxlZnQnLAogICAgICAgICAgICAgICAgICAgICAgICAnZmFzIGZhLWFsaWduLXJpZ2h0JywKICAgICAgICAgICAgICAgICAgICAgICAgJ2ZhcyBmYS1hbWJ1bGFuY2UnLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2ljb25fMycgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnaWNvbicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdwaWNrZXJzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdJY29uIFBpY2tlciBGaWVsZCAoQnJhbmRzIEljb25zIExpc3QpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyBhbiBpY29uIHBpY2tlciB3aXRoIHBvcHVsYXIgYnJhbmRzIGljb25zIGxpc3QuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gZG9md19kYXRhKCktPmJyYW5kc19pY29ucygpLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdpY29uXzQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2ljb24nLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAncGlja2VycycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnSWNvbiBQaWNrZXIgRmllbGQgKERpc2FibGVkKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaXMgYW4gaWNvbiBwaWNrZXIgd2l0aCBzb2NpYWwgaWNvbnMgbGlzdC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2Rpc2FibGVkJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAoKICAgICAgICAgICAgICAgIC8vIEZpbGUgVXBsb2FkCiAgICAgICAgICAgICAgICAnZmlsZV8xJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdmaWxlJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2ZpbGVzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdHZW5lcmFsIEZpbGUgVXBsb2FkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpbnB1dCBjYW4gYmUgdXNlZCB0byB1cGxvYWQgZmlsZXMgb3IgaW1hZ2VzLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gOCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZmlsZV8yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdmaWxlJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2ZpbGVzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdHZW5lcmFsIEZpbGUgVXBsb2FkIChDdXN0b21pemVkKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaW5wdXQgY2FuIGJlIHVzZWQgdG8gdXBsb2FkIGZpbGVzIG9yIGltYWdlcy4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3BsYWNlaG9sZGVyJyA9PiBfXygnQ2xpY2sgdG8gdXBsb2FkIGltYWdlJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2ltYWdlJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdmaWxlXzMnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2ZpbGUnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZmlsZXMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0dlbmVyYWwgRmlsZSBVcGxvYWQgKERlZmF1bHQgVmFsdWUgJiBOb24tQ2xlYXJhYmxlKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaW5wdXQgY2FuIGJlIHVzZWQgdG8gdXBsb2FkIGZpbGVzIG9yIGltYWdlcy4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICAgICAgJ2RlZmF1bHQnID0+ICdodHRwczovL3BpY3N1bS5waG90b3MvOTUvOTU/MScsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2NsZWFyYWJsZScgPT4gZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZmlsZV80JyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdmaWxlJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2ZpbGVzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdHZW5lcmFsIEZpbGUgVXBsb2FkIChEaXNhYmxlZCknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIGlucHV0IGNhbiBiZSB1c2VkIHRvIHVwbG9hZCBmaWxlcyBvciBpbWFnZXMuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdkZWZhdWx0JyA9PiAnaHR0cHM6Ly9waWNzdW0ucGhvdG9zLzk1Lzk1PzInLAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdkaXNhYmxlZCcgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgXSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJHRoaXM7CiAgICB9CgogICAgLyoqCiAgICAgKiBBZGQgVGhlbWUgUGFnZSBTZWN0aW9ucy4KICAgICAqCiAgICAgKiBAcmV0dXJuIHNlbGYKICAgICAqLwogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIF9hZGRfdGhlbWVfc2VjdGlvbnMoKQogICAgewogICAgICAgIGlmICgkdGhpcy0+X3BhZ2VfZW5hYmxlZCgnZG9mdy10aGVtZScpKSB7CiAgICAgICAgICAgIGRvZndfZ2V0X3BhZ2UoJ2RvZnctdGhlbWUnKS0+YWRkX3NlY3Rpb25zKFsKICAgICAgICAgICAgICAgICdsb2dvJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdsaWdodGJ1bGInLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gJ0xvZ28nLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdsYXlvdXQnID0+IFsKICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2VkaXRvciB0YWJsZScsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiAnTGF5b3V0JywKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnaGVhZGVyJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+IGRvZndfYXNzZXQoJ2ljb25zL2hlYWRlci5zdmcnKSwKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+ICdIZWFkZXInLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdmb290ZXInID0+IFsKICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gZG9md19hc3NldCgnaWNvbnMvZm9vdGVyLnN2ZycpLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gJ0Zvb3RlcicsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICBdKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiAkdGhpczsKICAgIH0KCiAgICAvKioKICAgICAqIEFkZCBUaGVtZSBQYWdlIEZpZWxkcwogICAgICoKICAgICAqIEByZXR1cm4gc2VsZgogICAgICovCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gX2FkZF90aGVtZV9maWVsZHMoKQogICAgewogICAgICAgIGlmICgkdGhpcy0+X3BhZ2VfZW5hYmxlZCgnZG9mdy10aGVtZScpKSB7CiAgICAgICAgICAgICR0aGVtZSA9IGRvZndfZ2V0X3BhZ2UoJ2RvZnctdGhlbWUnKTsKCiAgICAgICAgICAgIC8vIFRoZW1lOiBHcm91cHMKICAgICAgICAgICAgJHRoZW1lLT5hZGRfZ3JvdXBzKFtdKTsKCiAgICAgICAgICAgIC8vIFRoZW1lOiBGaWVsZHMKICAgICAgICAgICAgJHRoZW1lLT5hZGRfZmllbGRzKFsKICAgICAgICAgICAgICAgICdsb2dvX2xpZ2h0JyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdmaWxlJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2xvZ28nLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0xvZ28gKExpZ2h0KScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1VwbG9hZCBhIGxvZ28gaW1hZ2UgZm9yIGxpZ2h0IG1vZGUuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdsb2dvX2RhcmsnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2ZpbGUnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnbG9nbycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnTG9nbyAoRGFyayknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdVcGxvYWQgYSBsb2dvIGltYWdlIGZvciBkYXJrIG1vZGUuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdiZ19jb2xvcicgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnY29sb3InLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnbG9nbycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnQmFja2dyb3VuZCBDb2xvcicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAndGV4dF9jb2xvcicgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnY29sb3InLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnbG9nbycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnVGV4dC9JY29ucyBDb2xvcicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnbG9nb19wb3NpdGlvbicgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnYWxpZ24nLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnbG9nbycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnTG9nbyBQb3NpdGlvbicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZW5hYmxlX3NlYXJjaCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc3dpdGNoJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2xvZ28nLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0VuYWJsZSBTZWFyY2ggQnV0dG9uJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnU2VhcmNoIEJ1dHRvbicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgIF0pOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICR0aGlzOwogICAgfQoKICAgIC8qKgogICAgICogQWRkIEFkdmFuY2VkIFBhZ2UgU2VjdGlvbnMuCiAgICAgKgogICAgICogQHJldHVybiBzZWxmCiAgICAgKi8KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBfYWRkX2FkdmFuY2VkX3NlY3Rpb25zKCkKICAgIHsKICAgICAgICBpZiAoJHRoaXMtPl9wYWdlX2VuYWJsZWQoJ2RvZnctYWR2YW5jZWQnKSkgewogICAgICAgICAgICBkb2Z3X2dldF9wYWdlKCdkb2Z3LWFkdmFuY2VkJyktPmFkZF9zZWN0aW9ucyhbCiAgICAgICAgICAgICAgICAnZ2VuZXJhbCcgPT4gWwogICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAnZ2xvYmUnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gJ0FsbCBGaWVsZCBUeXBlcycsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3RyYWNraW5nJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdjaGFydCBhcmVhJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+ICdUcmFja2luZyAmIEFuYWx5dGljcycsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2FyY2hpdmVzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdsaXN0IGNsaXBib2FyZCcsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiAnQXJjaGl2ZXMnLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdzaW5nbGVfcG9zdCcgPT4gWwogICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAnZmlsZSB0ZXh0JywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+ICdTaW5nbGUgUG9zdC9QYWdlJywKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnc2hhcmVfYnV0dG9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAnc2hhcmUgYWx0ZXJuYXRlJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+ICdTaGFyZSBCdXR0b25zJywKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnYWRzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdhZCcsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiAnQWR2ZXJ0aXNlbWVudCcsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3R5cG9ncmFwaHknID0+IFsKICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ3RleHQgd2lkdGgnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gJ1R5cG9ncmFwaHknLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICd0cmFuc2xhdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2xhbmd1YWdlJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+ICdUcmFuc2xhdGlvbnMnLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdtb2R1bGVzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdzaGFwZXMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gJ01vZHVsZXMnLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdzb2NpYWxfbmV0d29ya3MnID0+IFsKICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ25ldHdvcmsgd2lyZWQnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gJ1NvY2lhbCBOZXR3b3JrcycsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2NvcHlyaWdodHMnID0+IFsKICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2NvcHlyaWdodCcsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiAnQ29weXJpZ2h0cycsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICBdKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiAkdGhpczsKICAgIH0KCiAgICAvKioKICAgICAqIEFkZCBBZHZhbmNlZCBQYWdlIEZpZWxkcwogICAgICoKICAgICAqIEByZXR1cm4gc2VsZgogICAgICovCiAgICBwcm90ZWN0ZWQgZnVuY3Rpb24gX2FkZF9hZHZhbmNlZF9maWVsZHMoKQogICAgewogICAgICAgIGlmICgkdGhpcy0+X3BhZ2VfZW5hYmxlZCgnZG9mdy1hZHZhbmNlZCcpKSB7CiAgICAgICAgICAgICRhZHZhbmNlZCA9IGRvZndfZ2V0X3BhZ2UoJ2RvZnctYWR2YW5jZWQnKTsKCiAgICAgICAgICAgIC8vIEdlbmVyYWw6IFBhZ2UgR3JvdXBzCiAgICAgICAgICAgICRhZHZhbmNlZC0+YWRkX2dyb3VwcyhbCiAgICAgICAgICAgICAgICAvL3JlZ2lvbiBHZW5lcmFsCiAgICAgICAgICAgICAgICAnc3dpdGNoZXMnID0+IFsKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICd0aXRsZScgPT4gX18oJ1N3aXRjaCwgQ2hlY2tib3gsIGFuZCBSYWRpbyBJbnB1dHMnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2ZpbGVzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2ZpbGUnLAogICAgICAgICAgICAgICAgICAgICd0aXRsZScgPT4gX18oJ0ZpbGUgJiBJbWFnZSBVcGxvYWQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3RleHQnID0+IFsKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAnc3dhdGNoYm9vaycsCiAgICAgICAgICAgICAgICAgICAgJ3RpdGxlJyA9PiBfXygnVGV4dCBJbnB1dCBWYXJpYW50cycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZm9sZCcgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnc3RhdGVzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2V5ZScsCiAgICAgICAgICAgICAgICAgICAgJ3RpdGxlJyA9PiBfXygnVGV4dCBJbnB1dHMgU3RhdGVzICYgSWNvbnMnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2ZvbGQnID0+IHRydWUsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ251bWJlcnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICd0aXRsZScgPT4gX18oJ051bWJlciBJbnB1dHMnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ21hc2tzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAndGl0bGUnID0+IF9fKCdJbnB1dCBNYXNrcycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAndGV4dGFyZWFzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAndGl0bGUnID0+IF9fKCdUZXh0IEFyZWEgSW5wdXRzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdzcGF0aWFsJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAndGl0bGUnID0+IF9fKCdTcGF0aWFsIElucHV0cycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZHJvcGRvd25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAndGl0bGUnID0+IF9fKCdEcm9wZG93biBJbnB1dHMnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2ltYWdlX3NlbGVjdHMnID0+IFsKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICd0aXRsZScgPT4gX18oJ0ltYWdlIFNlbGVjdCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnY29sb3JfcGlja2VycycgPT4gWwogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ3RpdGxlJyA9PiBfXygnQ29sb3IgUGlja2VyIElucHV0cycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnaWNvbl9waWNrZXJzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAndGl0bGUnID0+IF9fKCdJY29uIFBpY2tlciBJbnB1dHMnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2RhdGVzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAndGl0bGUnID0+IF9fKCdEYXRlIElucHV0cycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnc2xpZGVycycgPT4gWwogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ3RpdGxlJyA9PiBfXygnU2xpZGVyIElucHV0cycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZWRpdG9ycycgPT4gWwogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ3RpdGxlJyA9PiBfXygnRWRpdG9ycycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAvL2VuZHJlZ2lvbgoKICAgICAgICAgICAgICAgIC8vcmVnaW9uIEFyY2hpdmVzCiAgICAgICAgICAgICAgICAnY2F0ZWdvcmllcycgPT4gWwogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnYXJjaGl2ZXMnLAogICAgICAgICAgICAgICAgICAgICd0aXRsZScgPT4gX18oJ0NhdGVnb3JpZXMnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgLy9lbmRyZWdpb24KCiAgICAgICAgICAgICAgICAvL3JlZ2lvbiBTaW5nbGUgUG9zdAogICAgICAgICAgICAgICAgJ3NpbmdsZV9wb3N0X3NldHRpbmdzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdzaW5nbGVfcG9zdCcsCiAgICAgICAgICAgICAgICAgICAgJ3RpdGxlJyA9PiBfXygnU2luZ2xlIFBvc3QgU2V0dGluZ3MnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3NpbmdsZV9wb3N0X2xheW91dCcgPT4gWwogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnc2luZ2xlX3Bvc3QnLAogICAgICAgICAgICAgICAgICAgICd0aXRsZScgPT4gX18oJ1NpbmdsZSBQb3N0IExheW91dCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAvL2VuZHJlZ2lvbgoKICAgICAgICAgICAgICAgIC8vcmVnaW9uIFNoYXJlIEJ1dHRvbnMKICAgICAgICAgICAgICAgICdzaGFyZV9idXR0b25zX3NldHRpbmdzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdzaGFyZV9idXR0b25zJywKICAgICAgICAgICAgICAgICAgICAndGl0bGUnID0+IF9fKCdTaGFyZSBCdXR0b25zIFNldHRpbmdzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIC8vZW5kcmVnaW9uCgogICAgICAgICAgICAgICAgLy9yZWdpb24gQWRzCiAgICAgICAgICAgICAgICAnYWRzX2FkbW9iX2Jhbm5lcicgPT4gWwogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnYWRzJywKICAgICAgICAgICAgICAgICAgICAndGl0bGUnID0+IF9fKCdBZG1vYiBCYW5uZXInLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgLy9lbmRyZWdpb24KICAgICAgICAgICAgXSk7CgogICAgICAgICAgICAvLyBBZHZhbmNlZDogRmllbGRzCiAgICAgICAgICAgICRhZHZhbmNlZC0+YWRkX2ZpZWxkcyhbCiAgICAgICAgICAgICAgICAnZ2FfaWQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3RleHQnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAndHJhY2tpbmcnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0dvb2dsZSBBbmFseXRpY3MgVUlEJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnRW50ZXIgeW91ciB3ZWJzaXRlIEdvb2dsZSBBbmFseXRpY3MgdHJhY2tpbmcgSUQuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdmb290ZXJfaHRtbCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnY29kZScsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICd0cmFja2luZycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnQ3VzdG9tIEZvb3RlciBITVRMIENvZGUnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3RoZW1lJyA9PiAnZ2l0aHViJywKICAgICAgICAgICAgICAgICAgICAgICAgJ2xhbmd1YWdlJyA9PiAnaHRtbCcsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnY3VzdG9tX2pzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdjb2RlJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3RyYWNraW5nJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdDdXN0b20gSmF2YVNjcmlwdCBDb2RlJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgXSk7CgogICAgICAgICAgICAvLyBBZHZhbmNlZDogR2VuZXJhbCBGaWVsZHMKICAgICAgICAgICAgJGFkdmFuY2VkLT5hZGRfZmllbGRzKFsKICAgICAgICAgICAgICAgIC8vIFRvZ2dsZXMsIENoZWNrYm94ZXMsIGFuZCBSYWRpbyBJbnB1dHMKICAgICAgICAgICAgICAgICdzd2l0Y2hfMScgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc3dpdGNoJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3N3aXRjaGVzJywKICAgICAgICAgICAgICAgICAgICAnbmFtZScgPT4gJ2VuYWJsZWQnLAogICAgICAgICAgICAgICAgICAgICdkZWZhdWx0JyA9PiAnZmFsc2UnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1N3aXRjaCBGaWVsZCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RvZ2dsZSB0aGlzIHN3aXRjaCBvbi9vZmYuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiAzLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdzd2l0Y2hfMicgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc3dpdGNoJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3N3aXRjaGVzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdTd2l0Y2ggRmllbGQgKERpc2FibGVkKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1lvdSBjYW5ub3QgdG9nZ2xlIGEgZGlzYWJsZWQgc3dpdGNoLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVmYXVsdCcgPT4gJ3RydWUnLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiAzLAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdqdXN0aWZ5JyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAnZGlzYWJsZWQnID0+IHRydWUsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAnc2hvd19pZicgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnc3dpdGNoXzEnID0+ICd0cnVlJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdjaGVja2JveF8xJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdjaGVja2JveCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdzd2l0Y2hlcycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnQ2hlY2tib3ggRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ2l0ZW1zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgIDEgPT4gX18oJ0NhdGVnb3J5IExhYmVsICMxJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAyID0+IF9fKCdDYXRlZ29yeSBMYWJlbCAjMicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAgICAgMyA9PiBfXygnQ2F0ZWdvcnkgTGFiZWwgIzMnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAnc2hvd19pZicgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnc3dpdGNoXzEnID0+ICd0cnVlJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdjaGVja2JveF8yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdjaGVja2JveCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdzd2l0Y2hlcycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnQ2hlY2tib3ggRmllbGQgKElubGluZSknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDYsCiAgICAgICAgICAgICAgICAgICAgJ2l0ZW1zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgIDEgPT4gX18oJ0NhdGVnb3J5IExhYmVsICMxJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAyID0+IF9fKCdDYXRlZ29yeSBMYWJlbCAjMicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAgICAgMyA9PiBfXygnQ2F0ZWdvcnkgTGFiZWwgIzMnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnaW5saW5lJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgJ3Nob3dfaWYnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3N3aXRjaF8xJyA9PiAndHJ1ZScsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAncmFkaW9fMScgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAncmFkaW8nLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnc3dpdGNoZXMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1JhZGlvIEZpZWxkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAxID0+IF9fKCdDYXRlZ29yeSBMYWJlbCAjMScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAgICAgMiA9PiBfXygnQ2F0ZWdvcnkgTGFiZWwgIzInLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgIDMgPT4gX18oJ0NhdGVnb3J5IExhYmVsICMzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgJ3Nob3dfaWYnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3N3aXRjaF8xJyA9PiAndHJ1ZScsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAncmFkaW9fMicgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAncmFkaW8nLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnc3dpdGNoZXMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1JhZGlvIEZpZWxkIChJbmxpbmUpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAxID0+IF9fKCdDYXRlZ29yeSBMYWJlbCAjMScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAgICAgMiA9PiBfXygnQ2F0ZWdvcnkgTGFiZWwgIzInLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgIDMgPT4gX18oJ0NhdGVnb3J5IExhYmVsICMzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2lubGluZScgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICdzaG93X2lmJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdzd2l0Y2hfMScgPT4gJ3RydWUnLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3JhZGlvXzMnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3JhZGlvJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3N3aXRjaGVzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdSYWRpbyBGaWVsZCAoRGlzYWJsZWQpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAxID0+IF9fKCdDYXRlZ29yeSBMYWJlbCAjMScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAgICAgMiA9PiBfXygnQ2F0ZWdvcnkgTGFiZWwgIzInLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgIDMgPT4gX18oJ0NhdGVnb3J5IExhYmVsICMzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2Rpc2FibGVkJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgJ3Nob3dfaWYnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3N3aXRjaF8xJyA9PiAndHJ1ZScsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCgogICAgICAgICAgICAgICAgLy8gRmlsZSBJbnB1dHMKICAgICAgICAgICAgICAgICdmaWxlXzEnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2ZpbGUnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnZmlsZXMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0dlbmVyYWwgRmlsZSBVcGxvYWQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIGlucHV0IGNhbiBiZSB1c2VkIHRvIHVwbG9hZCBmaWxlcyBvciBpbWFnZXMuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdmaWxlXzInID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2ZpbGUnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnZmlsZXMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0dlbmVyYWwgRmlsZSBVcGxvYWQgKEN1c3RvbWl6ZWQpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpbnB1dCBjYW4gYmUgdXNlZCB0byB1cGxvYWQgZmlsZXMgb3IgaW1hZ2VzLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gOCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAncGxhY2Vob2xkZXInID0+IF9fKCdDbGljayB0byB1cGxvYWQgaW1hZ2UnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAnaW1hZ2UnLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2ZpbGVfMycgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnZmlsZScsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdmaWxlcycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnR2VuZXJhbCBGaWxlIFVwbG9hZCAoRGVmYXVsdCBWYWx1ZSAmIE5vbi1DbGVhcmFibGUpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpbnB1dCBjYW4gYmUgdXNlZCB0byB1cGxvYWQgZmlsZXMgb3IgaW1hZ2VzLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gOCwKICAgICAgICAgICAgICAgICAgICAnZGVmYXVsdCcgPT4gJ2h0dHBzOi8vcGljc3VtLnBob3Rvcy85NS85NT8xJywKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnY2xlYXJhYmxlJyA9PiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdmaWxlXzQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2ZpbGUnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnZmlsZXMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0dlbmVyYWwgRmlsZSBVcGxvYWQgKERpc2FibGVkKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaW5wdXQgY2FuIGJlIHVzZWQgdG8gdXBsb2FkIGZpbGVzIG9yIGltYWdlcy4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICAgICAgJ2RlZmF1bHQnID0+ICdodHRwczovL3BpY3N1bS5waG90b3MvOTUvOTU/MicsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2Rpc2FibGVkJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAoKICAgICAgICAgICAgICAgIC8vIFRleHQgSW5wdXRzIFR5cGVzCiAgICAgICAgICAgICAgICAndGV4dCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAndGV4dCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICd0ZXh0JywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdTaW1wbGUgVGV4dCBGaWVsZCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gOCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZW1haWwnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2VtYWlsJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3RleHQnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1NpbXBsZSBFbWFpbCBGaWVsZCB3aXRoIFBsYWNlaG9sZGVyJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdwbGFjZWhvbGRlcicgPT4gX18oJ1BsZWFzZSBlbnRlciB5b3VyIGVtYWlsIGFkZHJlc3MuIEV4LiBlbWFpbEBkb21haW4uY29tJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3VybCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAndXJsJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3RleHQnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1NpbXBsZSBVUkwgRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3NsdWcnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3NsdWcnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAndGV4dCcsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnU2ltcGxlIFNsdWcgRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICBdLAoKICAgICAgICAgICAgICAgIC8vIFRleHQgSW5wdXRzIFN0YXRlcwogICAgICAgICAgICAgICAgJ3RleHRfcmVhZG9ubHknID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3RleHQnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnc3RhdGVzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdSZWFkLW9ubHkgVGV4dCBGaWVsZCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnaGVscCcgPT4gX18oJ1RoaXMgaXMgYSByZWFkLW9ubHkgZmllbGQgaGVscCBtZXNzYWdlLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAndmFsdWUnID0+ICdUaGlzIGlzIGEgcmVhZC1vbmx5IGZpZWxkIHZhbHVlJywKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gOCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAncmVhZG9ubHknID0+IHRydWUsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAndGV4dF9kaXNhYmxlZCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAndGV4dCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdzdGF0ZXMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0Rpc2FibGVkIFRleHQgRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2hlbHAnID0+IF9fKCdUaGlzIGlzIGEgZGlzYWJsZWQgZmllbGQgaGVscCBtZXNzYWdlLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAndmFsdWUnID0+ICdUaGlzIGlzIGEgZGlzYWJsZWQgZmllbGQgdmFsdWUnLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdkaXNhYmxlZCcgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICd0ZXh0X2ljb24xJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICd0ZXh0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3N0YXRlcycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnSWNvbiBUZXh0IEZpZWxkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGV4dCBmaWVsZCB3aXRoIGV4Y2xhbWF0aW9uIGljb24uJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAnZXhjbGFtYXRpb24gdHJpYW5nbGUnLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3RleHRfaWNvbjInID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3Bhc3N3b3JkJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3N0YXRlcycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnSWNvbiBQYXNzd29yZCBGaWVsZCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1Bhc3N3b3JkIGZpZWxkIHdpdGggc3RhciBpY29uLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gOCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ3N0YXIgb2YgbGlmZScsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCgogICAgICAgICAgICAgICAgLy8gTnVtYmVyIElucHV0cwogICAgICAgICAgICAgICAgJ251bWJlcl8xJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdudW1iZXInLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnbnVtYmVycycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnTnVtYmVyIEZpZWxkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnRGVmYXVsdCBkaXN0YW5jZSBpbiBLTSBiZXR3ZWVuIG9yaWdpbiBhbmQgZGVzdGluYXRpb24uJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA2LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICd1bml0JyA9PiAnS00nLAogICAgICAgICAgICAgICAgICAgICAgICAnc3RlcCcgPT4gJzEwJywKICAgICAgICAgICAgICAgICAgICAgICAgJ21heCcgPT4gJzUwMCcsCiAgICAgICAgICAgICAgICAgICAgICAgICdtaW4nID0+ICcwJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdudW1iZXJfMicgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnbnVtYmVyJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ251bWJlcnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ051bWJlciBGaWVsZCB3aXRoIEljb24nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdOdW1iZXIgZmllbGQgd2hpY2ggaGFzIGEgdmVydGljYWwgYXJyb3cgaWNvbi4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDUsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdhcnJvd3MgYWx0ZXJuYXRlIHZlcnRpY2FsJywKICAgICAgICAgICAgICAgICAgICAgICAgJ3VuaXQnID0+ICdweCcsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnbnVtYmVyXzMnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ251bWJlcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdudW1iZXJzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdOdW1iZXIgRmllbGQgd2l0aCBJY29uICgyKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ051bWJlciBmaWVsZCB3aGljaCBoYXMgYSBob3Jpem9udGFsIGFycm93IGljb24uJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA1LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdpY29uJyA9PiAnYXJyb3dzIGFsdGVybmF0ZSBob3Jpem9udGFsJywKICAgICAgICAgICAgICAgICAgICAgICAgJ3N0ZXAnID0+IDUsCiAgICAgICAgICAgICAgICAgICAgICAgICdtaW4nID0+IDAsCiAgICAgICAgICAgICAgICAgICAgICAgICd1bml0JyA9PiAnJScsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCgogICAgICAgICAgICAgICAgLy8gTWFza2VkIElucHV0cwogICAgICAgICAgICAgICAgJ21hc2tfMScgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAndGV4dCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdtYXNrcycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnTWFza2VkIE51bWJlciBGaWVsZCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAndW5pdCcgPT4gJ0tNwrInLAogICAgICAgICAgICAgICAgICAgICAgICAnbWF4JyA9PiAxMDAwMDAwMCwKICAgICAgICAgICAgICAgICAgICAgICAgJ21pbicgPT4gLTEwMDAwMDAwLAogICAgICAgICAgICAgICAgICAgICAgICAnbWFzaycgPT4gJ251bWJlcicsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnbWFza18yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICd0ZXh0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ21hc2tzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdNYXNrZWQgQ3VycmVuY3kgRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3VuaXQnID0+ICdVU0QnLAogICAgICAgICAgICAgICAgICAgICAgICAnbWluJyA9PiAwLAogICAgICAgICAgICAgICAgICAgICAgICAnbWFzaycgPT4gJ251bWJlcicsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnbWFza18zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICd0ZXh0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ21hc2tzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdNYXNrZWQgUGVyY2VudGFnZSBGaWVsZCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAndW5pdCcgPT4gJyUnLAogICAgICAgICAgICAgICAgICAgICAgICAnbWF4JyA9PiAxMDAsCiAgICAgICAgICAgICAgICAgICAgICAgICdtaW4nID0+IDAsCiAgICAgICAgICAgICAgICAgICAgICAgICdtYXNrJyA9PiAncGVyY2VudGFnZScsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnbWFza180JyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICd0ZXh0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ21hc2tzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdNYXNrZWQgUGhvbmUgRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ21hc2snID0+ICdwaG9uZScsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCgogICAgICAgICAgICAgICAgLy8gVGV4dCBBcmVhIElucHV0cwogICAgICAgICAgICAgICAgJ3RleHRhcmVhXzEnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3RleHRhcmVhJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3RleHRhcmVhcycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnVGV4dCBBcmVhIEZpZWxkIHdpdGggPGNvZGU+Jmx0Oy9oZWFkJmd0OzwvY29kZT4gQ29kZSBMYWJlbC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3RleHRhcmVhXzInID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3RleHRhcmVhJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3RleHRhcmVhcycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnVGV4dCBBcmVhIEZpZWxkIHdpdGggUGxhY2Vob2xkZXInLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3BsYWNlaG9sZGVyJyA9PiBfXygnVHlwZSBoZXJlIHNvbWUgbG9uZyB0ZXh0Li4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAndGV4dGFyZWFfMycgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAndGV4dGFyZWEnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAndGV4dGFyZWFzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdSZWFkLW9ubHkgVGV4dCBBcmVhIEZpZWxkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICd2YWx1ZScgPT4gX18oJ1JlYWQtb25seSB0ZXh0IGFyZWEgdmFsdWUuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdyZWFkb25seScgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICd0ZXh0YXJlYV80JyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICd0ZXh0YXJlYScsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICd0ZXh0YXJlYXMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0Rpc2FibGVkIFRleHQgQXJlYSBGaWVsZCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAndmFsdWUnID0+IF9fKCdEaXNhYmxlZCB0ZXh0IGFyZWEgdmFsdWUuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdkaXNhYmxlZCcgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICAvLyBTcGF0aWFsIElucHV0cwogICAgICAgICAgICAgICAgJ2FsaWdubWVudCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnYWxpZ24nLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnc3BhdGlhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnQWxpZ25tZW50IEZpZWxkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnU2VsZWN0IGxvZ28gYWxpZ25tZW50LicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnYWxpZ25tZW50XzInID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2FsaWduJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3NwYXRpYWwnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0FsaWdubWVudCBGaWVsZCAoRGlzYWJsZWQpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnU2VsZWN0IHBhcmFncmFwaCBhbGlnbm1lbnQuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZWZhdWx0JyA9PiAnY2VudGVyJywKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNSwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnanVzdGlmeScgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2Rpc2FibGVkJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3NwYXRpYWwnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3NwYWNlJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3NwYXRpYWwnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1NwYWNlIEZpZWxkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVXNlIHRoaXMgZmllbGQgdG8gYWRqdXN0IG1hcmdpbiwgcGFkZGluZywgb3Igc3BhdGlhbCB2YWx1ZXMuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA2LAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICAvLyBEcm9wZG93biBJbnB1dHMKICAgICAgICAgICAgICAgICdkcm9wZG93bl8xJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdzZWxlY3QnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnZHJvcGRvd25zJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdTZWxlY3QgRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIHNlbGVjdCBmaWVsZCB2YWx1ZSBjYW5ub3QgYmUgY2xlYXJlZC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ2l0ZW1zJyA9PiBkb2Z3X2RhdGEoKS0+dGVybXMoKSwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnY2xlYXJhYmxlJyA9PiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdkcm9wZG93bl8yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdzZWxlY3QnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnZHJvcGRvd25zJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdTZWxlY3QgRmllbGQgKEdvb2dsZSBGb250cyAmIFBsYWNlaG9sZGVyKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1NlYXJjaGFibGUgc2VsZWN0IGZpZWxkIHdpdGggYSBwbGFjZWhvbGRlci4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ2l0ZW1zJyA9PiBkb2Z3X2RhdGEoKS0+Z29vZ2xlX2ZvbnRzKCksCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3BsYWNlaG9sZGVyJyA9PiBfXygnUGljayBhIEdvb2dsZSBmb250Li4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZHJvcGRvd25fMycgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc2VsZWN0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2Ryb3Bkb3ducycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnU2VsZWN0IEZpZWxkIChObyBTZWFyY2gpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBzZWxlY3QgZmllbGQgY2Fubm90IGJlIHNlYXJjaGVkLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnaXRlbXMnID0+IGRvZndfZGF0YSgpLT50ZXJtcygpLAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdzZWFyY2gnID0+IGZhbHNlLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2Ryb3Bkb3duXzQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2NvdW50cnknLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnZHJvcGRvd25zJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdDb3VudHJ5IEZpZWxkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBzZWxlY3QgY2FuIGJlIHVzZWQgdG8gc2VsZWN0IGEgY291bnRyeS4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2Ryb3Bkb3duXzUnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3NlbGVjdCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdkcm9wZG93bnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1NlbGVjdCBGaWVsZCAoTXVsdGlwbGUgJiBGbGFncyknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIHNlbGVjdCBmaWVsZCBoYXMgbGFiZWxzIHBsdXMgZmxhZ3MuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAxID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0VneXB0JywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ZsYWcnID0+ICdlZycsCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDIgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnU2F1ZGkgQXJhYmlhJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ZsYWcnID0+ICdzYScsCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDMgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnVW5pdGVkIEFyYWIgRW1pcmF0ZXMnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZmxhZycgPT4gJ2FlJywKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgNCA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdQYWxlc3RpbmUg4p2k77iPJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ZsYWcnID0+ICdwcycsCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnbXVsdGlwbGUnID0+IHRydWUsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZHJvcGRvd25fNicgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc2VsZWN0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2Ryb3Bkb3ducycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnU2VsZWN0IEZpZWxkIChJY29ucyknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIHNlbGVjdCBmaWVsZCBoYXMgbGFiZWxzIHBsdXMgaWNvbnMuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAxID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0ZlbGluZXMnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2NhdCcsCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDIgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnU2VhIEFuaW1hbHMnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaWNvbicgPT4gJ2Zpc2gnLAogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAzID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0JpcmRzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdjcm93JywKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdkcm9wZG93bl83JyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdzZWxlY3QnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnZHJvcGRvd25zJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdTZWxlY3QgRmllbGQgKEltYWdlcyknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIHNlbGVjdCBmaWVsZCBoYXMgbGFiZWxzIHBsdXMgaW1hZ2VzLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnaXRlbXMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgMSA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdGb28nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaW1nJyA9PiAnaHR0cHM6Ly9waWNzdW0ucGhvdG9zLzUwLzUwPzEnLAogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAyID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0JhcicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpbWcnID0+ICdodHRwczovL3BpY3N1bS5waG90b3MvNTAvNTA/MicsCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDMgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnQmF6JywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ltZycgPT4gJ2h0dHBzOi8vcGljc3VtLnBob3Rvcy81MC81MD8zJywKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdkcm9wZG93bl84JyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdzZWxlY3QnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnZHJvcGRvd25zJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdNdWx0aXBsZS1TZWxlY3QgRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIHNlbGVjdCBmaWVsZCBjYW4gaGF2ZSBtdWx0aXBsZSBjaG9pY2VzLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnaXRlbXMnID0+IGRvZndfZGF0YSgpLT50ZXJtcygpLAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdtdWx0aXBsZScgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICAvLyBJbWFnZSBTZWxlY3QgSW5wdXRzCiAgICAgICAgICAgICAgICAnaW1hZ2Vfc2VsZWN0XzEnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2ltYWdlX3NlbGVjdCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdpbWFnZV9zZWxlY3RzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdJbWFnZS1TZWxlY3QgRmllbGQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdJbWFnZSBzZWxlY3QgaW5wdXRzIGFyZSB2aXN1YWwgY2hvaWNlIGlucHV0cyB1c2luZyBwaWN0dXJlcy4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICAgICAgJ2l0ZW1zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgIDEgPT4gZG9md19hc3NldCgnc2FtcGxlL2Nob2ljZV8xLnBuZycpLAogICAgICAgICAgICAgICAgICAgICAgICAyID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9jaG9pY2VfMi5wbmcnKSwKICAgICAgICAgICAgICAgICAgICAgICAgMyA9PiBkb2Z3X2Fzc2V0KCdzYW1wbGUvY2hvaWNlXzMucG5nJyksCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnaW1hZ2Vfc2VsZWN0XzInID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2ltZ19zZWxlY3QnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnaW1hZ2Vfc2VsZWN0cycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnSW1hZ2UtU2VsZWN0IEZpZWxkICgyKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ0ltYWdlIHNlbGVjdCB3aXRoIGEgbWlzc2luZyBwaWN0dXJlLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gOCwKICAgICAgICAgICAgICAgICAgICAnaXRlbXMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgMSA9PiBkb2Z3X2Fzc2V0KCdzYW1wbGUvY2hvaWNlXzEucG5nJyksCiAgICAgICAgICAgICAgICAgICAgICAgIDIgPT4gZG9md19hc3NldCgnc2FtcGxlL05PX1NVQ0hfSU1BR0VfQVRfVEhJU19QQVRILnBuZycpLAogICAgICAgICAgICAgICAgICAgICAgICAzID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9jaG9pY2VfMy5wbmcnKSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICAvLyBDb2xvciBQaWNrZXIgSW5wdXRzCiAgICAgICAgICAgICAgICAnY29sb3JfMScgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnY29sb3InLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnY29sb3JfcGlja2VycycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnQ29sb3IgUGlja2VyIEZpZWxkJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyBhIGNvbG9yIHBpY2tlciB1c2luZyB0aGUgZGVmYXVsdCA8Y29kZT5zaW1wbGU8L2NvZGU+IG1vZGUuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdjb2xvcl8yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdjb2xvcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdjb2xvcl9waWNrZXJzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdDb2xvciBQaWNrZXIgRmllbGQgKEFkdmFuY2VkKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaXMgYSBjb2xvciBwaWNrZXIgdXNpbmcgdGhlIDxjb2RlPmFkdmFuY2VkPC9jb2RlPiBtb2RlLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnbW9kZScgPT4gJ2FkdmFuY2VkJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdjb2xvcl8zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdjb2xvcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdjb2xvcl9waWNrZXJzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdDb2xvciBQaWNrZXIgRmllbGQgKENvbXBsZXgpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyBhIGNvbG9yIHBpY2tlciB1c2luZyB0aGUgPGNvZGU+Y29tcGxleDwvY29kZT4gbW9kZS4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ21vZGUnID0+ICdjb21wbGV4JywKICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbG9yX2ljb24nID0+ICdwYWludCBicnVzaCcsCiAgICAgICAgICAgICAgICAgICAgICAgICdwaWNrZXJfaWNvbicgPT4gJ3BhaW50IHJvbGxlcicsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnY29sb3JfNCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnY29sb3InLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnY29sb3JfcGlja2VycycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnQ29sb3IgUGlja2VyIEZpZWxkIChQYWxldHRlKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaXMgYSBjb2xvciBwaWNrZXIgdXNpbmcgdGhlIDxjb2RlPnBhbGV0dGU8L2NvZGU+IG1vZGUuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdtb2RlJyA9PiAncGFsZXR0ZScsCiAgICAgICAgICAgICAgICAgICAgICAgICdjb2xvcl9pY29uJyA9PiAnaGlnaGxpZ2h0ZXInLAogICAgICAgICAgICAgICAgICAgICAgICAncGlja2VyX2ljb24nID0+ICdwYWxldHRlJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICAvLyBJY29uIFBpY2tlciBJbnB1dHMKICAgICAgICAgICAgICAgICdpY29uXzEnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2ljb24nLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnaWNvbl9waWNrZXJzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdJY29uIFBpY2tlciBGaWVsZCAoQWxsIEljb25zKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaXMgYW4gaWNvbiBwaWNrZXIgd2l0aCBhbGwgaWNvbnMgbGlzdGVkLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnaWNvbl8yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdpY29uJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2ljb25fcGlja2VycycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnSWNvbiBQaWNrZXIgRmllbGQgKEN1c3RvbSBJY29ucyBMaXN0KScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaXMgYW4gaWNvbiBwaWNrZXIgd2l0aCBjdXN0b20gc3BlY2lmaWMgaWNvbnMgbGlzdC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ2l0ZW1zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdmYXMgZmEtYXVkaW8tZGVzY3JpcHRpb24nLAogICAgICAgICAgICAgICAgICAgICAgICAnZmFzIGZhLWFkZHJlc3MtYm9vaycsCiAgICAgICAgICAgICAgICAgICAgICAgICdmYXMgZmEtYWRkcmVzcy1jYXJkJywKICAgICAgICAgICAgICAgICAgICAgICAgJ2ZhcyBmYS1hZGp1c3QnLAogICAgICAgICAgICAgICAgICAgICAgICAnZmFzIGZhLWFsaWduLWNlbnRlcicsCiAgICAgICAgICAgICAgICAgICAgICAgICdmYXMgZmEtYWxpZ24tanVzdGlmeScsCiAgICAgICAgICAgICAgICAgICAgICAgICdmYXMgZmEtYWxpZ24tbGVmdCcsCiAgICAgICAgICAgICAgICAgICAgICAgICdmYXMgZmEtYWxpZ24tcmlnaHQnLAogICAgICAgICAgICAgICAgICAgICAgICAnZmFzIGZhLWFtYnVsYW5jZScsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnaWNvbl8zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdpY29uJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2ljb25fcGlja2VycycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnSWNvbiBQaWNrZXIgRmllbGQgKEJyYW5kcyBJY29ucyBMaXN0KScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaXMgYW4gaWNvbiBwaWNrZXIgd2l0aCBwb3B1bGFyIGJyYW5kcyBpY29ucyBsaXN0LicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnaXRlbXMnID0+IGRvZndfZGF0YSgpLT5icmFuZHNfaWNvbnMoKSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnaWNvbl80JyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdpY29uJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2ljb25fcGlja2VycycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnSWNvbiBQaWNrZXIgRmllbGQgKERpc2FibGVkKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaXMgYW4gaWNvbiBwaWNrZXIgd2l0aCBzb2NpYWwgaWNvbnMgbGlzdC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2Rpc2FibGVkJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAoKICAgICAgICAgICAgICAgIC8vIERhdGUgSW5wdXMKICAgICAgICAgICAgICAgICdkYXRlXzEnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2RhdGUnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnZGF0ZXMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0RhdGUgRmllbGQgKERhdGUtVGltZSknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIGlzIGEgZGF0ZS10aW1lIGlucHV0LicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZGF0ZV8yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdkYXRlJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2RhdGVzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdEYXRlIEZpZWxkIChEYXRlIE9ubHkpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyBhIGRhdGUgb25seSBpbnB1dC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ21vZGUnID0+ICdkYXRlJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdkYXRlXzMnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2RhdGUnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnZGF0ZXMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0RhdGUgRmllbGQgKFRpbWUgT25seSknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIGlzIGEgdGltZSBvbmx5IGlucHV0LicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnbW9kZScgPT4gJ3RpbWUnLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2RhdGVfNCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnZGF0ZScsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdkYXRlcycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnRGF0ZSBGaWVsZCAoRGlzYWJsZWQpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyBhIGRpc2FibGVkIGRhdGUgaW5wdXQuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdkaXNhYmxlZCcgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICAvLyBTbGlkZXIgSW5wdXRzCiAgICAgICAgICAgICAgICAnc2xpZGVyXzEnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3NsaWRlcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdzbGlkZXJzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdTbGlkZXIgRmllbGQgKFNpbXBsZSknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIGlzIGEgc2ltcGxlIHNsaWRlciBpbnB1dC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3NsaWRlcl8yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdzbGlkZXInLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnZ2VuZXJhbCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnc2xpZGVycycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnU2xpZGVyIEZpZWxkIChMYWJlbHMpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyBhIHNpbXBsZSBsYWJlbGVkIHNsaWRlci4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsZWQnID0+IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICdzdGVwJyA9PiAxLAogICAgICAgICAgICAgICAgICAgICAgICAnbWF4JyA9PiAxMCwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdzbGlkZXJfMycgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc2xpZGVyJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3NsaWRlcnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1NsaWRlciBGaWVsZCAoTGFiZWxzICYgVGlja3MpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyBhIHNpbXBsZSBsYWJlbGVkIHNsaWRlciB3aXRoIHRpY2tzLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnbGFiZWxlZCcgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgJ3RpY2tzJyA9PiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAnc3RlcCcgPT4gMSwKICAgICAgICAgICAgICAgICAgICAgICAgJ21heCcgPT4gMTAsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnc2xpZGVyXzQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3NsaWRlcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdzbGlkZXJzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdTbGlkZXIgRmllbGQgKExhYmVsZWQgUmFuZ2UpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyBhIHJhbmdlIHNsaWRlci4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsZWQnID0+IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICdyYW5nZScgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgJ3N0ZXAnID0+IDEsCiAgICAgICAgICAgICAgICAgICAgICAgICdzdGFydCcgPT4gMiwKICAgICAgICAgICAgICAgICAgICAgICAgJ2VuZCcgPT4gNSwKICAgICAgICAgICAgICAgICAgICAgICAgJ21heCcgPT4gMTAsCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCgogICAgICAgICAgICAgICAgLy8gRWRpdG9ycyBJbnB1dHMKICAgICAgICAgICAgICAgICdjb2RlX2pzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdjb2RlJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2VkaXRvcnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0NvZGUgRWRpdG9yIChKYXZhc2NyaXB0KScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaXMgdGhlIGRlZmF1bHQgY29kZSBlZGl0b3IgY29uZmlndXJhdGlvbi4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2NvZGVfY3NzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdjb2RlJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2VkaXRvcnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0NvZGUgRWRpdG9yIChDU1MpJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyBhIGN1c3RvbSBjb2RlIGVkaXRvciBjb25maWd1cmF0aW9uIHVzaW5nIDxjb2RlPmNzczwvY29kZT4gc3ludGF4IGFuZCA8Y29kZT5kcmVhbXdlYXZlcjwvY29kZT4gdGhlbWUuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdsYW5ndWFnZScgPT4gJ2NzcycsCiAgICAgICAgICAgICAgICAgICAgICAgICd0aGVtZScgPT4gJ2RyZWFtd2VhdmVyJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdjb2RlX21hcmtkb3duJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdjb2RlJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2VkaXRvcnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0NvZGUgRWRpdG9yIChNYXJrZG93biknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUaGlzIGlzIGEgY3VzdG9tIGNvZGUgZWRpdG9yIGNvbmZpZ3VyYXRpb24gdXNpbmcgPGNvZGU+bWFya2Rvd248L2NvZGU+IHN5bnRheCBhbmQgPGNvZGU+YW1iaWFuY2U8L2NvZGU+IHRoZW1lLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gOCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnbGFuZ3VhZ2UnID0+ICdtYXJrZG93bicsCiAgICAgICAgICAgICAgICAgICAgICAgICd0aGVtZScgPT4gJ2FtYmlhbmNlJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdjb2RlX3BocCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnY29kZScsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdlZGl0b3JzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdDb2RlIEVkaXRvciAoUEhQKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaXMgYSBjdXN0b20gY29kZSBlZGl0b3IgY29uZmlndXJhdGlvbiB1c2luZyA8Y29kZT5waHA8L2NvZGU+IHN5bnRheCBhbmQgPGNvZGU+Z2l0aHViPC9jb2RlPiB0aGVtZS4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2xhbmd1YWdlJyA9PiAncGhwJywKICAgICAgICAgICAgICAgICAgICAgICAgJ3RoZW1lJyA9PiAnZ2l0aHViJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICd3cF9lZGl0b3InID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2VkaXRvcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdnZW5lcmFsJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdlZGl0b3JzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdXb3JkUHJlc3MgRWRpdG9yJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVGhpcyBpcyB0aGUgV29yZFByZXNzIGVkaXRvciBmaWVsZC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ3dwX2VkaXRvcl9kaXNhYmxlZCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnZWRpdG9yJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2dlbmVyYWwnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2VkaXRvcnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1dvcmRQcmVzcyBFZGl0b3IgKERpc2FibGVkKScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RoaXMgaXMgdGhlIFdvcmRQcmVzcyBlZGl0b3IgZmllbGQuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdkaXNhYmxlZCcgPT4gdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgXSk7CgogICAgICAgICAgICAvLyBBZHZhbmNlZDogQXJjaGl2ZXMgRmllbGRzCiAgICAgICAgICAgICRhZHZhbmNlZC0+YWRkX2ZpZWxkcyhbCiAgICAgICAgICAgICAgICAnY2F0ZWdvcmllc19sYXlvdXQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2ltYWdlX3NlbGVjdCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdhcmNoaXZlcycsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnY2F0ZWdvcmllcycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnQ2F0ZWdvcmllcyBQYWdlIExheW91dCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ0NhdGVnb3JpZXMgcGFnZSBsYXlvdXQuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAxID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9jYXRlZ29yaWVzL2NhdF8xLnBuZycpLAogICAgICAgICAgICAgICAgICAgICAgICAyID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9jYXRlZ29yaWVzL2NhdF8yLnBuZycpLAogICAgICAgICAgICAgICAgICAgICAgICAzID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9jYXRlZ29yaWVzL2NhdF8zLnBuZycpLAogICAgICAgICAgICAgICAgICAgICAgICA0ID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9jYXRlZ29yaWVzL2NhdF80LnBuZycpLAogICAgICAgICAgICAgICAgICAgICAgICA1ID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9jYXRlZ29yaWVzL2NhdF81LnBuZycpLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICBdKTsKCiAgICAgICAgICAgIC8vIEFkdmFuY2VkOiBTaW5nbGUgUG9zdCBGaWVsZHMKICAgICAgICAgICAgJGFkdmFuY2VkLT5hZGRfZmllbGRzKFsKICAgICAgICAgICAgICAgIC8vIFNpbmdsZSBQb3N0IFNldHRpbmdzCiAgICAgICAgICAgICAgICAnZW5hYmxlX2F1dGhvcicgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc3dpdGNoJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3NpbmdsZV9wb3N0JywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdzaW5nbGVfcG9zdF9zZXR0aW5ncycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnRGlzcGxheSBhdXRob3InLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdBdXRob3IgaW5mbycsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZW5hYmxlX2NhdGVnb3J5JyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdzd2l0Y2gnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnc2luZ2xlX3Bvc3QnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3NpbmdsZV9wb3N0X3NldHRpbmdzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdEaXNwbGF5IGNhdGVnb3J5JywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnQ2F0ZWdvcnknLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2VuYWJsZV90YWdzJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdzd2l0Y2gnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnc2luZ2xlX3Bvc3QnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3NpbmdsZV9wb3N0X3NldHRpbmdzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdEaXNwbGF5IHRhZ3MnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUYWdzJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdlbmFibGVfcmVhZF90aW1lJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdzd2l0Y2gnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnc2luZ2xlX3Bvc3QnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3NpbmdsZV9wb3N0X3NldHRpbmdzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdEaXNwbGF5IHJlYWQgdGltZScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1JlYWQgdGltZScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZW5hYmxlX2NyZWF0ZWQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3N3aXRjaCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdzaW5nbGVfcG9zdCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnc2luZ2xlX3Bvc3Rfc2V0dGluZ3MnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0Rpc3BsYXkgY3JlYXRlZCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ0NyZWF0ZWQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2VuYWJsZV9mYXZvcml0ZScgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc3dpdGNoJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3NpbmdsZV9wb3N0JywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdzaW5nbGVfcG9zdF9zZXR0aW5ncycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnRGlzcGxheSBmYXZvcml0ZScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ0Zhdm9yaXRlJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdlbmFibGVfc2hhcmUnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3N3aXRjaCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdzaW5nbGVfcG9zdCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnc2luZ2xlX3Bvc3Rfc2V0dGluZ3MnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0Rpc3BsYXkgc2hhcmUnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdTaGFyZScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZW5hYmxlX3R0cycgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc3dpdGNoJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3NpbmdsZV9wb3N0JywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdzaW5nbGVfcG9zdF9zZXR0aW5ncycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnRGlzcGxheSB0ZXh0IHRvIHNwZWVjaCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1RleHQgdG8gc3BlZWNoJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICAvLyBTaW5nbGUgUG9zdCBMYXlvdXQKICAgICAgICAgICAgICAgICdzaW5nbGVfcG9zdF9sYXlvdXQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2ltYWdlX3NlbGVjdCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdzaW5nbGVfcG9zdCcsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnc2luZ2xlX3Bvc3RfbGF5b3V0JywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdTaW5nbGUgUG9zdCBMYXlvdXQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdTaW5nbGUgcG9zdCBsYXlvdXQuJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdpdGVtcycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAnY2FyZFBvc3QnID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9ibG9ja3MvY2FyZFBvc3QucG5nJyksCiAgICAgICAgICAgICAgICAgICAgICAgICdlbmRUaHVtYlBvc3QnID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9ibG9ja3MvZW5kVGh1bWJQb3N0LnBuZycpLAogICAgICAgICAgICAgICAgICAgICAgICAnZmVhdHVyZWRNZXRhUG9zdCcgPT4gZG9md19hc3NldCgnc2FtcGxlL2Jsb2Nrcy9mZWF0dXJlZE1ldGFQb3N0LnBuZycpLAogICAgICAgICAgICAgICAgICAgICAgICAnZmVhdHVyZWRQb3N0JyA9PiBkb2Z3X2Fzc2V0KCdzYW1wbGUvYmxvY2tzL2ZlYXR1cmVkUG9zdC5wbmcnKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2ltYWdlUG9zdCcgPT4gZG9md19hc3NldCgnc2FtcGxlL2Jsb2Nrcy9pbWFnZVBvc3QucG5nJyksCiAgICAgICAgICAgICAgICAgICAgICAgICdtaW5pbWFsUG9zdCcgPT4gZG9md19hc3NldCgnc2FtcGxlL2Jsb2Nrcy9taW5pbWFsUG9zdC5wbmcnKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ3NpbXBsZVBvc3QnID0+IGRvZndfYXNzZXQoJ3NhbXBsZS9ibG9ja3Mvc2ltcGxlUG9zdC5wbmcnKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ3N0YXJ0VGh1bWJQb3N0JyA9PiBkb2Z3X2Fzc2V0KCdzYW1wbGUvYmxvY2tzL3N0YXJ0VGh1bWJQb3N0LnBuZycpLAogICAgICAgICAgICAgICAgICAgICAgICAnc3RhcnRUaHVtYlBvc3RDb21wYWN0JyA9PiBkb2Z3X2Fzc2V0KCdzYW1wbGUvYmxvY2tzL3N0YXJ0VGh1bWJQb3N0Q29tcGFjdC5wbmcnKSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgXSk7CgogICAgICAgICAgICAvLyBBZHZhbmNlZDogU2hhcmUgQnV0dG9ucyBGaWVsZHMKICAgICAgICAgICAgJGFkdmFuY2VkLT5hZGRfZmllbGRzKFsKICAgICAgICAgICAgICAgICdlbmFibGVfZmFjZWJvb2snID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3N3aXRjaCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdzaGFyZV9idXR0b25zJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdzaGFyZV9idXR0b25zX3NldHRpbmdzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdEaXNwbGF5IEZhY2Vib29rJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnRmFjZWJvb2snLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2VuYWJsZV9saW5rZWRpbicgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc3dpdGNoJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3NoYXJlX2J1dHRvbnMnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3NoYXJlX2J1dHRvbnNfc2V0dGluZ3MnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0Rpc3BsYXkgTGlua2VkaW4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdMaW5rZWRpbicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZW5hYmxlX3R3aXR0ZXInID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3N3aXRjaCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdzaGFyZV9idXR0b25zJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdzaGFyZV9idXR0b25zX3NldHRpbmdzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdEaXNwbGF5IFR3aXR0ZXInLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdUd2l0dGVyJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdlbmFibGVfdmsnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3N3aXRjaCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdzaGFyZV9idXR0b25zJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdzaGFyZV9idXR0b25zX3NldHRpbmdzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdEaXNwbGF5IFZLJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnVksnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2VuYWJsZV90dW1ibHInID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3N3aXRjaCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdzaGFyZV9idXR0b25zJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdzaGFyZV9idXR0b25zX3NldHRpbmdzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdEaXNwbGF5IFR1bWJscicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ1R1bWJscicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnZW5hYmxlX3BpbnRlcmVzdCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc3dpdGNoJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3NoYXJlX2J1dHRvbnMnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3NoYXJlX2J1dHRvbnNfc2V0dGluZ3MnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0Rpc3BsYXkgUGludGVyZXN0JywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnUGludGVyZXN0JywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdlbmFibGVfZW1haWwnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3N3aXRjaCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdzaGFyZV9idXR0b25zJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdzaGFyZV9idXR0b25zX3NldHRpbmdzJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdEaXNwbGF5IEVtYWlsJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnRW1haWwnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDQsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2VuYWJsZV9wcmludCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAnc3dpdGNoJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3NoYXJlX2J1dHRvbnMnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ3NoYXJlX2J1dHRvbnNfc2V0dGluZ3MnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0Rpc3BsYXkgUHJpbnQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdQcmludCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgIF0pOwoKICAgICAgICAgICAgLy8gQWR2YW5jZWQ6IEFkcyBGaWVsZHMKICAgICAgICAgICAgJGFkdmFuY2VkLT5hZGRfZmllbGRzKFsKICAgICAgICAgICAgICAgICdhZG1vYl9iYW5uZXJfZW5hYmxlJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdzd2l0Y2gnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAnYWRzJywKICAgICAgICAgICAgICAgICAgICAnZ3JvdXAnID0+ICdhZHNfYWRtb2JfYmFubmVyJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdFbmFibGUgQWRtb2IgQmFubmVyJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnQWRtb2IgQmFubmVyJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA0LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdhZG1vYl9iYW5uZXJfYW5kcm9pZF9pZCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAndGV4dCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICdhZHMnLAogICAgICAgICAgICAgICAgICAgICdncm91cCcgPT4gJ2Fkc19hZG1vYl9iYW5uZXInLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ0FkbW9iIEJhbm5lciBBbmRyb2lkIElEJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnRW50ZXIgQWRtb2IgYW5kcm9pZCBwdWJsaXNoZXIgaWRlbnRpZmllci4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDYsCiAgICAgICAgICAgICAgICAgICAgJ3Nob3dfaWYnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2FkbW9iX2Jhbm5lcl9lbmFibGUnID0+ICd0cnVlJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdhZG1vYl9iYW5uZXJfaW9zX2lkJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICd0ZXh0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ2FkcycsCiAgICAgICAgICAgICAgICAgICAgJ2dyb3VwJyA9PiAnYWRzX2FkbW9iX2Jhbm5lcicsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnQWRtb2IgQmFubmVyIGlPUyBJRCcsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ0VudGVyIEFkbW9iIGlPUyBwdWJsaXNoZXIgaWRlbnRpZmllci4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDYsCiAgICAgICAgICAgICAgICAgICAgJ3Nob3dfaWYnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2FkbW9iX2Jhbm5lcl9lbmFibGUnID0+ICd0cnVlJywKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgXSk7CgogICAgICAgICAgICAvLyBBZHZhbmNlZDogVHlwb2dyYXBoeSBGaWVsZHMKICAgICAgICAgICAgJGFkdmFuY2VkLT5hZGRfZmllbGRzKFsKICAgICAgICAgICAgICAgICdwcmltYXJ5X2ZvbnQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3NlbGVjdCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICd0eXBvZ3JhcGh5JywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdQcmltYXJ5IEZvbnQnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2Rlc2MnID0+IF9fKCdTZWxlY3QgYSBmb250IGZhbWlseSB0byBhc3NpbmcgYXMgdGhlIHByaW1hcnkgdGhlbWUgZm9udC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICAgICAgJ2l0ZW1zJyA9PiBkb2Z3X2RhdGEoKS0+Z29vZ2xlX2ZvbnRzKCksCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3BsYWNlaG9sZGVyJyA9PiBfXygnUGljayBhIEdvb2dsZSBmb250Li4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnYmFzZV9hbGlnbm1lbnQnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ2FsaWduJywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3R5cG9ncmFwaHknLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1RleHQgQWxpZ25tZW50JywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnRGVmYXVsdCB0ZXh0IGFsaWdubWVudC4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2RlZmF1bHQnID0+ICdsZWZ0JywKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gMiwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnYmFzZV9mb250X3NpemUnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ251bWJlcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICd0eXBvZ3JhcGh5JywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdCYXNlIEZvbnQgU2l6ZScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVzYycgPT4gX18oJ0RlZmF1bHQgaXMgIjE2cHgiLicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnZGVmYXVsdCcgPT4gMTYsCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDIsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ2ljb24nID0+ICdmb250JywKICAgICAgICAgICAgICAgICAgICAgICAgJ3VuaXQnID0+ICdweCcsCiAgICAgICAgICAgICAgICAgICAgICAgICdtaW4nID0+IDE0LAogICAgICAgICAgICAgICAgICAgICAgICAnbWF4JyA9PiAyNCwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdwcmltYXJ5X2NvbG9yJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICdjb2xvcicsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICd0eXBvZ3JhcGh5JywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdQcmltYXJ5IENvbG9yJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdkZXNjJyA9PiBfXygnUHJpbWFyeSB0aGVtZSBjb2xvci4nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2RlZmF1bHQnID0+ICcjMWM2MmRiJywKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gNCwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgIF0pOwoKICAgICAgICAgICAgLy8gQWR2YW5jZWQ6IFRyYW5zbGF0aW9ucyBGaWVsZHMKICAgICAgICAgICAgJGFkdmFuY2VkLT5hZGRfZmllbGRzKFsKICAgICAgICAgICAgICAgICdob21lJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICd0ZXh0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3RyYW5zbGF0aW9ucycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnSG9tZScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gOCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAncGxhY2Vob2xkZXInID0+IF9fKCdQaHJhc2UgdHJhbnNsYXRpb24nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAnc2tpcCcgPT4gWwogICAgICAgICAgICAgICAgICAgICd0eXBlJyA9PiAndGV4dCcsCiAgICAgICAgICAgICAgICAgICAgJ3NlY3Rpb24nID0+ICd0cmFuc2xhdGlvbnMnLAogICAgICAgICAgICAgICAgICAgICdsYWJlbCcgPT4gX18oJ1NraXAnLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgJ2NvbHVtbnMnID0+IDgsCiAgICAgICAgICAgICAgICAgICAgJ29wdGlvbnMnID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3BsYWNlaG9sZGVyJyA9PiBfXygnUGhyYXNlIHRyYW5zbGF0aW9uJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgJ2RvbmUnID0+IFsKICAgICAgICAgICAgICAgICAgICAndHlwZScgPT4gJ3RleHQnLAogICAgICAgICAgICAgICAgICAgICdzZWN0aW9uJyA9PiAndHJhbnNsYXRpb25zJywKICAgICAgICAgICAgICAgICAgICAnbGFiZWwnID0+IF9fKCdEb25lJywgJ2RvLWZyYW1ld29yaycpLAogICAgICAgICAgICAgICAgICAgICdjb2x1bW5zJyA9PiA4LAogICAgICAgICAgICAgICAgICAgICdvcHRpb25zJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICdwbGFjZWhvbGRlcicgPT4gX18oJ1BocmFzZSB0cmFuc2xhdGlvbicsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICdzYXZlJyA9PiBbCiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnID0+ICd0ZXh0JywKICAgICAgICAgICAgICAgICAgICAnc2VjdGlvbicgPT4gJ3RyYW5zbGF0aW9ucycsCiAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJyA9PiBfXygnU2F2ZScsICdkby1mcmFtZXdvcmsnKSwKICAgICAgICAgICAgICAgICAgICAnY29sdW1ucycgPT4gOCwKICAgICAgICAgICAgICAgICAgICAnb3B0aW9ucycgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAncGxhY2Vob2xkZXInID0+IF9fKCdQaHJhc2UgdHJhbnNsYXRpb24nLCAnZG8tZnJhbWV3b3JrJyksCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgIF0pOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICR0aGlzOwogICAgfQoKICAgIC8qKgogICAgICogU2V0IFBhZ2VzIENvbmZpZ3VyYXRpb24uCiAgICAgKgogICAgICogQHBhcmFtIGFycmF5ICRjb25maWcgRGVmYXVsdCBQYWdlcyBDb25maWd1cmF0aW9uCiAgICAgKiBAcmV0dXJuIHNlbGYKICAgICAqLwogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIF9zZXRfY29uZmlnKGFycmF5ICRjb25maWcgPSBbXSkKICAgIHsKICAgICAgICAkY29uZmlnID0gd3BfcGFyc2VfYXJncygkY29uZmlnLCBzdGF0aWM6OkNPTkZJRyk7CgogICAgICAgICR0aGlzLT5fY29uZmlnID0gJGNvbmZpZzsKCiAgICAgICAgcmV0dXJuICR0aGlzOwogICAgfQoKICAgIC8qKgogICAgICogQ2hlY2sgaWYgYSBnaXZlbiBwYWdlIGlzIGVuYWJsZWQgYnkgY29uZmlndXJhdGlvbi4KICAgICAqCiAgICAgKiBAcGFyYW0gc3RyaW5nICRpZAogICAgICogQHJldHVybiBib29sCiAgICAgKi8KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBfcGFnZV9lbmFibGVkKCRpZCkKICAgIHsKICAgICAgICAkZW5hYmxlZCA9IGZhbHNlOwoKICAgICAgICBmb3JlYWNoICgkdGhpcy0+X2NvbmZpZyBhcyAkY29uZmlnKSB7CiAgICAgICAgICAgIGlmIChpc3NldCgkY29uZmlnWydpZCddKSAmJiAkY29uZmlnWydpZCddID09PSAkaWQpIHsKICAgICAgICAgICAgICAgIHJldHVybiBpc3NldCgkY29uZmlnWydlbmFibGVkJ10pICYmICRjb25maWdbJ2VuYWJsZWQnXSA9PT0gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICRlbmFibGVkOwogICAgfQp9CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YToxOntzOjI3OiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXMiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfIjoxMTp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Mjc6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlcyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjI2OiJEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlcyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NDM6IkRlZmF1bHQgUGx1Z2luIFJlZ2lzdGVyZWQgUGFnZXMgQ29udHJvbGxlci4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MTc5OiJUaGlzIGNsYXNzIGRlZmluZXMgYWxsIGNvZGUgbmVjZXNzYXJ5IHRvIGhhbmRsZSBkZWZhdWx0IHBsdWdpbiBwYWdlcywgd2hpY2ggYXJlIHJlZ2lzdGVyZWQgaW4Kbm9ybWFsIG9wZXJhdGlvbiBtb2RlIHdoaWNoIGlzIHByaW1hcmlseSB1c2VkIGZvciBzaG93Y2FzaW5nIHRoZSBwbHVnaW4gY2FwYWJpbGl0aWVzLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjQ6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xTaW5jZSI6Mzp7czo3OiIAKgBuYW1lIjtzOjU6InNpbmNlIjtzOjUzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcU2luY2UAdmVyc2lvbiI7czo1OiIxLjAuMCI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czo3OiJwYWNrYWdlIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czoxMjoiRG9fRnJhbWV3b3JrIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToyO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czoxMDoic3VicGFja2FnZSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MjE6IkRvX0ZyYW1ld29yay9pbmNsdWRlcyI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MztPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xBdXRob3IiOjQ6e3M6NzoiACoAbmFtZSI7czo2OiJhdXRob3IiO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xBdXRob3IAYXV0aG9yTmFtZSI7czoxMjoiRGVkdWxhYiBUZWFtIjtzOjU4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcQXV0aG9yAGF1dGhvckVtYWlsIjtzOjE2OiJpbmZvQGRlZHVsYWIuY29tIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tjt9fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjE1O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwYXJlbnQiO047czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGltcGxlbWVudHMiO2E6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBjb25zdGFudHMiO2E6Nzp7czo0MToiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpFTkFCTEVfUEFHRVMiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQiOjU6e3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDE6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6RU5BQkxFX1BBR0VTIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTI6IkVOQUJMRV9QQUdFUyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyMDoiRW5hYmxlIEFkZGluZyBQYWdlcy4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjMwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AHZhbHVlIjtzOjU6Ilx0cnVlIjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzM7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9fXM6NDE6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6RU5BQkxFX0RFTU9TIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50Ijo1OntzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQxOiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXM6OkVOQUJMRV9ERU1PUyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEyOiJFTkFCTEVfREVNT1MiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MjA6IkVuYWJsZSBBZGRpbmcgRGVtb3MuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozNTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudAB2YWx1ZSI7czo2OiJcZmFsc2UiO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozODtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO319czo0MzoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpFTkFCTEVfUExVR0lOUyI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudCI6NTp7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0MzoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpFTkFCTEVfUExVR0lOUyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE0OiJFTkFCTEVfUExVR0lOUyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyMjoiRW5hYmxlIEFkZGluZyBQbHVnaW5zLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAdmFsdWUiO3M6NjoiXGZhbHNlIjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDM7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9fXM6MzU6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6Q09ORklHIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50Ijo1OntzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjM1OiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXM6OkNPTkZJRyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjY6IkNPTkZJRyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czozODoiRGVmYXVsdCBQYWdlcyBDb25maWd1cmF0aW9uIFN0cnVjdHVyZS4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjQ1O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AHZhbHVlIjtzOjE1NDQ6IlsnZ2VuZXJhbCcgPT4gWydlbmFibGVkJyA9PiBcdHJ1ZSwgJ2lkJyA9PiAnZG9mdy1nZW5lcmFsJywgJ3BhcmVudCcgPT4gXG51bGwsICdtZW51X3RpdGxlJyA9PiAnRGVkdWxhYicsICdtZW51X3NpZGVfdGl0bGUnID0+ICdHZW5lcmFsJywgJ3RpdGxlJyA9PiAnR2VuZXJhbCcsICd0eXBlJyA9PiAnZm9ybScsICdwb3NpdGlvbicgPT4gMiwgJ2ljb24nID0+IFxET0ZXX0lNQUdFU19VUkwgLiAnZGVkdWxhYi5zdmcnLCAndGFiX2xpbmsnID0+IFsnaWNvbicgPT4gJ2NvZyddXSwgJ2RlbW9zJyA9PiBbJ2VuYWJsZWQnID0+IFxmYWxzZSwgJ2lkJyA9PiAnZG9mdy1kZW1vcycsICdwYXJlbnQnID0+ICdkb2Z3LWdlbmVyYWwnLCAnbWVudV90aXRsZScgPT4gJ0RlbW9zJywgJ3RpdGxlJyA9PiAnRGVtb3MnLCAndHlwZScgPT4gJ2RlbW9zJywgJ3Bvc2l0aW9uJyA9PiAwLCAndGFiX2xpbmsnID0+IFsnaWNvbicgPT4gJ3N3YXRjaGJvb2snXV0sICdwbHVnaW5zJyA9PiBbJ2VuYWJsZWQnID0+IFxmYWxzZSwgJ2lkJyA9PiAnZG9mdy1wbHVnaW5zJywgJ3BhcmVudCcgPT4gJ2RvZnctZ2VuZXJhbCcsICdtZW51X3RpdGxlJyA9PiAnUGx1Z2lucycsICd0aXRsZScgPT4gJ1BsdWdpbnMnLCAndHlwZScgPT4gJ3BsdWdpbnMnLCAncG9zaXRpb24nID0+IDAsICd0YWJfbGluaycgPT4gWydpY29uJyA9PiAncGx1ZyddXSwgJ3RoZW1lJyA9PiBbJ2VuYWJsZWQnID0+IFxmYWxzZSwgJ2lkJyA9PiAnZG9mdy10aGVtZScsICdwYXJlbnQnID0+ICdkb2Z3LWdlbmVyYWwnLCAnbWVudV90aXRsZScgPT4gJ1RoZW1lIFN0eWxlcycsICd0aXRsZScgPT4gJ1RoZW1lIFN0eWxlcycsICd0eXBlJyA9PiAnZm9ybScsICdwb3NpdGlvbicgPT4gMCwgJ3RhYl9saW5rJyA9PiBbJ2ljb24nID0+ICdwYWludCBicnVzaCddXSwgJ2FkdmFuY2VkJyA9PiBbJ2VuYWJsZWQnID0+IFx0cnVlLCAnaWQnID0+ICdkb2Z3LWFkdmFuY2VkJywgJ3BhcmVudCcgPT4gJ2RvZnctZ2VuZXJhbCcsICdtZW51X3RpdGxlJyA9PiAnQWR2YW5jZWQnLCAndGl0bGUnID0+ICdBZHZhbmNlZCcsICd0eXBlJyA9PiAnZm9ybScsICdwb3NpdGlvbicgPT4gMCwgJ3RhYl9saW5rJyA9PiBbJ2ljb24nID0+ICdjb2dzJ11dLCAnYmFja3VwJyA9PiBbJ2VuYWJsZWQnID0+IFx0cnVlLCAnaWQnID0+ICdkb2Z3LWJhY2t1cCcsICdwYXJlbnQnID0+ICdkb2Z3LWdlbmVyYWwnLCAnbWVudV90aXRsZScgPT4gJ0JhY2t1cCcsICd0aXRsZScgPT4gJ0JhY2t1cCcsICd0eXBlJyA9PiAnYmFja3VwJywgJ3Bvc2l0aW9uJyA9PiAwLCAndGFiX2xpbmsnID0+IFsnaWNvbicgPT4gJ2hpc3RvcnknXV0sICdkYXNoYm9hcmQnID0+IFsnZW5hYmxlZCcgPT4gXHRydWUsICdpZCcgPT4gJ2RvZnctZGFzaGJvYXJkJywgJ3BhcmVudCcgPT4gJ2RvZnctZ2VuZXJhbCcsICdtZW51X3RpdGxlJyA9PiAnU3VwcG9ydCcsICd0aXRsZScgPT4gJ1N1cHBvcnQnLCAndHlwZScgPT4gJ2Rhc2hib2FyZCcsICdwb3NpdGlvbicgPT4gMCwgJ3RhYl9saW5rJyA9PiBbJ2ljb24nID0+ICdxdWVzdGlvbiBjaXJjbGUnXV1dIjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9fXM6MzQ6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6REVNT1MiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQiOjU6e3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MzQ6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6REVNT1MiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo1OiJERU1PUyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoxOToiRGVmYXVsdCBEZW1vcyBMaXN0LiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTM3O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AHZhbHVlIjtzOjk4MzoiWydtYWluJyA9PiBbJ2VuYWJsZWQnID0+IFx0cnVlLCAnaXNfcHJvJyA9PiBcZmFsc2UsICd0aXRsZScgPT4gJ01haW4nLCAnZGVzYycgPT4gJ01haW4gRGVtbycsICdkZW1vX3VybCcgPT4gJ2h0dHA6Ly9kZWR1bGFiLmNvbScsICdzY3JlZW5zaG90X3VybCcgPT4gJ2h0dHBzOi8vcGljc3VtLnBob3Rvcy8zODUvMzIwPzEnLCAncGx1Z2lucycgPT4gW1snbmFtZScgPT4gJ0VsZW1lbnRvcicsICdzbHVnJyA9PiAnZWxlbWVudG9yJ11dLCAndGVtcGxhdGVfdXJsJyA9PiBbJ2NvbnRlbnQnID0+ICcnLCAnb3B0aW9ucycgPT4gJycsICd3aWRnZXRzJyA9PiAnJ11dLCAncHJlc2Nob29sJyA9PiBbJ2VuYWJsZWQnID0+IFx0cnVlLCAnaXNfcHJvJyA9PiBcZmFsc2UsICd0aXRsZScgPT4gJ1ByZXNjaG9vbCcsICdkZXNjJyA9PiAnUHJlc2Nob29sIERlbW8nLCAnZGVtb191cmwnID0+ICdodHRwOi8vZGVkdWxhYi5jb20nLCAnc2NyZWVuc2hvdF91cmwnID0+ICdodHRwczovL3BpY3N1bS5waG90b3MvMzg1LzMyMD8yJywgJ3BsdWdpbnMnID0+IFtbJ25hbWUnID0+ICdFbGVtZW50b3InLCAnc2x1ZycgPT4gJ2VsZW1lbnRvciddXSwgJ3RlbXBsYXRlX3VybCcgPT4gWydjb250ZW50JyA9PiAnJywgJ29wdGlvbnMnID0+ICcnLCAnd2lkZ2V0cycgPT4gJyddXSwgJ3J0bCcgPT4gWydlbmFibGVkJyA9PiBcdHJ1ZSwgJ2lzX3BybycgPT4gXGZhbHNlLCAndGl0bGUnID0+ICdBcmFiaWMgUlRMJywgJ2Rlc2MnID0+ICdBcmFiaWMgRGVtbyBSVEwnLCAnZGVtb191cmwnID0+ICdodHRwOi8vZGVkdWxhYi5jb20nLCAnc2NyZWVuc2hvdF91cmwnID0+ICdodHRwczovL3BpY3N1bS5waG90b3MvMzg1LzMyMD8zJywgJ3BsdWdpbnMnID0+IFtbJ25hbWUnID0+ICdFbGVtZW50b3InLCAnc2x1ZycgPT4gJ2VsZW1lbnRvciddXSwgJ3RlbXBsYXRlX3VybCcgPT4gWydjb250ZW50JyA9PiAnJywgJ29wdGlvbnMnID0+ICcnLCAnd2lkZ2V0cycgPT4gJyddXV0iO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxNDA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9fXM6NDU6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6UkVRVUlSRURfUExVR0lOUyI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudCI6NTp7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0NToiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpSRVFVSVJFRF9QTFVHSU5TIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6IlJFUVVJUkVEX1BMVUdJTlMiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MzA6IkRlZmF1bHQgUmVxdWlyZWQgUGx1Z2lucyBMaXN0LiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTkxO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AHZhbHVlIjtzOjY2MjoiWydlbGVtZW50b3InID0+IFsnZW5hYmxlZCcgPT4gXHRydWUsICdpY29uJyA9PiAnaHR0cHM6Ly9wcy53Lm9yZy9lbGVtZW50b3IvYXNzZXRzL2ljb24tMjU2eDI1Ni5wbmcnLCAnc291cmNlJyA9PiAnaHR0cHM6Ly9kb3dubG9hZHMud29yZHByZXNzLm9yZy9wbHVnaW4vZWxlbWVudG9yLjMuMi40LnppcCcsICduYW1lJyA9PiAnRWxlbWVudG9yJywgJ2Rlc2MnID0+ICdUaGUgRWxlbWVudG9yIFdlYnNpdGUgQnVpbGRlciBoYXMgaXQgYWxsOiBkcmFnIGFuZCBkcm9wIHBhZ2UgYnVpbGRlciwgcGl4ZWwgcGVyZmVjdCBkZXNpZ24sIG1vYmlsZSByZXNwb25zaXZlIGVkaXRpbmcsIGFuZCBtb3JlLiBHZXQgc3RhcnRlZCBub3chJ10sICdhY2YtZXh0ZW5kZWQnID0+IFsnZW5hYmxlZCcgPT4gXHRydWUsICdpY29uJyA9PiAnaHR0cHM6Ly9wcy53Lm9yZy9hY2YtZXh0ZW5kZWQvYXNzZXRzL2ljb24tMTI4eDEyOC5wbmcnLCAnc291cmNlJyA9PiAnaHR0cHM6Ly9kb3dubG9hZHMud29yZHByZXNzLm9yZy9wbHVnaW4vYWNmLWV4dGVuZGVkLjAuOC44LjMuemlwJywgJ25hbWUnID0+ICdBZHZhbmNlZCBDdXN0b20gRmllbGRzJywgJ2Rlc2MnID0+ICdDdXN0b21pemUgV29yZFByZXNzIHdpdGggcG93ZXJmdWwsIHByb2Zlc3Npb25hbCBhbmQgaW50dWl0aXZlIGZpZWxkcy4nXV0iO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxOTQ7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9fXM6NDg6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6UkVDT01NRU5ERURfUExVR0lOUyI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudCI6NTp7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0ODoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpSRUNPTU1FTkRFRF9QTFVHSU5TIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTk6IlJFQ09NTUVOREVEX1BMVUdJTlMiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MzM6IkRlZmF1bHQgUmVjb21tZW5kZWQgUGx1Z2lucyBMaXN0LiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjE4O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENvbnN0YW50AHZhbHVlIjtzOjEwOTI6IlsncmVnZW5lcmF0ZS10aHVtYm5haWxzJyA9PiBbJ2VuYWJsZWQnID0+IFx0cnVlLCAnaWNvbicgPT4gJ2h0dHBzOi8vcHMudy5vcmcvcmVnZW5lcmF0ZS10aHVtYm5haWxzL2Fzc2V0cy9pY29uLTEyOHgxMjgucG5nJywgJ3NvdXJjZScgPT4gJ2h0dHBzOi8vZG93bmxvYWRzLndvcmRwcmVzcy5vcmcvcGx1Z2luL3JlZ2VuZXJhdGUtdGh1bWJuYWlscy4zLjEuNS56aXAnLCAnbmFtZScgPT4gJ1JlZ2VuZXJhdGUgVGh1bWJuYWlscycsICdkZXNjJyA9PiAnUmVnZW5lcmF0ZSBUaHVtYm5haWxzIGFsbG93cyB5b3UgdG8gcmVnZW5lcmF0ZSBhbGwgdGh1bWJuYWlsIHNpemVzIGZvciBvbmUgb3IgbW9yZSBpbWFnZXMgdGhhdCBoYXZlIGJlZW4gdXBsb2FkZWQgdG8geW91ciBNZWRpYSBMaWJyYXJ5LiddLCAnY29udGFjdC1mb3JtLTcnID0+IFsnZW5hYmxlZCcgPT4gXHRydWUsICdpY29uJyA9PiAnaHR0cHM6Ly9wcy53Lm9yZy9jb250YWN0LWZvcm0tNy9hc3NldHMvaWNvbi5zdmcnLCAnc291cmNlJyA9PiAnaHR0cHM6Ly9kb3dubG9hZHMud29yZHByZXNzLm9yZy9wbHVnaW4vY29udGFjdC1mb3JtLTcuNS40LjEuemlwJywgJ25hbWUnID0+ICdDb250YWN0IEZvcm0gNycsICdkZXNjJyA9PiAnQ29udGFjdCBGb3JtIDcgY2FuIG1hbmFnZSBtdWx0aXBsZSBjb250YWN0IGZvcm1zLCBwbHVzIHlvdSBjYW4gY3VzdG9taXplIHRoZSBmb3JtIGFuZCB0aGUgbWFpbCBjb250ZW50cyBmbGV4aWJseSB3aXRoIHNpbXBsZSBtYXJrdXAuICddLCAnbWVudS1pY29ucycgPT4gWydlbmFibGVkJyA9PiBcdHJ1ZSwgJ2ljb24nID0+ICdodHRwczovL3BzLncub3JnL21lbnUtaWNvbnMvYXNzZXRzL2ljb24tMTI4eDEyOC5wbmcnLCAnc291cmNlJyA9PiAnaHR0cHM6Ly9kb3dubG9hZHMud29yZHByZXNzLm9yZy9wbHVnaW4vbWVudS1pY29ucy56aXAnLCAnbmFtZScgPT4gJ01lbnUgSWNvbnMgYnkgVGhlbWVJc2xlJywgJ2Rlc2MnID0+ICdUaGlzIHBsdWdpbiBnaXZlcyB5b3UgdGhlIGFiaWxpdHkgdG8gYWRkIGljb25zIHRvIHlvdXIgbWVudSBpdGVtcywgc2ltaWxhciB0byB0aGUgbG9vayBvZiB0aGUgbGF0ZXN0IGRhc2hib2FyZCBtZW51LiddXSI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ29uc3RhbnQAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIyMTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDb25zdGFudAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO319fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwcm9wZXJ0aWVzIjthOjg6e3M6NDM6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6JHByaW1hcnlfdGl0bGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkiOjg6e3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDM6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6JHByaW1hcnlfdGl0bGUiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMzoicHJpbWFyeV90aXRsZSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyODoiRGVmYXVsdCBQcmltYXJ5IFBhbmVsIFRpdGxlLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0MzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVmFyXyI6NDp7czoxNToiACoAdmFyaWFibGVOYW1lIjtzOjA6IiI7czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NzoiACoAbmFtZSI7czozOiJ2YXIiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNDU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZXMiO2E6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRlZmF1bHQiO3M6OToiJ0RlZHVsYWInIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBzdGF0aWMiO2I6MTtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjUwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGUiO047fXM6NDI6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6JGRlZmF1bHRfbG9nbyI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eSI6ODp7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0MjoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjokZGVmYXVsdF9sb2dvIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTI6ImRlZmF1bHRfbG9nbyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyODoiRGVmYXVsdCBQcmltYXJ5IFBhbmVsIFRpdGxlLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0MzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVmFyXyI6NDp7czoxNToiACoAdmFyaWFibGVOYW1lIjtzOjA6IiI7czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NzoiACoAbmFtZSI7czozOiJ2YXIiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNTI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZXMiO2E6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRlZmF1bHQiO3M6MTM6IidkZWR1bGFiLnN2ZyciO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHN0YXRpYyI7YjoxO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNTc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZSI7Tjt9czo0MzoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjokaXRlbV9zdG9yZV9pZCI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eSI6ODp7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0MzoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjokaXRlbV9zdG9yZV9pZCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEzOiJpdGVtX3N0b3JlX2lkIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjE0OiJJdGVtIFN0b3JlIElELiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0MzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVmFyXyI6NDp7czoxNToiACoAdmFyaWFibGVOYW1lIjtzOjA6IiI7czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fX1zOjc6IgAqAG5hbWUiO3M6MzoidmFyIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjU5O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGVzIjthOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBkZWZhdWx0IjtzOjQ6IictMSciO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHN0YXRpYyI7YjoxO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNjQ7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZSI7Tjt9czo0NToiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjokaXRlbV9zdG9yZV9saW5rIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5Ijo4OntzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ1OiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXM6OiRpdGVtX3N0b3JlX2xpbmsiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNToiaXRlbV9zdG9yZV9saW5rIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjE2OiJJdGVtIFN0b3JlIExpbmsuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xWYXJfIjo0OntzOjE1OiIAKgB2YXJpYWJsZU5hbWUiO3M6MDoiIjtzOjc6IgAqAHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NzoiACoAbmFtZSI7czozOiJ2YXIiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNjY7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZXMiO2E6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRlZmF1bHQiO3M6MjA6IidodHRwczovL2VudmF0by5jb20nIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBzdGF0aWMiO2I6MTtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjcxO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGUiO047fXM6NDc6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6JG1haW5fc3VwcG9ydF9saW5rIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5Ijo4OntzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ3OiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXM6OiRtYWluX3N1cHBvcnRfbGluayI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE3OiJtYWluX3N1cHBvcnRfbGluayI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoxODoiTWFpbiBTdXBwb3J0IExpbmsuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xWYXJfIjo0OntzOjE1OiIAKgB2YXJpYWJsZU5hbWUiO3M6MDoiIjtzOjc6IgAqAHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NzoiACoAbmFtZSI7czozOiJ2YXIiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNzM7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZXMiO2E6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRlZmF1bHQiO3M6MzoiJyMnIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBzdGF0aWMiO2I6MTtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Mjc4O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGUiO047fXM6NTA6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6JGNvbnRhY3Rfc3VwcG9ydF9saW5rIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5Ijo4OntzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjUwOiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXM6OiRjb250YWN0X3N1cHBvcnRfbGluayI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjIwOiJjb250YWN0X3N1cHBvcnRfbGluayI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czozMDoiRGlyZWN0IFN1cHBvcnQgTGluayAoQ29udGFjdCkuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xWYXJfIjo0OntzOjE1OiIAKgB2YXJpYWJsZU5hbWUiO3M6MDoiIjtzOjc6IgAqAHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBcnJheV8iOjM6e3M6MTI6IgAqAHZhbHVlVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6MTA6IgAqAGtleVR5cGUiO047czoxNzoiACoAZGVmYXVsdEtleVR5cGUiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb21wb3VuZCI6Mjp7czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0eXBlcyI7YToyOntpOjA7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFN0cmluZ18iOjA6e31pOjE7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEludGVnZXIiOjA6e319czo1MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xBZ2dyZWdhdGVkVHlwZQB0b2tlbiI7czoxOiJ8Ijt9fXM6NzoiACoAbmFtZSI7czozOiJ2YXIiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyODA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZXMiO2E6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRlZmF1bHQiO3M6MzoiJyMnIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBzdGF0aWMiO2I6MTtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Mjg1O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGUiO047fXM6Mzg6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6JGtiX2xpbmtzIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5Ijo4OntzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjM4OiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXM6OiRrYl9saW5rcyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjg6ImtiX2xpbmtzIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjIxOiJLbm93bGVkZ2UgQmFzZSBMaW5rcy4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFZhcl8iOjQ6e3M6MTU6IgAqAHZhcmlhYmxlTmFtZSI7czowOiIiO3M6NzoiACoAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO319czo3OiIAKgBuYW1lIjtzOjM6InZhciI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI4NztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB0eXBlcyI7YTowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZGVmYXVsdCI7czo0ODE6IlsnI2dldHRpbmctc3RhcnRlZCcgPT4gJ0dldHRpbmcgU3RhcnRlZCcsICcjZ2V0dGluZy1oZWxwJyA9PiAnR2V0dGluZyBIZWxwJywgJyNtYWludGVuYW5jZScgPT4gJ01haW50ZW5hbmNlJywgJyNwbHVnaW5zLWFuZC1hZGQtb25zJyA9PiAnUGx1Z2lucyBhbmQgQWRkLW9ucycsICcjY3VzdG9taXplcicgPT4gJ0N1c3RvbWl6ZXInLCAnI3Ryb3VibGVzaG9vdGluZycgPT4gJ1Ryb3VibGVzaG9vdGluZycsICcjaGVhZGVyJyA9PiAnSGVhZGVyJywgJyNmb290ZXInID0+ICdGb290ZXInLCAnI2xvZ28nID0+ICdMb2dvJywgJyNzaWRlYmFyJyA9PiAnU2lkZWJhcicsICcjYmxvZycgPT4gJ0Jsb2cnLCAnI3BhZ2Utb3B0aW9ucycgPT4gJ1BhZ2UgT3B0aW9ucycsICcjdHJhbnNsYXRpb24nID0+ICdUcmFuc2xhdGlvbicsICcjdmlkZW8tdHV0b3JpYWxzJyA9PiAnVmlkZW8gVHV0b3JpYWxzJywgJyNkZXZlbG9wbWVudCcgPT4gJ0RldmVsb3BtZW50J10iO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHN0YXRpYyI7YjoxO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyOTI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZSI7Tjt9czozNzoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjokX2NvbmZpZyI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eSI6ODp7czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozNzoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjokX2NvbmZpZyI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjc6Il9jb25maWciO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6Mjc6IlN0b3JlZCBwYWdlcyBjb25maWd1cmF0aW9uLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0MzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVmFyXyI6NDp7czoxNToiACoAdmFyaWFibGVOYW1lIjtzOjA6IiI7czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fX1zOjc6IgAqAG5hbWUiO3M6MzoidmFyIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzEwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGVzIjthOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBkZWZhdWx0IjtzOjI6IltdIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBzdGF0aWMiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo5OiJwcm90ZWN0ZWQiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzE1O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGUiO047fX1zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AbWV0aG9kcyI7YToxNjp7czozNDoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpydW4oKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MTM6IlJ1biBoYW5kbGVycy4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6NDp7aTowO086NDQ6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFNpbmNlIjozOntzOjc6IgAqAG5hbWUiO3M6NToic2luY2UiO3M6NTM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xTaW5jZQB2ZXJzaW9uIjtzOjU6IjEuMC4wIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjE7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjY6e3M6NTg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQB2YXJpYWJsZU5hbWUiO3M6NjoiY29uZmlnIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNWYXJpYWRpYyI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1JlZmVyZW5jZSI7YjowO3M6NzoiACoAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO319czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czoyNzoiRGVmYXVsdCBQYWdlcyBDb25maWd1cmF0aW9uIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToyO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI3OiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXMiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyNjoiRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXMiO319czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aTozO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEV4YW1wbGUiOjU6e3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xFeGFtcGxlAGZpbGVQYXRoIjtzOjc6IiRjb25maWciO3M6NTM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xFeGFtcGxlAGlzVVJJIjtiOjE7czo2MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEV4YW1wbGUAc3RhcnRpbmdMaW5lIjtpOjE7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEV4YW1wbGUAbGluZUNvdW50IjtpOjA7czo1NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEV4YW1wbGUAY29udGVudCI7czo1NTI6IkhlcmUgaXMgYW4gZXhhbXBsZSBvZiBjb25maWd1cmF0aW9ucyBhcnJheToKCmBgYHBocAokY29uZmlnID0gWwogICAgIC8vIE92ZXJyaWRlIGRhc2hib2FyZCBwYWdlIG9wdGlvbnMKICAgICAnZGFzaGJvYXJkJyA9PiBbICdlbmFibGVkJyA9PiB0cnVlIF0sCgogICAgIC8vIE92ZXJyaWRlIGRlbW9zIHBhZ2Ugb3B0aW9ucwogICAgICdkZW1vcycgPT4gWyAnZW5hYmxlZCcgPT4gdHJ1ZSBdLAoKICAgICAvLyBPdmVycmlkZSBwbHVnaW5zIHBhZ2Ugb3B0aW9ucwogICAgICdwbHVnaW5zJyA9PiBbICdlbmFibGVkJyA9PiB0cnVlIF0sCgogICAgIC8vIE92ZXJyaWRlIGdlbmVyYWwgcGFnZSBvcHRpb25zCiAgICAgJ2dlbmVyYWwnID0+IFsgJ2VuYWJsZWQnID0+IGZhbHNlIF0sCgogICAgIC8vIE92ZXJyaWRlIGFkdmFuY2VkIHBhZ2Ugb3B0aW9ucwogICAgICdhZHZhbmNlZCcgPT4gWyAnZW5hYmxlZCcgPT4gZmFsc2UgXSwKCiAgICAgLy8gT3ZlcnJpZGUgYmFja3VwIHBhZ2Ugb3B0aW9ucwogICAgICdiYWNrdXAnID0+IFsgJ2VuYWJsZWQnID0+IGZhbHNlIF0sCl07CmBgYCI7fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozMTc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MzQ6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6cnVuKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czozOiJydW4iO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjE7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NjoiY29uZmlnIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fX1zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtzOjI6IltdIjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzQ4O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NDE6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6c2V0dXBfaXRlbSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyMzoiU2V0dXAgaXRlbSBpbmZvcm1hdGlvbi4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFNlbGZfIjowOnt9czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjM2MztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0MToiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpzZXR1cF9pdGVtKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMDoic2V0dXBfaXRlbSI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozNjg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo0NToiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpyZWdpc3Rlcl9wYWdlcygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czozNDoiUmVnaXN0ZXIgdGhlIGRlZmF1bHQgcGx1Z2luIHBhZ2VzLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToyOntpOjA7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjY6e3M6NTg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQB2YXJpYWJsZU5hbWUiO3M6NjoiY29uZmlnIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNWYXJpYWRpYyI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1JlZmVyZW5jZSI7YjowO3M6NzoiACoAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO319czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czoyNzoiRGVmYXVsdCBQYWdlcyBDb25maWd1cmF0aW9uIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFNlbGZfIjowOnt9czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjM5NDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0NToiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpyZWdpc3Rlcl9wYWdlcygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTQ6InJlZ2lzdGVyX3BhZ2VzIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjY6ImNvbmZpZyI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO319czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7czoyOiJbXSI7czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjQwMDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjQzOiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXM6Ol9hZGRfcGx1Z2lucygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyNToiSW5pdGlhbGl6ZSAmIGFkZCBwbHVnaW5zLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU2VsZl8iOjA6e31zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDExO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQzOiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXM6Ol9hZGRfcGx1Z2lucygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTI6Il9hZGRfcGx1Z2lucyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6OToicHJvdGVjdGVkIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo0MTY7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo0MToiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpfYWRkX2RlbW9zKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjIzOiJJbml0aWFsaXplICYgYWRkIGRlbW9zLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU2VsZl8iOjA6e31zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDMzO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQxOiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXM6Ol9hZGRfZGVtb3MoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEwOiJfYWRkX2RlbW9zIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo5OiJwcm90ZWN0ZWQiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjQzODtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjQxOiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXM6Ol9hZGRfcGFnZXMoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MjM6IkluaXRpYWxpemUgJiBhZGQgcGFnZXMuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTZWxmXyI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo0NTE7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDE6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6X2FkZF9wYWdlcygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTA6Il9hZGRfcGFnZXMiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjk6InByb3RlY3RlZCI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDU2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NTA6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6X2FkZF9wYWdlc19zZWN0aW9ucygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyMDoiQWRkIHBhZ2VzJyBzZWN0aW9ucy4iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozNjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXFNlbGZfIjowOnt9czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MDoiIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YTowOnt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjQ4NDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1MDoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpfYWRkX3BhZ2VzX3NlY3Rpb25zKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxOToiX2FkZF9wYWdlc19zZWN0aW9ucyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6OToicHJvdGVjdGVkIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo0ODk7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo0ODoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpfYWRkX3BhZ2VzX2ZpZWxkcygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoxODoiQWRkIHBhZ2VzJyBmaWVsZHMuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTZWxmXyI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo0OTc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDg6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6X2FkZF9wYWdlc19maWVsZHMoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE3OiJfYWRkX3BhZ2VzX2ZpZWxkcyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6OToicHJvdGVjdGVkIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo1MDI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo1MjoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpfYWRkX2dlbmVyYWxfc2VjdGlvbnMoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MjY6IkFkZCBHZW5lcmFsIFBhZ2UgU2VjdGlvbnMuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTZWxmXyI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo1MTA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTI6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6X2FkZF9nZW5lcmFsX3NlY3Rpb25zKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyMToiX2FkZF9nZW5lcmFsX3NlY3Rpb25zIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo5OiJwcm90ZWN0ZWQiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjUxNTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjUwOiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXM6Ol9hZGRfZ2VuZXJhbF9maWVsZHMoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MjM6IkFkZCBHZW5lcmFsIFBhZ2UgRmllbGRzIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTZWxmXyI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo1ODU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTA6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6X2FkZF9nZW5lcmFsX2ZpZWxkcygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTk6Il9hZGRfZ2VuZXJhbF9maWVsZHMiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjk6InByb3RlY3RlZCI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NTkwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NTA6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6X2FkZF90aGVtZV9zZWN0aW9ucygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyNDoiQWRkIFRoZW1lIFBhZ2UgU2VjdGlvbnMuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTZWxmXyI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxNTUzO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjUwOiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXM6Ol9hZGRfdGhlbWVfc2VjdGlvbnMoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE5OiJfYWRkX3RoZW1lX3NlY3Rpb25zIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo5OiJwcm90ZWN0ZWQiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjE1NTg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo0ODoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpfYWRkX3RoZW1lX2ZpZWxkcygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyMToiQWRkIFRoZW1lIFBhZ2UgRmllbGRzIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086MzY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTZWxmXyI6MDp7fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxNTg0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ4OiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXM6Ol9hZGRfdGhlbWVfZmllbGRzKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNzoiX2FkZF90aGVtZV9maWVsZHMiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjk6InByb3RlY3RlZCI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTU4OTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjUzOiJcRG9fRnJhbWV3b3JrX0RlZmF1bHRfUGFnZXM6Ol9hZGRfYWR2YW5jZWRfc2VjdGlvbnMoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6Mjc6IkFkZCBBZHZhbmNlZCBQYWdlIFNlY3Rpb25zLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU2VsZl8iOjA6e31zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTY0NDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1MzoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpfYWRkX2FkdmFuY2VkX3NlY3Rpb25zKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyMjoiX2FkZF9hZHZhbmNlZF9zZWN0aW9ucyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6OToicHJvdGVjdGVkIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxNjQ5O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NTE6IlxEb19GcmFtZXdvcmtfRGVmYXVsdF9QYWdlczo6X2FkZF9hZHZhbmNlZF9maWVsZHMoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MjQ6IkFkZCBBZHZhbmNlZCBQYWdlIEZpZWxkcyI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU2VsZl8iOjA6e31zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTcwMztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1MToiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpfYWRkX2FkdmFuY2VkX2ZpZWxkcygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MjA6Il9hZGRfYWR2YW5jZWRfZmllbGRzIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo5OiJwcm90ZWN0ZWQiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjE3MDg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo0MjoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpfc2V0X2NvbmZpZygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyNDoiU2V0IFBhZ2VzIENvbmZpZ3VyYXRpb24uIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjI6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo2OiJjb25maWciO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7czo3OiIAKgB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQXJyYXlfIjozOntzOjEyOiIAKgB2YWx1ZVR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjEwOiIAKgBrZXlUeXBlIjtOO3M6MTc6IgAqAGRlZmF1bHRLZXlUeXBlIjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29tcG91bmQiOjI6e3M6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdHlwZXMiO2E6Mjp7aTowO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xTdHJpbmdfIjowOnt9aToxO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9fXM6NTI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQWdncmVnYXRlZFR5cGUAdG9rZW4iO3M6MToifCI7fX1zOjc6IgAqAG5hbWUiO3M6NToicGFyYW0iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjI3OiJEZWZhdWx0IFBhZ2VzIENvbmZpZ3VyYXRpb24iO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjE7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU2VsZl8iOjA6e31zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Mjk2MjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0MjoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpfc2V0X2NvbmZpZygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTE6Il9zZXRfY29uZmlnIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo5OiJwcm90ZWN0ZWQiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjY6ImNvbmZpZyI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFycmF5XyI6Mzp7czoxMjoiACoAdmFsdWVUeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czoxMDoiACoAa2V5VHlwZSI7TjtzOjE3OiIAKgBkZWZhdWx0S2V5VHlwZSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbXBvdW5kIjoyOntzOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHR5cGVzIjthOjI6e2k6MDtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fWk6MTtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcSW50ZWdlciI6MDp7fX1zOjUyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEFnZ3JlZ2F0ZWRUeXBlAHRva2VuIjtzOjE6InwiO319czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7czoyOiJbXSI7czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI5Njg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo0NDoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpfcGFnZV9lbmFibGVkKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjUwOiJDaGVjayBpZiBhIGdpdmVuIHBhZ2UgaXMgZW5hYmxlZCBieSBjb25maWd1cmF0aW9uLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToyOntpOjA7Tzo0NDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0iOjY6e3M6NTg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQB2YXJpYWJsZU5hbWUiO3M6MjoiaWQiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1ZhcmlhZGljIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzUmVmZXJlbmNlIjtiOjA7czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcU3RyaW5nXyI6MDp7fXM6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXEJvb2xlYW4iOjA6e31zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czowOiIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Mjk3NztzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0NDoiXERvX0ZyYW1ld29ya19EZWZhdWx0X1BhZ2VzOjpfcGFnZV9lbmFibGVkKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMzoiX3BhZ2VfZW5hYmxlZCI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6OToicHJvdGVjdGVkIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoyOiJpZCI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI5ODM7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwB1c2VkVHJhaXRzIjthOjE6e3M6MjI6IlxET0ZXXFRyYWl0c1xTaW5nbGV0b24iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyMjoiXERPRldcVHJhaXRzXFNpbmdsZXRvbiI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjk6IlNpbmdsZXRvbiI7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fX19czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9fQ==";