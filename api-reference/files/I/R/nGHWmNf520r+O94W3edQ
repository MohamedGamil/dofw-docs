1661013506
AwuilbDvXz%3Aa998f2580ca9f07129205dba80f88079-fb3e43a189240dfb66cb5a6386b888fb
s:289844:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"fb3e43a189240dfb66cb5a6386b888fb";s:39:" phpDocumentor\Reflection\Php\File name";s:36:"class-do-framework-default-pages.php";s:39:" phpDocumentor\Reflection\Php\File path";s:45:"includes/class-do-framework-default-pages.php";s:41:" phpDocumentor\Reflection\Php\File source";s:122941:"<?php

use DOFW\Traits\Singleton;

/**
 * Default Plugin Registered Pages Controller.
 *
 * @link       http://dedulab.com/
 * @since      1.0.0
 *
 * @package    Do_Framework
 * @subpackage Do_Framework/includes
 */

/**
 * Default Plugin Registered Pages Controller.
 *
 * This class defines all code necessary to handle default plugin pages, which are registered in
 * normal operation mode which is primarily used for showcasing the plugin capabilities.
 *
 * @since      1.0.0
 * @package    Do_Framework
 * @subpackage Do_Framework/includes
 * @author     Dedulab Team <info@dedulab.com>
 */
class Do_Framework_Default_Pages
{
    use Singleton;

    /**
     * Set Namespace.
     */
    const NAMESPACE = 'GLOBAL';

    /**
     * Enable Adding Pages.
     */
    const ENABLE_PAGES = true;

    /**
     * Enable Adding Demos.
     */
    const ENABLE_DEMOS = false;

    /**
     * Enable Adding Plugins.
     */
    const ENABLE_PLUGINS = false;

    /**
     * Default Pages Configuration Structure.
     */
    const CONFIG = [
        'general' => [
            'enabled' => true,
            'id' => 'dofw-general',
            'parent' => null,
            'menu_title' => 'Dedulab',
            'menu_side_title' => 'General',
            'title' => 'General',
            'type' => 'form',
            'position' => 2,
            'icon' => DOFW_IMAGES_URL . 'dedulab.svg',
            'tab_link' => [
                'icon' => 'cog',
            ],
        ],
        'demos' => [
            'enabled' => false,
            'id' => 'dofw-demos',
            'parent' => 'dofw-general',
            'menu_title' => 'Demos',
            'title' => 'Demos',
            'type' => 'demos',
            'position' => 0,
            'tab_link' => [
                'icon' => 'swatchbook',
            ],
        ],
        'plugins' => [
            'enabled' => false,
            'id' => 'dofw-plugins',
            'parent' => 'dofw-general',
            'menu_title' => 'Plugins',
            'title' => 'Plugins',
            'type' => 'plugins',
            'position' => 0,
            'tab_link' => [
                'icon' => 'plug',
            ],
        ],
        'theme' => [
            'enabled' => false,
            'id' => 'dofw-theme',
            'parent' => 'dofw-general',
            'menu_title' => 'Theme Styles',
            'title' => 'Theme Styles',
            'type' => 'form',
            'position' => 0,
            'tab_link' => [
                'icon' => 'paint brush',
            ],
        ],
        'advanced' => [
            'enabled' => true,
            'id' => 'dofw-advanced',
            'parent' => 'dofw-general',
            'menu_title' => 'Advanced',
            'title' => 'Advanced',
            'type' => 'form',
            'position' => 0,
            'tab_link' => [
                'icon' => 'cogs',
            ],
        ],
        'backup' => [
            'enabled' => true,
            'id' => 'dofw-backup',
            'parent' => 'dofw-general',
            'menu_title' => 'Backup',
            'title' => 'Backup',
            'type' => 'backup',
            'position' => 0,
            'tab_link' => [
                'icon' => 'history',
            ],
        ],
        'support' => [
            'enabled' => true,
            'id' => 'dofw-support',
            'parent' => 'dofw-general',
            'menu_title' => 'Support',
            'title' => 'Support',
            'type' => 'dashboard',
            'position' => 0,
            'tab_link' => [
                'icon' => 'question circle',
            ],
        ],
    ];

    /**
     * Default Demos List.
     */
    const DEMOS = [
        'main' => [
            'enabled' => true,
            'is_pro' => false,
            'title' => 'Main',
            'desc' => 'Main Demo',
            'demo_url' => 'http://dedulab.com',
            'screenshot_url' => 'https://picsum.photos/385/320?1',
            'plugins' => [
                [ 'name' => 'Elementor', 'slug' => 'elementor' ],
            ],
            'template_url' => [
                'content' => '',
                'options' => '',
                'widgets' => '',
            ],
        ],
        'preschool' => [
            'enabled' => true,
            'is_pro' => false,
            'title' => 'Preschool',
            'desc' => 'Preschool Demo',
            'demo_url' => 'http://dedulab.com',
            'screenshot_url' => 'https://picsum.photos/385/320?2',
            'plugins' => [
                [ 'name' => 'Elementor', 'slug' => 'elementor' ],
            ],
            'template_url' => [
                'content' => '',
                'options' => '',
                'widgets' => '',
            ],
        ],
        'rtl' => [
            'enabled' => true,
            'is_pro' => false,
            'title' => 'Arabic RTL',
            'desc' => 'Arabic Demo RTL',
            'demo_url' => 'http://dedulab.com',
            'screenshot_url' => 'https://picsum.photos/385/320?3',
            'plugins' => [
                [ 'name' => 'Elementor', 'slug' => 'elementor' ],
            ],
            'template_url' => [
                'content' => '',
                'options' => '',
                'widgets' => '',
            ],
        ],
    ];

    /**
     * Default Required Plugins List.
     */
    const REQUIRED_PLUGINS = [
        'elementor' => [
            'enabled' => true,
            'icon' => 'https://ps.w.org/elementor/assets/icon-256x256.png',
            'source' => 'https://downloads.wordpress.org/plugin/elementor.3.2.4.zip',
            'name' => 'Elementor',
            'desc' => 'The Elementor Website Builder has it all: drag and drop page builder, pixel perfect design, mobile responsive editing, and more. Get started now!',
        ],
        'acf-extended' => [
            'enabled' => true,
            'icon' => 'https://ps.w.org/acf-extended/assets/icon-128x128.png',
            'source' => 'https://downloads.wordpress.org/plugin/acf-extended.0.8.8.3.zip',
            'name' => 'Advanced Custom Fields',
            'desc' => 'Customize WordPress with powerful, professional and intuitive fields.',
        ],
        // 'tc' => [
        //     'enabled' => true,
        //     'icon' => 'https://tadreesjo.com/wp-content/uploads/2020/07/Tadrees-Emblem-03-300x300.png',
        //     'source' => '#',
        //     'name' => 'Tadrees Core',
        //     'desc' => 'The Elementor Website Builder has it all: drag and drop page builder, pixel perfect design, mobile responsive editing, and more. Get started now!',
        // ],
    ];

    /**
     * Default Recommended Plugins List.
     */
    const RECOMMENDED_PLUGINS = [
        'regenerate-thumbnails' => [
            'enabled' => true,
            'icon' => 'https://ps.w.org/regenerate-thumbnails/assets/icon-128x128.png',
            'source' => 'https://downloads.wordpress.org/plugin/regenerate-thumbnails.3.1.5.zip',
            'name' => 'Regenerate Thumbnails',
            'desc' => 'Regenerate Thumbnails allows you to regenerate all thumbnail sizes for one or more images that have been uploaded to your Media Library.',
        ],
        'contact-form-7' => [
            'enabled' => true,
            'icon' => 'https://ps.w.org/contact-form-7/assets/icon.svg',
            'source' => 'https://downloads.wordpress.org/plugin/contact-form-7.5.4.1.zip',
            'name' => 'Contact Form 7',
            'desc' => 'Contact Form 7 can manage multiple contact forms, plus you can customize the form and the mail contents flexibly with simple markup. ',
        ],
        'menu-icons' => [
            'enabled' => true,
            'icon' => 'https://ps.w.org/menu-icons/assets/icon-128x128.png',
            'source' => 'https://downloads.wordpress.org/plugin/menu-icons.zip',
            'name' => 'Menu Icons by ThemeIsle',
            'desc' => 'This plugin gives you the ability to add icons to your menu items, similar to the look of the latest dashboard menu.',
        ],
    ];

    /**
     * Default Primary Panel Title.
     *
     * @var string
     */
    public static $primary_title = 'Dedulab';

    /**
     * Default Primary Panel Title.
     *
     * @var string
     */
    public static $default_logo = 'dedulab.svg';

    /**
     * Item Store ID.
     *
     * @var array
     */
    public static $item_store_id = '-1';

    /**
     * Item Store Link.
     *
     * @var array
     */
    public static $item_store_link = 'https://envato.com';

    /**
     * Main Support Link.
     *
     * @var array
     */
    public static $main_support_link = '#';

    /**
     * Direct Support Link (Contact).
     *
     * @var array
     */
    public static $contact_support_link = '#';

    /**
     * Knowledge Base Links.
     *
     * @var array
     */
    public static $kb_links = [
        '#getting-started' => 'Getting Started',
        '#getting-help' => 'Getting Help',
        '#maintenance' => 'Maintenance',
        '#plugins-and-add-ons' => 'Plugins and Add-ons',
        '#customizer' => 'Customizer',
        '#troubleshooting' => 'Troubleshooting',
        '#header' => 'Header',
        '#footer' => 'Footer',
        '#logo' => 'Logo',
        '#sidebar' => 'Sidebar',
        '#blog' => 'Blog',
        '#page-options' => 'Page Options',
        '#translation' => 'Translation',
        '#video-tutorials' => 'Video Tutorials',
        '#development' => 'Development',
    ];

    /**
     * Stored pages configuration.
     *
     * @var array
     */
    protected $_config = [];

    /**
     * Run handlers.
     *
     * @since    1.0.0
     * @param array $config Default Pages Configuration
     * @return Do_Framework_Default_Pages
     *
     * @example $config Here is an example of configurations array:
     *
     * ```php
     * $config = [
     *      // Override dashboard page options
     *      'dashboard' => [ 'enabled' => true ],
     *
     *      // Override demos page options
     *      'demos' => [ 'enabled' => true ],
     *
     *      // Override plugins page options
     *      'plugins' => [ 'enabled' => true ],
     *
     *      // Override general page options
     *      'general' => [ 'enabled' => false ],
     *
     *      // Override advanced page options
     *      'advanced' => [ 'enabled' => false ],
     *
     *      // Override backup page options
     *      'backup' => [ 'enabled' => false ],
     * ];
     * ```
     */
    public static function run(array $config = [])
    {
        // NOTE: Causes issues for front-end
        // if (is_admin() === false) {
        //     return;
        // }

        $instance = new static();

        $instance
            ->setup_item()
            ->register_pages($config);

        return $instance;
    }

    /**
     * Setup item information.
     *
     * @return self
     */
    public function setup_item()
    {
        $ns = static::NAMESPACE;
        $logo = static::$default_logo;
        $logo = strpos($logo, '://') !== false ? $logo : dofw_asset($logo, 'img');
        $title = __(static::$primary_title, 'do-framework');

        // Set current namespace
        dofw_current_namespace($ns);

        // Set default panel logo.
        dofw_logo($logo);

        // Set default panel title.
        dofw_primary_title($title);

        // Add Item Store Info
        dofw()->set_store_id(static::$item_store_id);
        dofw()->set_store_link(static::$item_store_link);

        // Add Support Links
        dofw()->set_support_link('main', static::$main_support_link);
        dofw()->set_support_link('contact', static::$contact_support_link);

        // Add KB Links
        dofw()->add_kb_links(static::$kb_links);

        return $this;
    }

    /**
     * Register the default plugin pages.
     *
     * @param array $config Default Pages Configuration
     * @return self
     */
    public function register_pages(array $config = [])
    {
        // Add admin pages, and its relevant content.
        $this->_set_config($config)
                ->_add_pages()
                ->_add_demos()
                ->_add_plugins();

        return $this;
    }

    /**
     * Initialize & add plugins.
     *
     * @return self
     */
    protected function _add_plugins()
    {
        if (static::ENABLE_PLUGINS === false) {
            return $this;
        }

        foreach (static::REQUIRED_PLUGINS as $id => $options) {
            Do_Framework_Registry::add_required_plugin($id, $options);
        }

        foreach (static::RECOMMENDED_PLUGINS as $id => $options) {
            Do_Framework_Registry::add_recommended_plugin($id, $options);
        }

        return $this;
    }

    /**
     * Initialize & add demos.
     *
     * @return self
     */
    protected function _add_demos()
    {
        if (static::ENABLE_DEMOS === false) {
            return $this;
        }

        foreach (static::DEMOS as $id => $options) {
            Do_Framework_Registry::add_demo($id, $options);
        }

        return $this;
    }

    /**
     * Initialize & add pages.
     *
     * @return self
     */
    protected function _add_pages()
    {
        if (static::ENABLE_PAGES === false) {
            return $this;
        }

        foreach ($this->_config as $options) {
            if ($options['enabled'] === false) {
                continue;
            }

            unset($options['enabled']);

            foreach (['title', 'menu_title', 'menu_side_title'] as $var) {
                if (isset($options[$var])) {
                    $options[$var] = __($options[$var], 'do-framework');
                }
            }

            dofw_admin_page($options);
        }

        $this->_add_pages_sections();
        $this->_add_pages_fields();

        return $this;
    }

    /**
     * Add pages' sections.
     *
     * @return self
     */
    protected function _add_pages_sections()
    {
        return $this
            ->_add_general_sections()
            ->_add_theme_sections()
            ->_add_advanced_sections();
    }

    /**
     * Add pages' fields.
     *
     * @return self
     */
    protected function _add_pages_fields()
    {
        return $this
            ->_add_general_fields()
            ->_add_theme_fields()
            ->_add_advanced_fields();
    }

    /**
     * Add General Page Sections.
     *
     * @return self
     */
    protected function _add_general_sections()
    {
        if ($this->_page_enabled('dofw-general')) {
            dofw_get_page('dofw-general')->add_sections([
                'logo' => [
                    'label' => 'Logo',
                    'icon' => 'camera retro',
                ],
                'header' => [
                    'label' => 'Header',
                    'icon' => 'heading',
                ],
                'footer' => [
                    'label' => 'Footer',
                    'icon' => 'shoe prints',
                ],
                'numbers' => [
                    'label' => 'Numbers',
                    'icon' => 'comment dollar',
                ],
                'textareas' => [
                    'label' => 'Textarea',
                    'icon' => 'font',
                ],
                'editors' => [
                    'label' => 'Editors',
                    'icon' => 'pen square',
                ],
                'switches' => [
                    'label' => 'Switch',
                    'icon' => 'toggle on',
                ],
                'checkboxes' => [
                    'label' => 'Checkbox & Radio',
                    'icon' => 'check square',
                ],
                'datetimes' => [
                    'label' => 'Date / Time',
                    'icon' => 'calendar day',
                ],
                'image_selects' => [
                    'label' => 'Image Select',
                    'icon' => 'image',
                ],
                'dropdowns' => [
                    'label' => 'Select Dropdown',
                    'icon' => 'caret square down',
                ],
                'pickers' => [
                    'label' => 'Color & Icon Pickers',
                    'icon' => 'eye dropper',
                ],
                'files' => [
                    'label' => 'File Upload',
                    'icon' => 'file upload',
                ],
                // 'oembed' => [
                //     'label' => 'oEmbed',
                //     'icon' => 'camera',
                // ],
                'builder' => [
                    'label' => 'Groups Builders',
                    'icon' => 'hammer',
                ],
            ]);
        }

        return $this;
    }

    /**
     * Add General Page Fields
     *
     * @return self
     */
    protected function _add_general_fields()
    {
        if ($this->_page_enabled('dofw-general')) {
            $general = dofw_get_page('dofw-general');

            // General Page Groups
            $general->add_groups([
                // Logo Section
                'logo_image' => [
                    'section' => 'logo',
                    'title' => __('Logo Image Settings', 'do-framework'),
                ],
                'logo_text' => [
                    'section' => 'logo',
                    'title' => __('Logo Text Settings', 'do-framework'),
                ],

                // Header Section
                'header_general' => [
                    'section' => 'header',
                    'title' => __('General Header Settings', 'do-framework'),
                ],
                'header_advanced' => [
                    'section' => 'header',
                    'title' => __('Advanced Header Settings', 'do-framework'),
                ],
                'builder_example' => [
                    'section' => 'builder',
                    'title' => __('Example Group Builder', 'do-framework'),
                    'builder' => true,
                ],
                'builder_example2' => [
                    'section' => 'builder',
                    'title' => __('Example #2 Group Builder (Images)', 'do-framework'),
                    'builder' => true,
                ],
                'builder_example3' => [
                    'section' => 'builder',
                    'title' => __('Example #3 Group Builder (Image Select)', 'do-framework'),
                    'builder' => true,
                ],
            ]);

            // General Fields
            $general->add_fields([
                // Logo (Image)
                'logo_image' => [
                    'type' => 'file',
                    'section' => 'logo',
                    'group' => 'logo_image',
                    'label' => __('Default Logo', 'do-framework'),
                    'columns' => 4,
                ],
                'logo_margin' => [
                    'type' => 'space',
                    'section' => 'logo',
                    'group' => 'logo_image',
                    'default' => '0 0 0 0',
                    'label' => __('Logo Margin', 'do-framework'),
                    'columns' => 4,
                ],
                'max_width' => [
                    'type' => 'number',
                    'section' => 'logo',
                    'group' => 'logo_image',
                    'default' => 140,
                    'label' => __('Max Width', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'unit' => 'px',
                    ],
                ],
                'max_height' => [
                    'type' => 'number',
                    'section' => 'logo',
                    'group' => 'logo_image',
                    'default' => 70,
                    'label' => __('Max Height', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'unit' => 'px',
                    ],
                ],
                'logo_position' => [
                    'type' => 'image_select',
                    'section' => 'logo',
                    'group' => 'logo_image',
                    'label' => __('Logo Position', 'do-framework'),
                    'default' => 'left',
                    'items' => [
                        'left' => dofw_asset('sample/positions/left.svg'),
                        'center' => dofw_asset('sample/positions/center.svg'),
                        'right' => dofw_asset('sample/positions/right.svg'),
                    ],
                ],

                // Logo (Text)
                'text_logo_enabled' => [
                    'type' => 'switch',
                    'section' => 'logo',
                    'group' => 'logo_text',
                    'default' => 'true',
                    'label' => __('Use Text Logo', 'do-framework'),
                    'desc' => __('Enable to use text logo.', 'do-framework'),
                    'columns' => 4,
                ],
                'logo_text' => [
                    'type' => 'text',
                    'section' => 'logo',
                    'group' => 'logo_text',
                    'label' => __('Text Logo', 'do-framework'),
                    'columns' => 12,
                    'show_if' => [
                        'text_logo_enabled' => 'true',
                    ],
                ],
                'logo_align' => [
                    'type' => 'align',
                    'section' => 'logo',
                    'group' => 'logo_text',
                    'label' => __('Text Logo Alignment', 'do-framework'),
                    'columns' => 4,
                    'default' => 'left',
                    'show_if' => [
                        'text_logo_enabled' => 'true',
                    ],
                ],
                'logo_font' => [
                    'type' => 'select',
                    'section' => 'logo',
                    'group' => 'logo_text',
                    'label' => __('Text Logo Font', 'do-framework'),
                    'columns' => 4,
                    'items' => dofw_data()->google_fonts(),
                    'default' => 'Poppins',
                    'options' => [
                        'placeholder' => __('Pick a Google font..', 'do-framework'),
                    ],
                    'show_if' => [
                        'text_logo_enabled' => 'true',
                    ],
                ],
                'logo_font_size' => [
                    'type' => 'number',
                    'section' => 'logo',
                    'group' => 'logo_text',
                    'label' => __('Text Logo Font Size', 'do-framework'),
                    'columns' => 4,
                    'default' => 18,
                    'options' => [
                        'unit' => 'px',
                    ],
                    'show_if' => [
                        'text_logo_enabled' => 'true',
                    ],
                ],
                'logo_color' => [
                    'type' => 'color',
                    'section' => 'logo',
                    'group' => 'logo_text',
                    'label' => __('Text Logo Color', 'do-framework'),
                    'columns' => 4,
                    'default' => '#000',
                    'options' => [
                        'mode' => 'advanced',
                    ],
                    'show_if' => [
                        'text_logo_enabled' => 'true',
                    ],
                ],

                // Header General
                'header_style' => [
                    'type' => 'image_select',
                    'section' => 'header',
                    'group' => 'header_general',
                    'label' => __('Header Style', 'do-framework'),
                    'desc' => __('Select header style.', 'do-framework'),
                    'default' => 1,
                    'items' => [
                        1 => dofw_asset('sample/headers/01.png'),
                        2 => dofw_asset('sample/headers/02.png'),
                        3 => dofw_asset('sample/headers/03.png'),
                    ],
                ],
                'header_info' => [
                    'type' => 'checkbox',
                    'section' => 'header',
                    'group' => 'header_general',
                    'label' => __('Header Info', 'do-framework'),
                    'desc' => __('Visible header information.', 'do-framework'),
                    'default' => [ 'slogan', 'phone', 'address', 'email' ],
                    'items' => [
                        'slogan' => __('Slogan', 'do-framework'),
                        'phone' => __('Phone number', 'do-framework'),
                        'address' => __('Address', 'do-framework'),
                        'email' => __('Email', 'do-framework'),
                    ],
                    'options' => [
                        'inline' => true,
                    ],
                ],
                'header_slogan' => [
                    'type' => 'text',
                    'section' => 'header',
                    'group' => 'header_general',
                    'label' => __('Header Slogan', 'do-framework'),
                    'columns' => 4,
                ],
                'header_phone' => [
                    'type' => 'text',
                    'section' => 'header',
                    'group' => 'header_general',
                    'label' => __('Phone Number', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'mask' => 'phone',
                        'icon' => 'phone',
                    ],
                ],
                'header_address' => [
                    'type' => 'text',
                    'section' => 'header',
                    'group' => 'header_general',
                    'label' => __('Address', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'icon' => 'map pin',
                    ],
                ],
                'header_email' => [
                    'type' => 'email',
                    'section' => 'header',
                    'group' => 'header_general',
                    'label' => __('Email', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'icon' => 'at',
                    ],
                ],

                // Header Advanced
                'top_bar_enabled' => [
                    'type' => 'switch',
                    'section' => 'header',
                    'group' => 'header_advanced',
                    'default' => 'true',
                    'label' => __('Header Top-Bar', 'do-framework'),
                    'desc' => __('Enable header top bar.', 'do-framework'),
                    'columns' => 4,
                ],
                'header_sticky_enabled' => [
                    'type' => 'switch',
                    'section' => 'header',
                    'group' => 'header_advanced',
                    'default' => 'true',
                    'label' => __('Sticky Header', 'do-framework'),
                    'desc' => __('Enable sticky header.', 'do-framework'),
                    'columns' => 4,
                ],
                'header_mode' => [
                    'type' => 'select',
                    'section' => 'header',
                    'group' => 'header_advanced',
                    'label' => __('Sticky Header Behavior', 'do-framework'),
                    'columns' => 4,
                    'default' => 'fixed',
                    'items' => [
                        'fixed' => [
                            'label' => __('Fixed header', 'do-framework'),
                            'icon' => 'circle',
                        ],
                        'lazy' => [
                            'label' => __('Lazy header', 'do-framework'),
                            'icon' => 'circle outline',
                        ],
                        'slide' => [
                            'label' => __('Slide down', 'do-framework'),
                            'icon' => 'ruler horizontal',
                        ],
                    ],
                ],
                'header_height' => [
                    'type' => 'number',
                    'section' => 'header',
                    'group' => 'header_advanced',
                    'label' => __('Header Height', 'do-framework'),
                    'columns' => 4,
                    'default' => 70,
                    'options' => [
                        'unit' => 'px',
                    ],
                ],

                // Footer
                'footer_bg' => [
                    'type' => 'file',
                    'section' => 'footer',
                    'label' => __('Footer Background Image', 'do-framework'),
                    'columns' => 4,
                ],
                'footer_padding' => [
                    'type' => 'space',
                    'section' => 'footer',
                    'default' => '0 0 0 0',
                    'label' => __('Footer Padding', 'do-framework'),
                    'columns' => 4,
                ],
                'footer_widgets_enabled' => [
                    'type' => 'switch',
                    'section' => 'footer',
                    'default' => 'true',
                    'label' => __('Footer Widgets', 'do-framework'),
                    'desc' => __('Enable footer widgets.', 'do-framework'),
                    'columns' => 4,
                ],
                'footer_nav_enabled' => [
                    'type' => 'switch',
                    'section' => 'footer',
                    'default' => 'false',
                    'label' => __('Footer Navigation', 'do-framework'),
                    'desc' => __('Enable footer navigation.', 'do-framework'),
                    'columns' => 4,
                ],
                'footer_copyright_enabled' => [
                    'type' => 'switch',
                    'section' => 'footer',
                    'default' => 'true',
                    'label' => __('Footer Copyright Text', 'do-framework'),
                    'desc' => __('Enable footer copyright text.', 'do-framework'),
                    'columns' => 4,
                ],
                'footer_copyright' => [
                    'type' => 'text',
                    'section' => 'footer',
                    'label' => __('Copyright Text', 'do-framework'),
                    'columns' => 6,
                ],
                'footer_columns' => [
                    'type' => 'number',
                    'section' => 'footer',
                    'label' => __('Footer Columns', 'do-framework'),
                    'columns' => 6,
                    'default' => 4,
                ],

                // Numbers
                'mask_1' => [
                    'type' => 'text',
                    'section' => 'numbers',
                    'label' => __('Masked Number Field', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'unit' => 'KM²',
                        'max' => 10000000,
                        'min' => -10000000,
                        'mask' => 'number',
                    ],
                ],
                'mask_2' => [
                    'type' => 'text',
                    'section' => 'numbers',
                    'label' => __('Masked Currency Field', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'unit' => 'USD',
                        'min' => 0,
                        'mask' => 'number',
                    ],
                ],
                'mask_3' => [
                    'type' => 'text',
                    'section' => 'numbers',
                    'label' => __('Masked Percentage Field', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'unit' => '%',
                        'max' => 100,
                        'min' => 0,
                        'mask' => 'percentage',
                    ],
                ],
                'mask_4' => [
                    'type' => 'text',
                    'section' => 'numbers',
                    'label' => __('Masked Phone Field', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'mask' => 'phone',
                    ],
                ],
                'number_1' => [
                    'type' => 'number',
                    'section' => 'numbers',
                    'label' => __('Number Field', 'do-framework'),
                    'desc' => __('Default distance in KM between origin and destination.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'unit' => 'KM',
                        'step' => '10',
                        'max' => '500',
                        'min' => '0',
                    ],
                ],
                'number_2' => [
                    'type' => 'number',
                    'section' => 'numbers',
                    'label' => __('Number Field with Icon', 'do-framework'),
                    'desc' => __('Number field which has a vertical arrow icon.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'icon' => 'arrows alternate vertical',
                        'unit' => 'px',
                    ],
                ],
                'number_3' => [
                    'type' => 'number',
                    'section' => 'numbers',
                    'label' => __('Number Field with Icon (2)', 'do-framework'),
                    'desc' => __('Number field which has a horizontal arrow icon.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'icon' => 'arrows alternate horizontal',
                        'step' => 5,
                        'min' => 0,
                        'unit' => '%',
                    ],
                ],
                'number_4' => [
                    'type' => 'number',
                    'section' => 'numbers',
                    'label' => __('Number Field (disabled)', 'do-framework'),
                    'desc' => __('A disabled number field.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'icon' => 'arrows alternate vertical',
                        'unit' => 'CM',
                        'disabled' => true,
                    ],
                ],

                // Text Area
                'textarea_1' => [
                    'type' => 'textarea',
                    'section' => 'textareas',
                    'label' => __('Text Area Field with <code>&lt;/head&gt;</code> Code Label.', 'do-framework'),
                    'columns' => 8,
                ],
                'textarea_2' => [
                    'type' => 'textarea',
                    'section' => 'textareas',
                    'label' => __('Text Area Field with Placeholder', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'placeholder' => __('Type here some long text..', 'do-framework'),
                    ],
                ],
                'textarea_3' => [
                    'type' => 'textarea',
                    'section' => 'textareas',
                    'label' => __('Read-only Text Area Field', 'do-framework'),
                    'value' => __('Read-only text area value.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'readonly' => true,
                    ],
                ],
                'textarea_4' => [
                    'type' => 'textarea',
                    'section' => 'textareas',
                    'label' => __('Disabled Text Area Field', 'do-framework'),
                    'value' => __('Disabled text area value.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'disabled' => true,
                    ],
                ],

                // Editors
                'code_js' => [
                    'type' => 'code',
                    'section' => 'editors',
                    'label' => __('Code Editor (Javascript)', 'do-framework'),
                    'desc' => __('This is the default code editor configuration.', 'do-framework'),
                    'columns' => 8,
                ],
                'code_css' => [
                    'type' => 'code',
                    'section' => 'editors',
                    'label' => __('Code Editor (CSS)', 'do-framework'),
                    'desc' => __('This is a custom code editor configuration using <code>css</code> syntax and <code>dreamweaver</code> theme.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'language' => 'css',
                        'theme' => 'dreamweaver',
                    ],
                ],
                'code_markdown' => [
                    'type' => 'code',
                    'section' => 'editors',
                    'label' => __('Code Editor (Markdown)', 'do-framework'),
                    'desc' => __('This is a custom code editor configuration using <code>markdown</code> syntax and <code>ambiance</code> theme.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'language' => 'markdown',
                        'theme' => 'ambiance',
                    ],
                ],
                'code_php' => [
                    'type' => 'code',
                    'section' => 'editors',
                    'label' => __('Code Editor (PHP)', 'do-framework'),
                    'desc' => __('This is a custom code editor configuration using <code>php</code> syntax and <code>github</code> theme.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'language' => 'php',
                        'theme' => 'github',
                    ],
                ],
                'wp_editor' => [
                    'type' => 'editor',
                    'section' => 'editors',
                    'label' => __('WordPress Editor', 'do-framework'),
                    'desc' => __('This is the WordPress editor field.', 'do-framework'),
                    'columns' => 8,
                ],
                'wp_editor_disabled' => [
                    'type' => 'editor',
                    'section' => 'editors',
                    'label' => __('WordPress Editor (Disabled)', 'do-framework'),
                    'desc' => __('This is the WordPress editor field.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'disabled' => true,
                    ],
                ],

                // Switch
                'switch_1' => [
                    'type' => 'switch',
                    'section' => 'switches',
                    'name' => 'enabled',
                    'default' => 'false',
                    'label' => __('Switch Field', 'do-framework'),
                    'desc' => __('Toggle this switch on/off.', 'do-framework'),
                    'columns' => 8,
                ],
                'switch_2' => [
                    'type' => 'switch',
                    'section' => 'switches',
                    'label' => __('Switch Field (Disabled)', 'do-framework'),
                    'desc' => __('You cannot toggle a disabled switch.', 'do-framework'),
                    'default' => 'true',
                    'columns' => 8,
                    'options' => [
                        'justify' => true,
                        'disabled' => true,
                    ],
                ],

                // Checkbox & Radio
                'checkbox_1' => [
                    'type' => 'checkbox',
                    'section' => 'checkboxes',
                    'label' => __('Checkbox Field', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        1 => __('Checkbox Option Label #1', 'do-framework'),
                        2 => __('Checkbox Option Label #2', 'do-framework'),
                        3 => __('Checkbox Option Label #3', 'do-framework'),
                    ],
                ],
                'checkbox_2' => [
                    'type' => 'checkbox',
                    'section' => 'checkboxes',
                    'label' => __('Checkbox Field (Disabled)', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        1 => __('Checkbox Option Label #1', 'do-framework'),
                        2 => __('Checkbox Option Label #2', 'do-framework'),
                        3 => __('Checkbox Option Label #3', 'do-framework'),
                    ],
                    'options' => [
                        'disabled' => true,
                    ],
                ],
                'checkbox_3' => [
                    'type' => 'checkbox',
                    'section' => 'checkboxes',
                    'label' => __('Checkbox Field (Inline)', 'do-framework'),
                    'columns' => 8,
                    'items' => [
                        1 => __('Checkbox Option Label #1', 'do-framework'),
                        2 => __('Checkbox Option Label #2', 'do-framework'),
                        3 => __('Checkbox Option Label #3', 'do-framework'),
                    ],
                    'options' => [
                        'inline' => true,
                    ],
                ],
                'radio_1' => [
                    'type' => 'radio',
                    'section' => 'checkboxes',
                    'label' => __('Radio Field', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        1 => __('Category Label #1', 'do-framework'),
                        2 => __('Category Label #2', 'do-framework'),
                        3 => __('Category Label #3', 'do-framework'),
                    ],
                ],
                'radio_2' => [
                    'type' => 'radio',
                    'section' => 'checkboxes',
                    'label' => __('Radio Field (Disabled)', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        1 => __('Category Label #1', 'do-framework'),
                        2 => __('Category Label #2', 'do-framework'),
                        3 => __('Category Label #3', 'do-framework'),
                    ],
                    'options' => [
                        'disabled' => true,
                    ],
                ],
                'radio_3' => [
                    'type' => 'radio',
                    'section' => 'checkboxes',
                    'label' => __('Radio Field (Inline)', 'do-framework'),
                    'columns' => 8,
                    'items' => [
                        1 => __('Category Label #1', 'do-framework'),
                        2 => __('Category Label #2', 'do-framework'),
                        3 => __('Category Label #3', 'do-framework'),
                    ],
                    'options' => [
                        'inline' => true,
                    ],
                ],

                // Date & Date-time
                'date_1' => [
                    'type' => 'date',
                    'section' => 'datetimes',
                    'label' => __('Date Field (Date-Time)', 'do-framework'),
                    'desc' => __('This is a date-time input.', 'do-framework'),
                    'columns' => 4,
                ],
                'date_2' => [
                    'type' => 'date',
                    'section' => 'datetimes',
                    'label' => __('Date Field (Date Only)', 'do-framework'),
                    'desc' => __('This is a date only input.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'mode' => 'date',
                    ],
                ],
                'date_3' => [
                    'type' => 'date',
                    'section' => 'datetimes',
                    'label' => __('Date Field (Time Only)', 'do-framework'),
                    'desc' => __('This is a time only input.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'mode' => 'time',
                    ],
                ],
                'date_4' => [
                    'type' => 'date',
                    'section' => 'datetimes',
                    'label' => __('Date Field (Disabled)', 'do-framework'),
                    'desc' => __('This is a disabled date input.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'disabled' => true,
                    ],
                ],

                // Image Select
                'image_select_1' => [
                    'type' => 'image_select',
                    'section' => 'image_selects',
                    'label' => __('Image-Select Field', 'do-framework'),
                    'desc' => __('Image select inputs are visual choice inputs using pictures.', 'do-framework'),
                    'columns' => 8,
                    'default' => 1,
                    'items' => [
                        1 => dofw_asset('sample/choice_1.png'),
                        2 => dofw_asset('sample/choice_2.png'),
                        3 => dofw_asset('sample/choice_3.png'),
                    ],
                ],
                'image_select_2' => [
                    'type' => 'img_select',
                    'section' => 'image_selects',
                    'label' => __('Image-Select Field (2)', 'do-framework'),
                    'desc' => __('Image select with a missing picture.', 'do-framework'),
                    'columns' => 8,
                    'default' => 2,
                    'items' => [
                        1 => dofw_asset('sample/choice_1.png'),
                        2 => dofw_asset('sample/NO_SUCH_IMAGE_AT_THIS_PATH.png'),
                        3 => dofw_asset('sample/choice_3.png'),
                    ],
                ],
                'image_select_3' => [
                    'type' => 'img_select',
                    'section' => 'image_selects',
                    'label' => __('Image-Select Field (3)', 'do-framework'),
                    'desc' => __('Image select with options on a line each.', 'do-framework'),
                    'default' => 1,
                    'items' => [
                        1 => dofw_asset('sample/categories/cat_1.png'),
                        2 => dofw_asset('sample/categories/cat_2.png'),
                        3 => dofw_asset('sample/categories/cat_3.png'),
                    ],
                    'options' => [
                        'inline' => false,
                    ],
                ],

                // Select (Dropdown)
                'dropdown_1' => [
                    'type' => 'select',
                    'section' => 'dropdowns',
                    'label' => __('Select Field', 'do-framework'),
                    'desc' => __('This select field value cannot be cleared.', 'do-framework'),
                    'columns' => 4,
                    'items' => dofw_data()->terms(),
                    'options' => [
                        'clearable' => false,
                    ],
                ],
                'dropdown_2' => [
                    'type' => 'select',
                    'section' => 'dropdowns',
                    'label' => __('Select Field (Google Fonts & Placeholder)', 'do-framework'),
                    'desc' => __('Searchable select field with a placeholder.', 'do-framework'),
                    'columns' => 4,
                    'items' => dofw_data()->google_fonts(),
                    'options' => [
                        'placeholder' => __('Pick a Google font..', 'do-framework'),
                    ],
                ],
                'dropdown_3' => [
                    'type' => 'select',
                    'section' => 'dropdowns',
                    'label' => __('Select Field (No Search)', 'do-framework'),
                    'desc' => __('This select field cannot be searched.', 'do-framework'),
                    'columns' => 4,
                    'items' => dofw_data()->terms(),
                    'options' => [
                        'search' => false,
                    ],
                ],
                'dropdown_4' => [
                    'type' => 'country',
                    'section' => 'dropdowns',
                    'label' => __('Country Field', 'do-framework'),
                    'desc' => __('This select can be used to select a country.', 'do-framework'),
                    'columns' => 4,
                ],
                'dropdown_5' => [
                    'type' => 'select',
                    'section' => 'dropdowns',
                    'label' => __('Select Field (Multiple & Flags)', 'do-framework'),
                    'desc' => __('This select field has labels plus flags.', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        1 => [
                            'label' => __('Egypt', 'do-framework'),
                            'flag' => 'eg',
                        ],
                        2 => [
                            'label' => __('Saudi Arabia', 'do-framework'),
                            'flag' => 'sa',
                        ],
                        3 => [
                            'label' => __('United Arab Emirates', 'do-framework'),
                            'flag' => 'ae',
                        ],
                        4 => [
                            'label' => __('Palestine ❤️', 'do-framework'),
                            'flag' => 'ps',
                        ],
                    ],
                    'options' => [
                        'multiple' => true,
                    ],
                ],
                'dropdown_6' => [
                    'type' => 'select',
                    'section' => 'dropdowns',
                    'label' => __('Select Field (Icons)', 'do-framework'),
                    'desc' => __('This select field has labels plus icons.', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        1 => [
                            'label' => __('Felines', 'do-framework'),
                            'icon' => 'cat',
                        ],
                        2 => [
                            'label' => __('Sea Animals', 'do-framework'),
                            'icon' => 'fish',
                        ],
                        3 => [
                            'label' => __('Birds', 'do-framework'),
                            'icon' => 'crow',
                        ],
                    ],
                ],
                'dropdown_7' => [
                    'type' => 'select',
                    'section' => 'dropdowns',
                    'label' => __('Select Field (Images)', 'do-framework'),
                    'desc' => __('This select field has labels plus images.', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        1 => [
                            'label' => __('Foo', 'do-framework'),
                            'img' => 'https://picsum.photos/50/50?1',
                        ],
                        2 => [
                            'label' => __('Bar', 'do-framework'),
                            'img' => 'https://picsum.photos/50/50?2',
                        ],
                        3 => [
                            'label' => __('Baz', 'do-framework'),
                            'img' => 'https://picsum.photos/50/50?3',
                        ],
                    ],
                ],
                'dropdown_8' => [
                    'type' => 'select',
                    'section' => 'dropdowns',
                    'label' => __('Multiple-Select Field', 'do-framework'),
                    'desc' => __('This select field can have multiple choices.', 'do-framework'),
                    'columns' => 4,
                    'items' => dofw_data()->terms(),
                    'options' => [
                        'multiple' => true,
                    ],
                ],

                // Pickers (Colors & Icons)
                'color_1' => [
                    'type' => 'color',
                    'section' => 'pickers',
                    'label' => __('Color Picker Field', 'do-framework'),
                    'desc' => __('This is a color picker using the default <code>simple</code> mode.', 'do-framework'),
                    'columns' => 4,
                ],
                'color_2' => [
                    'type' => 'color',
                    'section' => 'pickers',
                    'label' => __('Color Picker Field (Advanced)', 'do-framework'),
                    'desc' => __('This is a color picker using the <code>advanced</code> mode.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'mode' => 'advanced',
                    ],
                ],
                'color_3' => [
                    'type' => 'color',
                    'section' => 'pickers',
                    'label' => __('Color Picker Field (Complex)', 'do-framework'),
                    'desc' => __('This is a color picker using the <code>complex</code> mode.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'mode' => 'complex',
                        'color_icon' => 'paint brush',
                        'picker_icon' => 'paint roller',
                    ],
                ],
                'color_4' => [
                    'type' => 'color',
                    'section' => 'pickers',
                    'label' => __('Color Picker Field (Palette)', 'do-framework'),
                    'desc' => __('This is a color picker using the <code>palette</code> mode.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'mode' => 'palette',
                        'color_icon' => 'highlighter',
                        'picker_icon' => 'palette',
                    ],
                ],
                'icon_1' => [
                    'type' => 'icon',
                    'section' => 'pickers',
                    'label' => __('Icon Picker Field (All Icons)', 'do-framework'),
                    'desc' => __('This is an icon picker with all icons listed.', 'do-framework'),
                    'columns' => 4,
                ],
                'icon_2' => [
                    'type' => 'icon',
                    'section' => 'pickers',
                    'label' => __('Icon Picker Field (Custom Icons List)', 'do-framework'),
                    'desc' => __('This is an icon picker with custom specific icons list.', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        'fas fa-audio-description',
                        'fas fa-address-book',
                        'fas fa-address-card',
                        'fas fa-adjust',
                        'fas fa-align-center',
                        'fas fa-align-justify',
                        'fas fa-align-left',
                        'fas fa-align-right',
                        'fas fa-ambulance',
                    ],
                ],
                'icon_3' => [
                    'type' => 'icon',
                    'section' => 'pickers',
                    'label' => __('Icon Picker Field (Brands Icons List)', 'do-framework'),
                    'desc' => __('This is an icon picker with popular brands icons list.', 'do-framework'),
                    'columns' => 4,
                    'items' => dofw_data()->brands_icons(),
                ],
                'icon_4' => [
                    'type' => 'icon',
                    'section' => 'pickers',
                    'label' => __('Icon Picker Field (Disabled)', 'do-framework'),
                    'desc' => __('This is an icon picker with social icons list.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'disabled' => true,
                    ],
                ],

                // File Upload
                'file_1' => [
                    'type' => 'file',
                    'section' => 'files',
                    'label' => __('General File Upload', 'do-framework'),
                    'desc' => __('This input can be used to upload files or images.', 'do-framework'),
                    'columns' => 8,
                ],
                'file_2' => [
                    'type' => 'file',
                    'section' => 'files',
                    'label' => __('General File Upload (Customized)', 'do-framework'),
                    'desc' => __('This input can be used to upload files or images.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'placeholder' => __('Click to upload image', 'do-framework'),
                        'icon' => 'image',
                    ],
                ],
                'file_3' => [
                    'type' => 'file',
                    'section' => 'files',
                    'label' => __('General File Upload (Default Value & Non-Clearable)', 'do-framework'),
                    'desc' => __('This input can be used to upload files or images.', 'do-framework'),
                    'columns' => 8,
                    'default' => 'https://picsum.photos/95/95?1',
                    'options' => [
                        'clearable' => false,
                    ],
                ],
                'file_4' => [
                    'type' => 'file',
                    'section' => 'files',
                    'label' => __('General File Upload (Disabled)', 'do-framework'),
                    'desc' => __('This input can be used to upload files or images.', 'do-framework'),
                    'columns' => 8,
                    'default' => 'https://picsum.photos/95/95?2',
                    'options' => [
                        'disabled' => true,
                    ],
                ],

                // Builder example #1
                [
                    'id' => 'name',
                    'type' => 'text',
                    'section' => 'builder',
                    'group' => 'builder_example',
                    'label' => __('Section Name', 'do-framework'),
                ],
                [
                    'id' => 'color',
                    'type' => 'color',
                    'section' => 'builder',
                    'group' => 'builder_example',
                    'label' => __('Section Color', 'do-framework'),
                ],

                // Builder example #2
                [
                    'id' => 'image',
                    'type' => 'file',
                    'section' => 'builder',
                    'group' => 'builder_example2',
                    'label' => __('Section Image', 'do-framework'),
                ],
                [
                    'id' => 'color',
                    'type' => 'color',
                    'section' => 'builder',
                    'group' => 'builder_example2',
                    'label' => __('Section Color', 'do-framework'),
                ],
                [
                    'id' => 'icon',
                    'type' => 'icon',
                    'section' => 'builder',
                    'group' => 'builder_example2',
                    'label' => __('Section Icon', 'do-framework'),
                ],

                // Builder example #3
                [
                    'id' => 'image',
                    'type' => 'image_select',
                    'section' => 'builder',
                    'group' => 'builder_example3',
                    'label' => __('Image-Select Field', 'do-framework'),
                    'desc' => __('Select an image to see changes in builder tabs.', 'do-framework'),
                    'columns' => 8,
                    'items' => [
                        1 => dofw_asset('sample/choice_1.png'),
                        2 => dofw_asset('sample/choice_2.png'),
                        3 => dofw_asset('sample/choice_3.png'),
                    ],
                ],
                [
                    'id' => 'dropdown',
                    'type' => 'select',
                    'section' => 'builder',
                    'group' => 'builder_example3',
                    'label' => __('Select Field', 'do-framework'),
                    'desc' => __('This select field value cannot be cleared.', 'do-framework'),
                    'columns' => 4,
                    'items' => dofw_data()->terms(),
                    'options' => [
                        'clearable' => false,
                    ],
                ],
                [
                    'id' => 'date',
                    'type' => 'date',
                    'section' => 'builder',
                    'group' => 'builder_example3',
                    'label' => __('Date Field (Date-Time)', 'do-framework'),
                    'desc' => __('This is a date-time input.', 'do-framework'),
                    'columns' => 4,
                ],
            ]);
        }

        return $this;
    }

    /**
     * Add Theme Page Sections.
     *
     * @return self
     */
    protected function _add_theme_sections()
    {
        if ($this->_page_enabled('dofw-theme')) {
            dofw_get_page('dofw-theme')->add_sections([
                'logo' => [
                    'icon' => 'lightbulb',
                    'label' => 'Logo',
                ],
                'layout' => [
                    'icon' => 'editor table',
                    'label' => 'Layout',
                ],
                'header' => [
                    'icon' => dofw_asset('icons/header.svg'),
                    'label' => 'Header',
                ],
                'footer' => [
                    'icon' => dofw_asset('icons/footer.svg'),
                    'label' => 'Footer',
                ],
            ]);
        }

        return $this;
    }

    /**
     * Add Theme Page Fields
     *
     * @return self
     */
    protected function _add_theme_fields()
    {
        if ($this->_page_enabled('dofw-theme')) {
            $theme = dofw_get_page('dofw-theme');

            // Theme: Groups
            $theme->add_groups([]);

            // Theme: Fields
            $theme->add_fields([
                'logo_light' => [
                    'type' => 'file',
                    'section' => 'logo',
                    'label' => __('Logo (Light)', 'do-framework'),
                    'desc' => __('Upload a logo image for light mode.', 'do-framework'),
                    'columns' => 8,
                ],
                'logo_dark' => [
                    'type' => 'file',
                    'section' => 'logo',
                    'label' => __('Logo (Dark)', 'do-framework'),
                    'desc' => __('Upload a logo image for dark mode.', 'do-framework'),
                    'columns' => 8,
                ],
                'bg_color' => [
                    'type' => 'color',
                    'section' => 'logo',
                    'label' => __('Background Color', 'do-framework'),
                    'columns' => 4,
                ],
                'text_color' => [
                    'type' => 'color',
                    'section' => 'logo',
                    'label' => __('Text/Icons Color', 'do-framework'),
                    'columns' => 4,
                ],
                'logo_position' => [
                    'type' => 'align',
                    'section' => 'logo',
                    'label' => __('Logo Position', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_search' => [
                    'type' => 'switch',
                    'section' => 'logo',
                    'label' => __('Enable Search Button', 'do-framework'),
                    'desc' => __('Search Button', 'do-framework'),
                    'columns' => 4,
                ],
            ]);
        }

        return $this;
    }

    /**
     * Add Advanced Page Sections.
     *
     * @return self
     */
    protected function _add_advanced_sections()
    {
        if ($this->_page_enabled('dofw-advanced')) {
            dofw_get_page('dofw-advanced')->add_sections([
                'general' => [
                    'icon' => 'globe',
                    'label' => 'All Field Types',
                ],
                'tracking' => [
                    'icon' => 'chart area',
                    'label' => 'Tracking & Analytics',
                ],
                'archives' => [
                    'icon' => 'list clipboard',
                    'label' => 'Archives',
                ],
                'single_post' => [
                    'icon' => 'file text',
                    'label' => 'Single Post/Page',
                ],
                'share_buttons' => [
                    'icon' => 'share alternate',
                    'label' => 'Share Buttons',
                ],
                'ads' => [
                    'icon' => 'ad',
                    'label' => 'Advertisement',
                ],
                'typography' => [
                    'icon' => 'text width',
                    'label' => 'Typography',
                ],
                'translations' => [
                    'icon' => 'language',
                    'label' => 'Translations',
                ],
                'modules' => [
                    'icon' => 'shapes',
                    'label' => 'Modules',
                ],
                'social_networks' => [
                    'icon' => 'network wired',
                    'label' => 'Social Networks',
                ],
                'copyrights' => [
                    'icon' => 'copyright',
                    'label' => 'Copyrights',
                ],
            ]);
        }

        return $this;
    }

    /**
     * Add Advanced Page Fields
     *
     * @return self
     */
    protected function _add_advanced_fields()
    {
        if ($this->_page_enabled('dofw-advanced')) {
            $advanced = dofw_get_page('dofw-advanced');

            // General: Page Groups
            $advanced->add_groups([
                //region General
                'switches' => [
                    'section' => 'general',
                    'title' => __('Switch, Checkbox, and Radio Inputs', 'do-framework'),
                ],
                'files' => [
                    'section' => 'general',
                    'icon' => 'file',
                    'title' => __('File & Image Upload', 'do-framework'),
                ],
                'text' => [
                    'section' => 'general',
                    'icon' => 'swatchbook',
                    'title' => __('Text Input Variants', 'do-framework'),
                    'fold' => true,
                ],
                'states' => [
                    'section' => 'general',
                    'icon' => 'eye',
                    'title' => __('Text Inputs States & Icons', 'do-framework'),
                    'fold' => true,
                ],
                'numbers' => [
                    'section' => 'general',
                    'title' => __('Number Inputs', 'do-framework'),
                ],
                'masks' => [
                    'section' => 'general',
                    'title' => __('Input Masks', 'do-framework'),
                ],
                'textareas' => [
                    'section' => 'general',
                    'title' => __('Text Area Inputs', 'do-framework'),
                ],
                'spatial' => [
                    'section' => 'general',
                    'title' => __('Spatial Inputs', 'do-framework'),
                ],
                'dropdowns' => [
                    'section' => 'general',
                    'title' => __('Dropdown Inputs', 'do-framework'),
                ],
                'image_selects' => [
                    'section' => 'general',
                    'title' => __('Image Select', 'do-framework'),
                ],
                'color_pickers' => [
                    'section' => 'general',
                    'title' => __('Color Picker Inputs', 'do-framework'),
                ],
                'icon_pickers' => [
                    'section' => 'general',
                    'title' => __('Icon Picker Inputs', 'do-framework'),
                ],
                'dates' => [
                    'section' => 'general',
                    'title' => __('Date Inputs', 'do-framework'),
                ],
                'sliders' => [
                    'section' => 'general',
                    'title' => __('Slider Inputs', 'do-framework'),
                ],
                'editors' => [
                    'section' => 'general',
                    'title' => __('Editors', 'do-framework'),
                ],
                //endregion

                //region Archives
                'categories' => [
                    'section' => 'archives',
                    'title' => __('Categories', 'do-framework'),
                ],
                //endregion

                //region Single Post
                'single_post_settings' => [
                    'section' => 'single_post',
                    'title' => __('Single Post Settings', 'do-framework'),
                ],
                'single_post_layout' => [
                    'section' => 'single_post',
                    'title' => __('Single Post Layout', 'do-framework'),
                ],
                //endregion

                //region Share Buttons
                'share_buttons_settings' => [
                    'section' => 'share_buttons',
                    'title' => __('Share Buttons Settings', 'do-framework'),
                ],
                //endregion

                //region Ads
                'ads_admob_banner' => [
                    'section' => 'ads',
                    'title' => __('Admob Banner', 'do-framework'),
                ],
                //endregion
            ]);

            // Advanced: Fields
            $advanced->add_fields([
                'ga_id' => [
                    'type' => 'text',
                    'section' => 'tracking',
                    'label' => __('Google Analytics UID', 'do-framework'),
                    'desc' => __('Enter your website Google Analytics tracking ID.', 'do-framework'),
                ],
                'footer_html' => [
                    'type' => 'code',
                    'section' => 'tracking',
                    'label' => __('Custom Footer HMTL Code', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'theme' => 'github',
                        'language' => 'html',
                    ],
                ],
                'custom_js' => [
                    'type' => 'code',
                    'section' => 'tracking',
                    'label' => __('Custom JavaScript Code', 'do-framework'),
                    'columns' => 8,
                ],
            ]);

            // Advanced: General Fields
            $advanced->add_fields([
                // Toggles, Checkboxes, and Radio Inputs
                'switch_1' => [
                    'type' => 'switch',
                    'section' => 'general',
                    'group' => 'switches',
                    'name' => 'enabled',
                    'default' => 'false',
                    'label' => __('Switch Field', 'do-framework'),
                    'desc' => __('Toggle this switch on/off.', 'do-framework'),
                    'columns' => 3,
                ],
                'switch_2' => [
                    'type' => 'switch',
                    'section' => 'general',
                    'group' => 'switches',
                    'label' => __('Switch Field (Disabled)', 'do-framework'),
                    'desc' => __('You cannot toggle a disabled switch.', 'do-framework'),
                    'default' => 'true',
                    'columns' => 3,
                    'options' => [
                        'justify' => true,
                        'disabled' => true,
                    ],
                    'show_if' => [
                        'switch_1' => 'true',
                    ],
                ],
                'checkbox_1' => [
                    'type' => 'checkbox',
                    'section' => 'general',
                    'group' => 'switches',
                    'label' => __('Checkbox Field', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        1 => __('Category Label #1', 'do-framework'),
                        2 => __('Category Label #2', 'do-framework'),
                        3 => __('Category Label #3', 'do-framework'),
                    ],
                    'show_if' => [
                        'switch_1' => 'true',
                    ],
                ],
                'checkbox_2' => [
                    'type' => 'checkbox',
                    'section' => 'general',
                    'group' => 'switches',
                    'label' => __('Checkbox Field (Inline)', 'do-framework'),
                    'columns' => 6,
                    'items' => [
                        1 => __('Category Label #1', 'do-framework'),
                        2 => __('Category Label #2', 'do-framework'),
                        3 => __('Category Label #3', 'do-framework'),
                    ],
                    'options' => [
                        'inline' => true,
                    ],
                    'show_if' => [
                        'switch_1' => 'true',
                    ],
                ],
                'radio_1' => [
                    'type' => 'radio',
                    'section' => 'general',
                    'group' => 'switches',
                    'label' => __('Radio Field', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        1 => __('Category Label #1', 'do-framework'),
                        2 => __('Category Label #2', 'do-framework'),
                        3 => __('Category Label #3', 'do-framework'),
                    ],
                    'show_if' => [
                        'switch_1' => 'true',
                    ],
                ],
                'radio_2' => [
                    'type' => 'radio',
                    'section' => 'general',
                    'group' => 'switches',
                    'label' => __('Radio Field (Inline)', 'do-framework'),
                    'columns' => 8,
                    'items' => [
                        1 => __('Category Label #1', 'do-framework'),
                        2 => __('Category Label #2', 'do-framework'),
                        3 => __('Category Label #3', 'do-framework'),
                    ],
                    'options' => [
                        'inline' => true,
                    ],
                    'show_if' => [
                        'switch_1' => 'true',
                    ],
                ],
                'radio_3' => [
                    'type' => 'radio',
                    'section' => 'general',
                    'group' => 'switches',
                    'label' => __('Radio Field (Disabled)', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        1 => __('Category Label #1', 'do-framework'),
                        2 => __('Category Label #2', 'do-framework'),
                        3 => __('Category Label #3', 'do-framework'),
                    ],
                    'options' => [
                        'disabled' => true,
                    ],
                    'show_if' => [
                        'switch_1' => 'true',
                    ],
                ],

                // File Inputs
                'file_1' => [
                    'type' => 'file',
                    'section' => 'general',
                    'group' => 'files',
                    'label' => __('General File Upload', 'do-framework'),
                    'desc' => __('This input can be used to upload files or images.', 'do-framework'),
                    'columns' => 8,
                ],
                'file_2' => [
                    'type' => 'file',
                    'section' => 'general',
                    'group' => 'files',
                    'label' => __('General File Upload (Customized)', 'do-framework'),
                    'desc' => __('This input can be used to upload files or images.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'placeholder' => __('Click to upload image', 'do-framework'),
                        'icon' => 'image',
                    ],
                ],
                'file_3' => [
                    'type' => 'file',
                    'section' => 'general',
                    'group' => 'files',
                    'label' => __('General File Upload (Default Value & Non-Clearable)', 'do-framework'),
                    'desc' => __('This input can be used to upload files or images.', 'do-framework'),
                    'columns' => 8,
                    'default' => 'https://picsum.photos/95/95?1',
                    'options' => [
                        'clearable' => false,
                    ],
                ],
                'file_4' => [
                    'type' => 'file',
                    'section' => 'general',
                    'group' => 'files',
                    'label' => __('General File Upload (Disabled)', 'do-framework'),
                    'desc' => __('This input can be used to upload files or images.', 'do-framework'),
                    'columns' => 8,
                    'default' => 'https://picsum.photos/95/95?2',
                    'options' => [
                        'disabled' => true,
                    ],
                ],

                // Text Inputs Types
                'text' => [
                    'type' => 'text',
                    'section' => 'general',
                    'group' => 'text',
                    'label' => __('Simple Text Field', 'do-framework'),
                    'columns' => 8,
                ],
                'email' => [
                    'type' => 'email',
                    'section' => 'general',
                    'group' => 'text',
                    'label' => __('Simple Email Field with Placeholder', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'placeholder' => __('Please enter your email address. Ex. email@domain.com', 'do-framework'),
                    ],
                ],
                'url' => [
                    'type' => 'url',
                    'section' => 'general',
                    'group' => 'text',
                    'label' => __('Simple URL Field', 'do-framework'),
                    'columns' => 8,
                ],
                'slug' => [
                    'type' => 'slug',
                    'section' => 'general',
                    'group' => 'text',
                    'label' => __('Simple Slug Field', 'do-framework'),
                    'columns' => 8,
                ],

                // Text Inputs States
                'text_readonly' => [
                    'type' => 'text',
                    'section' => 'general',
                    'group' => 'states',
                    'label' => __('Read-only Text Field', 'do-framework'),
                    'help' => __('This is a read-only field help message.', 'do-framework'),
                    'value' => 'This is a read-only field value',
                    'columns' => 8,
                    'options' => [
                        'readonly' => true,
                    ],
                ],
                'text_disabled' => [
                    'type' => 'text',
                    'section' => 'general',
                    'group' => 'states',
                    'label' => __('Disabled Text Field', 'do-framework'),
                    'help' => __('This is a disabled field help message.', 'do-framework'),
                    'value' => 'This is a disabled field value',
                    'columns' => 8,
                    'options' => [
                        'disabled' => true,
                    ],
                ],
                'text_icon1' => [
                    'type' => 'text',
                    'section' => 'general',
                    'group' => 'states',
                    'label' => __('Icon Text Field', 'do-framework'),
                    'desc' => __('Text field with exclamation icon.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'icon' => 'exclamation triangle',
                    ],
                ],
                'text_icon2' => [
                    'type' => 'password',
                    'section' => 'general',
                    'group' => 'states',
                    'label' => __('Icon Password Field', 'do-framework'),
                    'desc' => __('Password field with star icon.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'icon' => 'star of life',
                    ],
                ],

                // Number Inputs
                'number_1' => [
                    'type' => 'number',
                    'section' => 'general',
                    'group' => 'numbers',
                    'label' => __('Number Field', 'do-framework'),
                    'desc' => __('Default distance in KM between origin and destination.', 'do-framework'),
                    'columns' => 6,
                    'options' => [
                        'unit' => 'KM',
                        'step' => '10',
                        'max' => '500',
                        'min' => '0',
                    ],
                ],
                'number_2' => [
                    'type' => 'number',
                    'section' => 'general',
                    'group' => 'numbers',
                    'label' => __('Number Field with Icon', 'do-framework'),
                    'desc' => __('Number field which has a vertical arrow icon.', 'do-framework'),
                    'columns' => 5,
                    'options' => [
                        'icon' => 'arrows alternate vertical',
                        'unit' => 'px',
                    ],
                ],
                'number_3' => [
                    'type' => 'number',
                    'section' => 'general',
                    'group' => 'numbers',
                    'label' => __('Number Field with Icon (2)', 'do-framework'),
                    'desc' => __('Number field which has a horizontal arrow icon.', 'do-framework'),
                    'columns' => 5,
                    'options' => [
                        'icon' => 'arrows alternate horizontal',
                        'step' => 5,
                        'min' => 0,
                        'unit' => '%',
                    ],
                ],

                // Masked Inputs
                'mask_1' => [
                    'type' => 'text',
                    'section' => 'general',
                    'group' => 'masks',
                    'label' => __('Masked Number Field', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'unit' => 'KM²',
                        'max' => 10000000,
                        'min' => -10000000,
                        'mask' => 'number',
                    ],
                ],
                'mask_2' => [
                    'type' => 'text',
                    'section' => 'general',
                    'group' => 'masks',
                    'label' => __('Masked Currency Field', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'unit' => 'USD',
                        'min' => 0,
                        'mask' => 'number',
                    ],
                ],
                'mask_3' => [
                    'type' => 'text',
                    'section' => 'general',
                    'group' => 'masks',
                    'label' => __('Masked Percentage Field', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'unit' => '%',
                        'max' => 100,
                        'min' => 0,
                        'mask' => 'percentage',
                    ],
                ],
                'mask_4' => [
                    'type' => 'text',
                    'section' => 'general',
                    'group' => 'masks',
                    'label' => __('Masked Phone Field', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'mask' => 'phone',
                    ],
                ],

                // Text Area Inputs
                'textarea_1' => [
                    'type' => 'textarea',
                    'section' => 'general',
                    'group' => 'textareas',
                    'label' => __('Text Area Field with <code>&lt;/head&gt;</code> Code Label.', 'do-framework'),
                    'columns' => 8,
                ],
                'textarea_2' => [
                    'type' => 'textarea',
                    'section' => 'general',
                    'group' => 'textareas',
                    'label' => __('Text Area Field with Placeholder', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'placeholder' => __('Type here some long text..', 'do-framework'),
                    ],
                ],
                'textarea_3' => [
                    'type' => 'textarea',
                    'section' => 'general',
                    'group' => 'textareas',
                    'label' => __('Read-only Text Area Field', 'do-framework'),
                    'value' => __('Read-only text area value.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'readonly' => true,
                    ],
                ],
                'textarea_4' => [
                    'type' => 'textarea',
                    'section' => 'general',
                    'group' => 'textareas',
                    'label' => __('Disabled Text Area Field', 'do-framework'),
                    'value' => __('Disabled text area value.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'disabled' => true,
                    ],
                ],

                // Spatial Inputs
                'alignment' => [
                    'type' => 'align',
                    'section' => 'general',
                    'group' => 'spatial',
                    'label' => __('Alignment Field', 'do-framework'),
                    'desc' => __('Select logo alignment.', 'do-framework'),
                    'columns' => 5,
                ],
                'alignment_2' => [
                    'type' => 'align',
                    'section' => 'general',
                    'group' => 'spatial',
                    'label' => __('Alignment Field (Disabled)', 'do-framework'),
                    'desc' => __('Select paragraph alignment.', 'do-framework'),
                    'default' => 'center',
                    'columns' => 5,
                    'options' => [
                        'justify' => true,
                        'disabled' => true,
                    ],
                ],
                'spatial' => [
                    'type' => 'space',
                    'section' => 'general',
                    'group' => 'spatial',
                    'label' => __('Space Field', 'do-framework'),
                    'desc' => __('Use this field to adjust margin, padding, or spatial values.', 'do-framework'),
                    'columns' => 6,
                ],

                // Dropdown Inputs
                'dropdown_1' => [
                    'type' => 'select',
                    'section' => 'general',
                    'group' => 'dropdowns',
                    'label' => __('Select Field', 'do-framework'),
                    'desc' => __('This select field value cannot be cleared.', 'do-framework'),
                    'columns' => 4,
                    'items' => dofw_data()->terms(),
                    'options' => [
                        'clearable' => false,
                    ],
                ],
                'dropdown_2' => [
                    'type' => 'select',
                    'section' => 'general',
                    'group' => 'dropdowns',
                    'label' => __('Select Field (Google Fonts & Placeholder)', 'do-framework'),
                    'desc' => __('Searchable select field with a placeholder.', 'do-framework'),
                    'columns' => 4,
                    'items' => dofw_data()->google_fonts(),
                    'options' => [
                        'placeholder' => __('Pick a Google font..', 'do-framework'),
                    ],
                ],
                'dropdown_3' => [
                    'type' => 'select',
                    'section' => 'general',
                    'group' => 'dropdowns',
                    'label' => __('Select Field (No Search)', 'do-framework'),
                    'desc' => __('This select field cannot be searched.', 'do-framework'),
                    'columns' => 4,
                    'items' => dofw_data()->terms(),
                    'options' => [
                        'search' => false,
                    ],
                ],
                'dropdown_4' => [
                    'type' => 'country',
                    'section' => 'general',
                    'group' => 'dropdowns',
                    'label' => __('Country Field', 'do-framework'),
                    'desc' => __('This select can be used to select a country.', 'do-framework'),
                    'columns' => 4,
                ],
                'dropdown_5' => [
                    'type' => 'select',
                    'section' => 'general',
                    'group' => 'dropdowns',
                    'label' => __('Select Field (Multiple & Flags)', 'do-framework'),
                    'desc' => __('This select field has labels plus flags.', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        1 => [
                            'label' => __('Egypt', 'do-framework'),
                            'flag' => 'eg',
                        ],
                        2 => [
                            'label' => __('Saudi Arabia', 'do-framework'),
                            'flag' => 'sa',
                        ],
                        3 => [
                            'label' => __('United Arab Emirates', 'do-framework'),
                            'flag' => 'ae',
                        ],
                        4 => [
                            'label' => __('Palestine ❤️', 'do-framework'),
                            'flag' => 'ps',
                        ],
                    ],
                    'options' => [
                        'multiple' => true,
                    ],
                ],
                'dropdown_6' => [
                    'type' => 'select',
                    'section' => 'general',
                    'group' => 'dropdowns',
                    'label' => __('Select Field (Icons)', 'do-framework'),
                    'desc' => __('This select field has labels plus icons.', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        1 => [
                            'label' => __('Felines', 'do-framework'),
                            'icon' => 'cat',
                        ],
                        2 => [
                            'label' => __('Sea Animals', 'do-framework'),
                            'icon' => 'fish',
                        ],
                        3 => [
                            'label' => __('Birds', 'do-framework'),
                            'icon' => 'crow',
                        ],
                    ],
                ],
                'dropdown_7' => [
                    'type' => 'select',
                    'section' => 'general',
                    'group' => 'dropdowns',
                    'label' => __('Select Field (Images)', 'do-framework'),
                    'desc' => __('This select field has labels plus images.', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        1 => [
                            'label' => __('Foo', 'do-framework'),
                            'img' => 'https://picsum.photos/50/50?1',
                        ],
                        2 => [
                            'label' => __('Bar', 'do-framework'),
                            'img' => 'https://picsum.photos/50/50?2',
                        ],
                        3 => [
                            'label' => __('Baz', 'do-framework'),
                            'img' => 'https://picsum.photos/50/50?3',
                        ],
                    ],
                ],
                'dropdown_8' => [
                    'type' => 'select',
                    'section' => 'general',
                    'group' => 'dropdowns',
                    'label' => __('Multiple-Select Field', 'do-framework'),
                    'desc' => __('This select field can have multiple choices.', 'do-framework'),
                    'columns' => 4,
                    'items' => dofw_data()->terms(),
                    'options' => [
                        'multiple' => true,
                    ],
                ],

                // Image Select Inputs
                'image_select_1' => [
                    'type' => 'image_select',
                    'section' => 'general',
                    'group' => 'image_selects',
                    'label' => __('Image-Select Field', 'do-framework'),
                    'desc' => __('Image select inputs are visual choice inputs using pictures.', 'do-framework'),
                    'columns' => 8,
                    'items' => [
                        1 => dofw_asset('sample/choice_1.png'),
                        2 => dofw_asset('sample/choice_2.png'),
                        3 => dofw_asset('sample/choice_3.png'),
                    ],
                ],
                'image_select_2' => [
                    'type' => 'img_select',
                    'section' => 'general',
                    'group' => 'image_selects',
                    'label' => __('Image-Select Field (2)', 'do-framework'),
                    'desc' => __('Image select with a missing picture.', 'do-framework'),
                    'columns' => 8,
                    'items' => [
                        1 => dofw_asset('sample/choice_1.png'),
                        2 => dofw_asset('sample/NO_SUCH_IMAGE_AT_THIS_PATH.png'),
                        3 => dofw_asset('sample/choice_3.png'),
                    ],
                ],

                // Color Picker Inputs
                'color_1' => [
                    'type' => 'color',
                    'section' => 'general',
                    'group' => 'color_pickers',
                    'label' => __('Color Picker Field', 'do-framework'),
                    'desc' => __('This is a color picker using the default <code>simple</code> mode.', 'do-framework'),
                    'columns' => 4,
                ],
                'color_2' => [
                    'type' => 'color',
                    'section' => 'general',
                    'group' => 'color_pickers',
                    'label' => __('Color Picker Field (Advanced)', 'do-framework'),
                    'desc' => __('This is a color picker using the <code>advanced</code> mode.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'mode' => 'advanced',
                    ],
                ],
                'color_3' => [
                    'type' => 'color',
                    'section' => 'general',
                    'group' => 'color_pickers',
                    'label' => __('Color Picker Field (Complex)', 'do-framework'),
                    'desc' => __('This is a color picker using the <code>complex</code> mode.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'mode' => 'complex',
                        'color_icon' => 'paint brush',
                        'picker_icon' => 'paint roller',
                    ],
                ],
                'color_4' => [
                    'type' => 'color',
                    'section' => 'general',
                    'group' => 'color_pickers',
                    'label' => __('Color Picker Field (Palette)', 'do-framework'),
                    'desc' => __('This is a color picker using the <code>palette</code> mode.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'mode' => 'palette',
                        'color_icon' => 'highlighter',
                        'picker_icon' => 'palette',
                    ],
                ],

                // Icon Picker Inputs
                'icon_1' => [
                    'type' => 'icon',
                    'section' => 'general',
                    'group' => 'icon_pickers',
                    'label' => __('Icon Picker Field (All Icons)', 'do-framework'),
                    'desc' => __('This is an icon picker with all icons listed.', 'do-framework'),
                    'columns' => 4,
                ],
                'icon_2' => [
                    'type' => 'icon',
                    'section' => 'general',
                    'group' => 'icon_pickers',
                    'label' => __('Icon Picker Field (Custom Icons List)', 'do-framework'),
                    'desc' => __('This is an icon picker with custom specific icons list.', 'do-framework'),
                    'columns' => 4,
                    'items' => [
                        'fas fa-audio-description',
                        'fas fa-address-book',
                        'fas fa-address-card',
                        'fas fa-adjust',
                        'fas fa-align-center',
                        'fas fa-align-justify',
                        'fas fa-align-left',
                        'fas fa-align-right',
                        'fas fa-ambulance',
                    ],
                ],
                'icon_3' => [
                    'type' => 'icon',
                    'section' => 'general',
                    'group' => 'icon_pickers',
                    'label' => __('Icon Picker Field (Brands Icons List)', 'do-framework'),
                    'desc' => __('This is an icon picker with popular brands icons list.', 'do-framework'),
                    'columns' => 4,
                    'items' => dofw_data()->brands_icons(),
                ],
                'icon_4' => [
                    'type' => 'icon',
                    'section' => 'general',
                    'group' => 'icon_pickers',
                    'label' => __('Icon Picker Field (Disabled)', 'do-framework'),
                    'desc' => __('This is an icon picker with social icons list.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'disabled' => true,
                    ],
                ],

                // Date Inpus
                'date_1' => [
                    'type' => 'date',
                    'section' => 'general',
                    'group' => 'dates',
                    'label' => __('Date Field (Date-Time)', 'do-framework'),
                    'desc' => __('This is a date-time input.', 'do-framework'),
                    'columns' => 4,
                ],
                'date_2' => [
                    'type' => 'date',
                    'section' => 'general',
                    'group' => 'dates',
                    'label' => __('Date Field (Date Only)', 'do-framework'),
                    'desc' => __('This is a date only input.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'mode' => 'date',
                    ],
                ],
                'date_3' => [
                    'type' => 'date',
                    'section' => 'general',
                    'group' => 'dates',
                    'label' => __('Date Field (Time Only)', 'do-framework'),
                    'desc' => __('This is a time only input.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'mode' => 'time',
                    ],
                ],
                'date_4' => [
                    'type' => 'date',
                    'section' => 'general',
                    'group' => 'dates',
                    'label' => __('Date Field (Disabled)', 'do-framework'),
                    'desc' => __('This is a disabled date input.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'disabled' => true,
                    ],
                ],

                // Slider Inputs
                'slider_1' => [
                    'type' => 'slider',
                    'section' => 'general',
                    'group' => 'sliders',
                    'label' => __('Slider Field (Simple)', 'do-framework'),
                    'desc' => __('This is a simple slider input.', 'do-framework'),
                    'columns' => 4,
                ],
                'slider_2' => [
                    'type' => 'slider',
                    'section' => 'general',
                    'group' => 'sliders',
                    'label' => __('Slider Field (Labels)', 'do-framework'),
                    'desc' => __('This is a simple labeled slider.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'labeled' => true,
                        'step' => 1,
                        'max' => 10,
                    ],
                ],
                'slider_3' => [
                    'type' => 'slider',
                    'section' => 'general',
                    'group' => 'sliders',
                    'label' => __('Slider Field (Labels & Ticks)', 'do-framework'),
                    'desc' => __('This is a simple labeled slider with ticks.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'labeled' => true,
                        'ticks' => true,
                        'step' => 1,
                        'max' => 10,
                    ],
                ],
                'slider_4' => [
                    'type' => 'slider',
                    'section' => 'general',
                    'group' => 'sliders',
                    'label' => __('Slider Field (Labeled Range)', 'do-framework'),
                    'desc' => __('This is a range slider.', 'do-framework'),
                    'columns' => 4,
                    'options' => [
                        'labeled' => true,
                        'range' => true,
                        'step' => 1,
                        'start' => 2,
                        'end' => 5,
                        'max' => 10,
                    ],
                ],

                // Editors Inputs
                'code_js' => [
                    'type' => 'code',
                    'section' => 'general',
                    'group' => 'editors',
                    'label' => __('Code Editor (Javascript)', 'do-framework'),
                    'desc' => __('This is the default code editor configuration.', 'do-framework'),
                    'columns' => 8,
                ],
                'code_css' => [
                    'type' => 'code',
                    'section' => 'general',
                    'group' => 'editors',
                    'label' => __('Code Editor (CSS)', 'do-framework'),
                    'desc' => __('This is a custom code editor configuration using <code>css</code> syntax and <code>dreamweaver</code> theme.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'language' => 'css',
                        'theme' => 'dreamweaver',
                    ],
                ],
                'code_markdown' => [
                    'type' => 'code',
                    'section' => 'general',
                    'group' => 'editors',
                    'label' => __('Code Editor (Markdown)', 'do-framework'),
                    'desc' => __('This is a custom code editor configuration using <code>markdown</code> syntax and <code>ambiance</code> theme.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'language' => 'markdown',
                        'theme' => 'ambiance',
                    ],
                ],
                'code_php' => [
                    'type' => 'code',
                    'section' => 'general',
                    'group' => 'editors',
                    'label' => __('Code Editor (PHP)', 'do-framework'),
                    'desc' => __('This is a custom code editor configuration using <code>php</code> syntax and <code>github</code> theme.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'language' => 'php',
                        'theme' => 'github',
                    ],
                ],
                'wp_editor' => [
                    'type' => 'editor',
                    'section' => 'general',
                    'group' => 'editors',
                    'label' => __('WordPress Editor', 'do-framework'),
                    'desc' => __('This is the WordPress editor field.', 'do-framework'),
                    'columns' => 8,
                ],
                'wp_editor_disabled' => [
                    'type' => 'editor',
                    'section' => 'general',
                    'group' => 'editors',
                    'label' => __('WordPress Editor (Disabled)', 'do-framework'),
                    'desc' => __('This is the WordPress editor field.', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'disabled' => true,
                    ],
                ],
            ]);

            // Advanced: Archives Fields
            $advanced->add_fields([
                'categories_layout' => [
                    'type' => 'image_select',
                    'section' => 'archives',
                    'group' => 'categories',
                    'label' => __('Categories Page Layout', 'do-framework'),
                    'desc' => __('Categories page layout.', 'do-framework'),
                    'items' => [
                        1 => dofw_asset('sample/categories/cat_1.png'),
                        2 => dofw_asset('sample/categories/cat_2.png'),
                        3 => dofw_asset('sample/categories/cat_3.png'),
                        4 => dofw_asset('sample/categories/cat_4.png'),
                        5 => dofw_asset('sample/categories/cat_5.png'),
                    ],
                ],
            ]);

            // Advanced: Single Post Fields
            $advanced->add_fields([
                // Single Post Settings
                'enable_author' => [
                    'type' => 'switch',
                    'section' => 'single_post',
                    'group' => 'single_post_settings',
                    'label' => __('Display author', 'do-framework'),
                    'desc' => __('Author info', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_category' => [
                    'type' => 'switch',
                    'section' => 'single_post',
                    'group' => 'single_post_settings',
                    'label' => __('Display category', 'do-framework'),
                    'desc' => __('Category', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_tags' => [
                    'type' => 'switch',
                    'section' => 'single_post',
                    'group' => 'single_post_settings',
                    'label' => __('Display tags', 'do-framework'),
                    'desc' => __('Tags', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_read_time' => [
                    'type' => 'switch',
                    'section' => 'single_post',
                    'group' => 'single_post_settings',
                    'label' => __('Display read time', 'do-framework'),
                    'desc' => __('Read time', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_created' => [
                    'type' => 'switch',
                    'section' => 'single_post',
                    'group' => 'single_post_settings',
                    'label' => __('Display created', 'do-framework'),
                    'desc' => __('Created', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_favorite' => [
                    'type' => 'switch',
                    'section' => 'single_post',
                    'group' => 'single_post_settings',
                    'label' => __('Display favorite', 'do-framework'),
                    'desc' => __('Favorite', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_share' => [
                    'type' => 'switch',
                    'section' => 'single_post',
                    'group' => 'single_post_settings',
                    'label' => __('Display share', 'do-framework'),
                    'desc' => __('Share', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_tts' => [
                    'type' => 'switch',
                    'section' => 'single_post',
                    'group' => 'single_post_settings',
                    'label' => __('Display text to speech', 'do-framework'),
                    'desc' => __('Text to speech', 'do-framework'),
                    'columns' => 4,
                ],

                // Single Post Layout
                'single_post_layout' => [
                    'type' => 'image_select',
                    'section' => 'single_post',
                    'group' => 'single_post_layout',
                    'label' => __('Single Post Layout', 'do-framework'),
                    'desc' => __('Single post layout.', 'do-framework'),
                    'items' => [
                        'cardPost' => dofw_asset('sample/blocks/cardPost.png'),
                        'endThumbPost' => dofw_asset('sample/blocks/endThumbPost.png'),
                        'featuredMetaPost' => dofw_asset('sample/blocks/featuredMetaPost.png'),
                        'featuredPost' => dofw_asset('sample/blocks/featuredPost.png'),
                        'imagePost' => dofw_asset('sample/blocks/imagePost.png'),
                        'minimalPost' => dofw_asset('sample/blocks/minimalPost.png'),
                        'simplePost' => dofw_asset('sample/blocks/simplePost.png'),
                        'startThumbPost' => dofw_asset('sample/blocks/startThumbPost.png'),
                        'startThumbPostCompact' => dofw_asset('sample/blocks/startThumbPostCompact.png'),
                    ],
                ],
            ]);

            // Advanced: Share Buttons Fields
            $advanced->add_fields([
                'enable_facebook' => [
                    'type' => 'switch',
                    'section' => 'share_buttons',
                    'group' => 'share_buttons_settings',
                    'label' => __('Display Facebook', 'do-framework'),
                    'desc' => __('Facebook', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_linkedin' => [
                    'type' => 'switch',
                    'section' => 'share_buttons',
                    'group' => 'share_buttons_settings',
                    'label' => __('Display Linkedin', 'do-framework'),
                    'desc' => __('Linkedin', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_twitter' => [
                    'type' => 'switch',
                    'section' => 'share_buttons',
                    'group' => 'share_buttons_settings',
                    'label' => __('Display Twitter', 'do-framework'),
                    'desc' => __('Twitter', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_vk' => [
                    'type' => 'switch',
                    'section' => 'share_buttons',
                    'group' => 'share_buttons_settings',
                    'label' => __('Display VK', 'do-framework'),
                    'desc' => __('VK', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_tumblr' => [
                    'type' => 'switch',
                    'section' => 'share_buttons',
                    'group' => 'share_buttons_settings',
                    'label' => __('Display Tumblr', 'do-framework'),
                    'desc' => __('Tumblr', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_pinterest' => [
                    'type' => 'switch',
                    'section' => 'share_buttons',
                    'group' => 'share_buttons_settings',
                    'label' => __('Display Pinterest', 'do-framework'),
                    'desc' => __('Pinterest', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_email' => [
                    'type' => 'switch',
                    'section' => 'share_buttons',
                    'group' => 'share_buttons_settings',
                    'label' => __('Display Email', 'do-framework'),
                    'desc' => __('Email', 'do-framework'),
                    'columns' => 4,
                ],
                'enable_print' => [
                    'type' => 'switch',
                    'section' => 'share_buttons',
                    'group' => 'share_buttons_settings',
                    'label' => __('Display Print', 'do-framework'),
                    'desc' => __('Print', 'do-framework'),
                    'columns' => 4,
                ],
            ]);

            // Advanced: Ads Fields
            $advanced->add_fields([
                'admob_banner_enable' => [
                    'type' => 'switch',
                    'section' => 'ads',
                    'group' => 'ads_admob_banner',
                    'label' => __('Enable Admob Banner', 'do-framework'),
                    'desc' => __('Admob Banner', 'do-framework'),
                    'columns' => 4,
                ],
                'admob_banner_android_id' => [
                    'type' => 'text',
                    'section' => 'ads',
                    'group' => 'ads_admob_banner',
                    'label' => __('Admob Banner Android ID', 'do-framework'),
                    'desc' => __('Enter Admob android publisher identifier.', 'do-framework'),
                    'columns' => 6,
                    'show_if' => [
                        'admob_banner_enable' => 'true',
                    ],
                ],
                'admob_banner_ios_id' => [
                    'type' => 'text',
                    'section' => 'ads',
                    'group' => 'ads_admob_banner',
                    'label' => __('Admob Banner iOS ID', 'do-framework'),
                    'desc' => __('Enter Admob iOS publisher identifier.', 'do-framework'),
                    'columns' => 6,
                    'show_if' => [
                        'admob_banner_enable' => 'true',
                    ],
                ],
            ]);

            // Advanced: Typography Fields
            $advanced->add_fields([
                'primary_font' => [
                    'type' => 'select',
                    'section' => 'typography',
                    'label' => __('Primary Font', 'do-framework'),
                    'desc' => __('Select a font family to assing as the primary theme font.', 'do-framework'),
                    'columns' => 8,
                    'items' => dofw_data()->google_fonts(),
                    'options' => [
                        'placeholder' => __('Pick a Google font..', 'do-framework'),
                    ],
                ],
                'base_alignment' => [
                    'type' => 'align',
                    'section' => 'typography',
                    'label' => __('Text Alignment', 'do-framework'),
                    'desc' => __('Default text alignment.', 'do-framework'),
                    'default' => 'left',
                    'columns' => 2,
                ],
                'base_font_size' => [
                    'type' => 'number',
                    'section' => 'typography',
                    'label' => __('Base Font Size', 'do-framework'),
                    'desc' => __('Default is "16px".', 'do-framework'),
                    'default' => 16,
                    'columns' => 2,
                    'options' => [
                        'icon' => 'font',
                        'unit' => 'px',
                        'min' => 14,
                        'max' => 24,
                    ],
                ],
                'primary_color' => [
                    'type' => 'color',
                    'section' => 'typography',
                    'label' => __('Primary Color', 'do-framework'),
                    'desc' => __('Primary theme color.', 'do-framework'),
                    'default' => '#1c62db',
                    'columns' => 4,
                ],
            ]);

            // Advanced: Translations Fields
            $advanced->add_fields([
                'home' => [
                    'type' => 'text',
                    'section' => 'translations',
                    'label' => __('Home', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'placeholder' => __('Phrase translation', 'do-framework'),
                    ],
                ],
                'skip' => [
                    'type' => 'text',
                    'section' => 'translations',
                    'label' => __('Skip', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'placeholder' => __('Phrase translation', 'do-framework'),
                    ],
                ],
                'done' => [
                    'type' => 'text',
                    'section' => 'translations',
                    'label' => __('Done', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'placeholder' => __('Phrase translation', 'do-framework'),
                    ],
                ],
                'save' => [
                    'type' => 'text',
                    'section' => 'translations',
                    'label' => __('Save', 'do-framework'),
                    'columns' => 8,
                    'options' => [
                        'placeholder' => __('Phrase translation', 'do-framework'),
                    ],
                ],
            ]);
        }

        return $this;
    }

    /**
     * Set Pages Configuration.
     *
     * @param array $config Default Pages Configuration
     * @return self
     */
    protected function _set_config(array $config = [])
    {
        $config = wp_parse_args($config, static::CONFIG);

        $this->_config = $config;

        return $this;
    }

    /**
     * Check if a given page is enabled by configuration.
     *
     * @param string $id
     * @return bool
     */
    protected function _page_enabled($id)
    {
        $enabled = false;

        foreach ($this->_config as $config) {
            if (isset($config['id']) && $config['id'] === $id) {
                return isset($config['enabled']) && $config['enabled'] === true;
            }
        }

        return $enabled;
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:27:"\Do_Framework_Default_Pages";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\Do_Framework_Default_Pages";s:36:" phpDocumentor\Reflection\Fqsen name";s:26:"Do_Framework_Default_Pages";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:43:"Default Plugin Registered Pages Controller.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:179:"This class defines all code necessary to handle default plugin pages, which are registered in
normal operation mode which is primarily used for showcasing the plugin capabilities.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:4:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Since":3:{s:7:" * name";s:5:"since";s:53:" phpDocumentor\Reflection\DocBlock\Tags\Since version";s:5:"1.0.0";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:12:"Do_Framework";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:10:"subpackage";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:21:"Do_Framework/includes";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:3;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:12:"Dedulab Team";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:16:"info@dedulab.com";s:14:" * description";N;}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:15;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";N;s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:8:{s:38:"\Do_Framework_Default_Pages::NAMESPACE";O:37:"phpDocumentor\Reflection\Php\Constant":5:{s:44:" phpDocumentor\Reflection\Php\Constant fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:38:"\Do_Framework_Default_Pages::NAMESPACE";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"NAMESPACE";}s:47:" phpDocumentor\Reflection\Php\Constant docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:14:"Set Namespace.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:30;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Constant value";s:8:"'GLOBAL'";s:47:" phpDocumentor\Reflection\Php\Constant location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:33;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:49:" phpDocumentor\Reflection\Php\Constant visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}}s:41:"\Do_Framework_Default_Pages::ENABLE_PAGES";O:37:"phpDocumentor\Reflection\Php\Constant":5:{s:44:" phpDocumentor\Reflection\Php\Constant fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:41:"\Do_Framework_Default_Pages::ENABLE_PAGES";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"ENABLE_PAGES";}s:47:" phpDocumentor\Reflection\Php\Constant docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:20:"Enable Adding Pages.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:35;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Constant value";s:5:"\true";s:47:" phpDocumentor\Reflection\Php\Constant location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:38;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:49:" phpDocumentor\Reflection\Php\Constant visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}}s:41:"\Do_Framework_Default_Pages::ENABLE_DEMOS";O:37:"phpDocumentor\Reflection\Php\Constant":5:{s:44:" phpDocumentor\Reflection\Php\Constant fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:41:"\Do_Framework_Default_Pages::ENABLE_DEMOS";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"ENABLE_DEMOS";}s:47:" phpDocumentor\Reflection\Php\Constant docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:20:"Enable Adding Demos.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:40;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Constant value";s:6:"\false";s:47:" phpDocumentor\Reflection\Php\Constant location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:43;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:49:" phpDocumentor\Reflection\Php\Constant visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}}s:43:"\Do_Framework_Default_Pages::ENABLE_PLUGINS";O:37:"phpDocumentor\Reflection\Php\Constant":5:{s:44:" phpDocumentor\Reflection\Php\Constant fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:43:"\Do_Framework_Default_Pages::ENABLE_PLUGINS";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"ENABLE_PLUGINS";}s:47:" phpDocumentor\Reflection\Php\Constant docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:22:"Enable Adding Plugins.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:45;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Constant value";s:6:"\false";s:47:" phpDocumentor\Reflection\Php\Constant location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:48;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:49:" phpDocumentor\Reflection\Php\Constant visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}}s:35:"\Do_Framework_Default_Pages::CONFIG";O:37:"phpDocumentor\Reflection\Php\Constant":5:{s:44:" phpDocumentor\Reflection\Php\Constant fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:35:"\Do_Framework_Default_Pages::CONFIG";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"CONFIG";}s:47:" phpDocumentor\Reflection\Php\Constant docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:38:"Default Pages Configuration Structure.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:50;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Constant value";s:1540:"['general' => ['enabled' => \true, 'id' => 'dofw-general', 'parent' => \null, 'menu_title' => 'Dedulab', 'menu_side_title' => 'General', 'title' => 'General', 'type' => 'form', 'position' => 2, 'icon' => \DOFW_IMAGES_URL . 'dedulab.svg', 'tab_link' => ['icon' => 'cog']], 'demos' => ['enabled' => \false, 'id' => 'dofw-demos', 'parent' => 'dofw-general', 'menu_title' => 'Demos', 'title' => 'Demos', 'type' => 'demos', 'position' => 0, 'tab_link' => ['icon' => 'swatchbook']], 'plugins' => ['enabled' => \false, 'id' => 'dofw-plugins', 'parent' => 'dofw-general', 'menu_title' => 'Plugins', 'title' => 'Plugins', 'type' => 'plugins', 'position' => 0, 'tab_link' => ['icon' => 'plug']], 'theme' => ['enabled' => \false, 'id' => 'dofw-theme', 'parent' => 'dofw-general', 'menu_title' => 'Theme Styles', 'title' => 'Theme Styles', 'type' => 'form', 'position' => 0, 'tab_link' => ['icon' => 'paint brush']], 'advanced' => ['enabled' => \true, 'id' => 'dofw-advanced', 'parent' => 'dofw-general', 'menu_title' => 'Advanced', 'title' => 'Advanced', 'type' => 'form', 'position' => 0, 'tab_link' => ['icon' => 'cogs']], 'backup' => ['enabled' => \true, 'id' => 'dofw-backup', 'parent' => 'dofw-general', 'menu_title' => 'Backup', 'title' => 'Backup', 'type' => 'backup', 'position' => 0, 'tab_link' => ['icon' => 'history']], 'support' => ['enabled' => \true, 'id' => 'dofw-support', 'parent' => 'dofw-general', 'menu_title' => 'Support', 'title' => 'Support', 'type' => 'dashboard', 'position' => 0, 'tab_link' => ['icon' => 'question circle']]]";s:47:" phpDocumentor\Reflection\Php\Constant location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:53;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:49:" phpDocumentor\Reflection\Php\Constant visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}}s:34:"\Do_Framework_Default_Pages::DEMOS";O:37:"phpDocumentor\Reflection\Php\Constant":5:{s:44:" phpDocumentor\Reflection\Php\Constant fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:34:"\Do_Framework_Default_Pages::DEMOS";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"DEMOS";}s:47:" phpDocumentor\Reflection\Php\Constant docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:19:"Default Demos List.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:142;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Constant value";s:983:"['main' => ['enabled' => \true, 'is_pro' => \false, 'title' => 'Main', 'desc' => 'Main Demo', 'demo_url' => 'http://dedulab.com', 'screenshot_url' => 'https://picsum.photos/385/320?1', 'plugins' => [['name' => 'Elementor', 'slug' => 'elementor']], 'template_url' => ['content' => '', 'options' => '', 'widgets' => '']], 'preschool' => ['enabled' => \true, 'is_pro' => \false, 'title' => 'Preschool', 'desc' => 'Preschool Demo', 'demo_url' => 'http://dedulab.com', 'screenshot_url' => 'https://picsum.photos/385/320?2', 'plugins' => [['name' => 'Elementor', 'slug' => 'elementor']], 'template_url' => ['content' => '', 'options' => '', 'widgets' => '']], 'rtl' => ['enabled' => \true, 'is_pro' => \false, 'title' => 'Arabic RTL', 'desc' => 'Arabic Demo RTL', 'demo_url' => 'http://dedulab.com', 'screenshot_url' => 'https://picsum.photos/385/320?3', 'plugins' => [['name' => 'Elementor', 'slug' => 'elementor']], 'template_url' => ['content' => '', 'options' => '', 'widgets' => '']]]";s:47:" phpDocumentor\Reflection\Php\Constant location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:145;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:49:" phpDocumentor\Reflection\Php\Constant visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}}s:45:"\Do_Framework_Default_Pages::REQUIRED_PLUGINS";O:37:"phpDocumentor\Reflection\Php\Constant":5:{s:44:" phpDocumentor\Reflection\Php\Constant fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:45:"\Do_Framework_Default_Pages::REQUIRED_PLUGINS";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"REQUIRED_PLUGINS";}s:47:" phpDocumentor\Reflection\Php\Constant docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:30:"Default Required Plugins List.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:196;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Constant value";s:662:"['elementor' => ['enabled' => \true, 'icon' => 'https://ps.w.org/elementor/assets/icon-256x256.png', 'source' => 'https://downloads.wordpress.org/plugin/elementor.3.2.4.zip', 'name' => 'Elementor', 'desc' => 'The Elementor Website Builder has it all: drag and drop page builder, pixel perfect design, mobile responsive editing, and more. Get started now!'], 'acf-extended' => ['enabled' => \true, 'icon' => 'https://ps.w.org/acf-extended/assets/icon-128x128.png', 'source' => 'https://downloads.wordpress.org/plugin/acf-extended.0.8.8.3.zip', 'name' => 'Advanced Custom Fields', 'desc' => 'Customize WordPress with powerful, professional and intuitive fields.']]";s:47:" phpDocumentor\Reflection\Php\Constant location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:199;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:49:" phpDocumentor\Reflection\Php\Constant visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}}s:48:"\Do_Framework_Default_Pages::RECOMMENDED_PLUGINS";O:37:"phpDocumentor\Reflection\Php\Constant":5:{s:44:" phpDocumentor\Reflection\Php\Constant fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:48:"\Do_Framework_Default_Pages::RECOMMENDED_PLUGINS";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"RECOMMENDED_PLUGINS";}s:47:" phpDocumentor\Reflection\Php\Constant docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:33:"Default Recommended Plugins List.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:223;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Constant value";s:1092:"['regenerate-thumbnails' => ['enabled' => \true, 'icon' => 'https://ps.w.org/regenerate-thumbnails/assets/icon-128x128.png', 'source' => 'https://downloads.wordpress.org/plugin/regenerate-thumbnails.3.1.5.zip', 'name' => 'Regenerate Thumbnails', 'desc' => 'Regenerate Thumbnails allows you to regenerate all thumbnail sizes for one or more images that have been uploaded to your Media Library.'], 'contact-form-7' => ['enabled' => \true, 'icon' => 'https://ps.w.org/contact-form-7/assets/icon.svg', 'source' => 'https://downloads.wordpress.org/plugin/contact-form-7.5.4.1.zip', 'name' => 'Contact Form 7', 'desc' => 'Contact Form 7 can manage multiple contact forms, plus you can customize the form and the mail contents flexibly with simple markup. '], 'menu-icons' => ['enabled' => \true, 'icon' => 'https://ps.w.org/menu-icons/assets/icon-128x128.png', 'source' => 'https://downloads.wordpress.org/plugin/menu-icons.zip', 'name' => 'Menu Icons by ThemeIsle', 'desc' => 'This plugin gives you the ability to add icons to your menu items, similar to the look of the latest dashboard menu.']]";s:47:" phpDocumentor\Reflection\Php\Constant location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:226;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:49:" phpDocumentor\Reflection\Php\Constant visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}}}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:8:{s:43:"\Do_Framework_Default_Pages::$primary_title";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:43:"\Do_Framework_Default_Pages::$primary_title";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"primary_title";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:28:"Default Primary Panel Title.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:15:" * variableName";s:0:"";s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:250;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:9:"'Dedulab'";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:255;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:42:"\Do_Framework_Default_Pages::$default_logo";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:42:"\Do_Framework_Default_Pages::$default_logo";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"default_logo";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:28:"Default Primary Panel Title.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:15:" * variableName";s:0:"";s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:257;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:13:"'dedulab.svg'";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:262;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:43:"\Do_Framework_Default_Pages::$item_store_id";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:43:"\Do_Framework_Default_Pages::$item_store_id";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"item_store_id";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:14:"Item Store ID.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:15:" * variableName";s:0:"";s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:264;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:4:"'-1'";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:269;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:45:"\Do_Framework_Default_Pages::$item_store_link";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:45:"\Do_Framework_Default_Pages::$item_store_link";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"item_store_link";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:16:"Item Store Link.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:15:" * variableName";s:0:"";s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:271;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:20:"'https://envato.com'";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:276;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:47:"\Do_Framework_Default_Pages::$main_support_link";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:47:"\Do_Framework_Default_Pages::$main_support_link";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"main_support_link";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:18:"Main Support Link.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:15:" * variableName";s:0:"";s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:278;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:3:"'#'";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:283;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:50:"\Do_Framework_Default_Pages::$contact_support_link";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:50:"\Do_Framework_Default_Pages::$contact_support_link";s:36:" phpDocumentor\Reflection\Fqsen name";s:20:"contact_support_link";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:30:"Direct Support Link (Contact).";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:15:" * variableName";s:0:"";s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:285;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:3:"'#'";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:290;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:38:"\Do_Framework_Default_Pages::$kb_links";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:38:"\Do_Framework_Default_Pages::$kb_links";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"kb_links";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:21:"Knowledge Base Links.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:15:" * variableName";s:0:"";s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:292;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:481:"['#getting-started' => 'Getting Started', '#getting-help' => 'Getting Help', '#maintenance' => 'Maintenance', '#plugins-and-add-ons' => 'Plugins and Add-ons', '#customizer' => 'Customizer', '#troubleshooting' => 'Troubleshooting', '#header' => 'Header', '#footer' => 'Footer', '#logo' => 'Logo', '#sidebar' => 'Sidebar', '#blog' => 'Blog', '#page-options' => 'Page Options', '#translation' => 'Translation', '#video-tutorials' => 'Video Tutorials', '#development' => 'Development']";s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:297;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}s:37:"\Do_Framework_Default_Pages::$_config";O:37:"phpDocumentor\Reflection\Php\Property":8:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\Do_Framework_Default_Pages::$_config";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"_config";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:27:"Stored pages configuration.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Var_":4:{s:15:" * variableName";s:0:"";s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:3:"var";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:315;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:2:"[]";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:320;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:16:{s:34:"\Do_Framework_Default_Pages::run()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:13:"Run handlers.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:4:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Since":3:{s:7:" * name";s:5:"since";s:53:" phpDocumentor\Reflection\DocBlock\Tags\Since version";s:5:"1.0.0";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"config";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:27:"Default Pages Configuration";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\Do_Framework_Default_Pages";s:36:" phpDocumentor\Reflection\Fqsen name";s:26:"Do_Framework_Default_Pages";}}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:3;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Example":5:{s:56:" phpDocumentor\Reflection\DocBlock\Tags\Example filePath";s:7:"$config";s:53:" phpDocumentor\Reflection\DocBlock\Tags\Example isURI";b:1;s:60:" phpDocumentor\Reflection\DocBlock\Tags\Example startingLine";i:1;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Example lineCount";i:0;s:55:" phpDocumentor\Reflection\DocBlock\Tags\Example content";s:552:"Here is an example of configurations array:

```php
$config = [
     // Override dashboard page options
     'dashboard' => [ 'enabled' => true ],

     // Override demos page options
     'demos' => [ 'enabled' => true ],

     // Override plugins page options
     'plugins' => [ 'enabled' => true ],

     // Override general page options
     'general' => [ 'enabled' => false ],

     // Override advanced page options
     'advanced' => [ 'enabled' => false ],

     // Override backup page options
     'backup' => [ 'enabled' => false ],
];
```";}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:322;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:34:"\Do_Framework_Default_Pages::run()";s:36:" phpDocumentor\Reflection\Fqsen name";s:3:"run";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:1;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"config";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:353;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:41:"\Do_Framework_Default_Pages::setup_item()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:23:"Setup item information.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Self_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:369;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:41:"\Do_Framework_Default_Pages::setup_item()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"setup_item";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:374;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:45:"\Do_Framework_Default_Pages::register_pages()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:34:"Register the default plugin pages.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"config";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:27:"Default Pages Configuration";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Self_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:404;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:45:"\Do_Framework_Default_Pages::register_pages()";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"register_pages";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"config";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:410;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:43:"\Do_Framework_Default_Pages::_add_plugins()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:25:"Initialize & add plugins.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Self_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:421;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:43:"\Do_Framework_Default_Pages::_add_plugins()";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"_add_plugins";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:426;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:41:"\Do_Framework_Default_Pages::_add_demos()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:23:"Initialize & add demos.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Self_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:443;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:41:"\Do_Framework_Default_Pages::_add_demos()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"_add_demos";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:448;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:41:"\Do_Framework_Default_Pages::_add_pages()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:23:"Initialize & add pages.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Self_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:461;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:41:"\Do_Framework_Default_Pages::_add_pages()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"_add_pages";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:466;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:50:"\Do_Framework_Default_Pages::_add_pages_sections()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:20:"Add pages' sections.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Self_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:494;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:50:"\Do_Framework_Default_Pages::_add_pages_sections()";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"_add_pages_sections";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:499;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:48:"\Do_Framework_Default_Pages::_add_pages_fields()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:18:"Add pages' fields.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Self_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:507;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:48:"\Do_Framework_Default_Pages::_add_pages_fields()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"_add_pages_fields";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:512;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:52:"\Do_Framework_Default_Pages::_add_general_sections()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:26:"Add General Page Sections.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Self_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:520;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:52:"\Do_Framework_Default_Pages::_add_general_sections()";s:36:" phpDocumentor\Reflection\Fqsen name";s:21:"_add_general_sections";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:525;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:50:"\Do_Framework_Default_Pages::_add_general_fields()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:23:"Add General Page Fields";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Self_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:595;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:50:"\Do_Framework_Default_Pages::_add_general_fields()";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"_add_general_fields";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:600;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:50:"\Do_Framework_Default_Pages::_add_theme_sections()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:24:"Add Theme Page Sections.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Self_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1655;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:50:"\Do_Framework_Default_Pages::_add_theme_sections()";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"_add_theme_sections";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1660;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:48:"\Do_Framework_Default_Pages::_add_theme_fields()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:21:"Add Theme Page Fields";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Self_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1686;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:48:"\Do_Framework_Default_Pages::_add_theme_fields()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"_add_theme_fields";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1691;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:53:"\Do_Framework_Default_Pages::_add_advanced_sections()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:27:"Add Advanced Page Sections.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Self_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1746;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:53:"\Do_Framework_Default_Pages::_add_advanced_sections()";s:36:" phpDocumentor\Reflection\Fqsen name";s:22:"_add_advanced_sections";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1751;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:51:"\Do_Framework_Default_Pages::_add_advanced_fields()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:24:"Add Advanced Page Fields";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Self_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1805;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:51:"\Do_Framework_Default_Pages::_add_advanced_fields()";s:36:" phpDocumentor\Reflection\Fqsen name";s:20:"_add_advanced_fields";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1810;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:42:"\Do_Framework_Default_Pages::_set_config()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:24:"Set Pages Configuration.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"config";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:27:"Default Pages Configuration";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Self_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3064;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:42:"\Do_Framework_Default_Pages::_set_config()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"_set_config";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"config";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3070;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:44:"\Do_Framework_Default_Pages::_page_enabled()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:50:"Check if a given page is enabled by configuration.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:2:"id";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Boolean":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3079;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:44:"\Do_Framework_Default_Pages::_page_enabled()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"_page_enabled";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:2:"id";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3085;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:1:{s:22:"\DOFW\Traits\Singleton";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:22:"\DOFW\Traits\Singleton";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"Singleton";}}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:26;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";